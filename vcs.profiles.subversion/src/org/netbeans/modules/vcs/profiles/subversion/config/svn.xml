<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE vcsconfiguration PUBLIC '-//NetBeans//DTD VCS Configuration 1.1//EN' 'http://www.netbeans.org/dtds/vcs-configuration-1_1.dtd'>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans.
The Initial Developer of the Original Code is Steve Benigan.
Portions created by Steve Benigan are Copyright (C) 2004.
Contributor(s): Steve Benigan.
-->


<configuration>
    <label>getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(SVN_Label)</label>
    
    <os>
        <compatible>"Unix", "Windows"</compatible>
    </os>
    
    <condition var="IS_WINDOWS">
        <var name="os.name" valueContainsIgnoreCase="WINDOWS"/>
    </condition>

    <variables>
        <variable basic="true" executable="true" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_CONFIG_DIR)" localDir="true" localFile="false" name="CONFIGDIR_G" order="8">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_D3_DIFF)" localDir="false" localFile="true" name="DIFF3CMD_G" order="6">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_D_DIFF)" localDir="false" localFile="true" name="DIFFCMD_G" order="5">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_D_MESSAGE)" localDir="false" localFile="false" name="D_MESSAGE" order="4">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_D_EDITOR)" localDir="false" localFile="true" name="EDITORCMD_G" order="7">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_ENCODING)" localDir="false" localFile="false" name="ENCODING_G" order="12">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_NOAUTHCACHE)" localDir="false" localFile="false" name="NOAUTHCACHE_G" order="11">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_NON_Interactive)" localDir="false" localFile="false" name="NONINTERACTIVE_G" order="10">
            <value xml:space="preserve">true</value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_Password)" localDir="false" localFile="false" name="PWORD_G" order="2">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_Quiet)" localDir="false" localFile="false" name="QUIET_G" order="9">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_URL)" localDir="false" localFile="false" name="REPOSITORY_URL" order="0">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_Revision)" localDir="false" localFile="false" name="REVISION_G" order="3">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="true" executable="false" label="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(INPUT_User)" localDir="false" localFile="false" name="USER_G" order="1">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="false" name="AUTH">
            <value xml:space="preserve">$[? USER][--username ${QUSER} ][]$[? PWORD][--password ${QPWORD} ][]</value>
        </variable>
        <variable basic="false" name="CONFIGDIR">
            <value xml:space="preserve">$[? CONFIGDIR_U][--config-dir ${QUOTE}${CONFIGDIR_U}${QUOTE} ][$[? CONFIGDIR_G][--config-dir ${QUOTE}${CONFIGDIR_G}${QUOTE} ][]]</value>
        </variable>
        <variable basic="false" name="CONFIG_INPUT_DESCRIPTOR">
            <value xml:space="preserve">PROMPT_FOR(ROOTDIR, Working Directory:, "", ACCESSIBILITY(MNEMONIC_W), SELECTOR_DIR)
PROMPT_FOR(REPOSITORY_URL,"Repository URL:", "", ACCESSIBILITY(DESCRIPTION_The Repository URL;;MNEMONIC_U))
PROMPT_FOR(USER_G,"Username:", "", ACCESSIBILITY(DESCRIPTION_The default user name used to authenticate;;MNEMONIC_S))
PROMPT_FOR_PASSWORD(PWORD_G,"Password:", "", ACCESSIBILITY(DESCRIPTION_The default password name used to authenticate;;MNEMONIC_P))
ASK_FOR(QUIET_G,"Quiet", "${QUIET_G}", ACCESSIBILITY(DESCRIPTION_Forces quiet to be used on all applicable commands;;MNEMONIC_Q),"true", "")
ASK_FOR(NOAUTHCACHE_G,"No Auth Cache", "${NOAUTHCACHE_G}", ACCESSIBILITY(DESCRIPTION_Forces no auth cache to be used on all applicable commands;;MNEMONIC_A),"true", "")
PROMPT_FOR(ENCODING_G,"Encoding:", "", ACCESSIBILITY(DESCRIPTION_The default encoding.  If left blank, svn's default encoding will be used;;MNEMONIC_G))</value>
        </variable>
        <variable basic="false" name="EDITOR">
            <value xml:space="preserve">$[? EDITOR_U][--editor-cmd ${EDITOR_U} ][$[? EDITOR_G][--editor-cmd ${EDITOR_G} ][]]</value>
        </variable>
        <variable basic="false" name="EDITORCMD">
            <value xml:space="preserve">$[? EDITORCMD_U][--editor-cmd ${QUOTE}${EDITORCMD_U}${QUOTE} ][$[? EDITORCMD_G][--editor-cmd ${QUOTE}${EDITORCMD_G}${QUOTE} ][]]</value>
        </variable>
        <variable basic="false" name="ENCODING">
            <value xml:space="preserve">$[? ENCODING_U][--encoding ${QUOTE}${ENCODING_U}${QUOTE} ][$[? ENCODING_G][--encoding ${QUOTE}${ENCODING_G}${QUOTE} ][]]</value>
        </variable>
        <variable basic="false" name="FROM">
            <value xml:space="preserve">$[? FROM_U][${FROM_U}][$[? FROM_G][${FROM_G}][]]</value>
        </variable>
        <variable basic="false" name="FROM_G">
            <value xml:space="preserve">${URL_G}</value>
        </variable>
        <variable basic="false" name="FS_DISPLAY_NAME">
            <value xml:space="preserve">SVN</value>
        </variable>
        <variable basic="false" name="LOCAL_FILES_FILTERED_OUT">
            <value xml:space="preserve">.svn</value>
        </variable>
        <variable basic="false" name="MESSAGE">
            <value xml:space="preserve">$[? MESSAGE_U][-m ${QUOTE}${MESSAGE_U}${QUOTE} ][-m ${QUOTE}${MESSAGE_G}${QUOTE} ]</value>
        </variable>
        <variable basic="false" name="MODULE">
            <value xml:space="preserve"></value>
        </variable>
        <variable basic="false" name="NOAUTHCACHE">
            <value xml:space="preserve">$[? NOAUTHCACHE_U][--no-auth-cache ][$[? NOAUTHCACHE_G][--no-auth-cache ][]]</value>
        </variable>
        <variable basic="false" name="NONINTERACTIVE">
            <value xml:space="preserve">$[? NONINTERACTIVE_U][--non-interactive ][$[? NONINTERACTIVE_G][--non-interactive ][]]</value>
        </variable>
        <variable basic="false" name="PATHARG">
            <value xml:space="preserve">$[? PATHARG_U][${PATHARG_U}][$[? PATHARG_G][${PATHARG_G}][.]]</value>
        </variable>
        <variable basic="false" name="PATHARG_G">
            <value xml:space="preserve">${QMPATHS}</value>
        </variable>
        <variable basic="false" name="POSSIBLE_FILE_STATUSES">
            <value xml:space="preserve">"","A","D","M","C","I","?","!","~"</value>
        </variable>
        <variable name="POSSIBLE_FILE_STATUSES_LOCALIZED" basic="false">
            <value xml:space="preserve">"getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_U)","getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_A)","getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_D)","getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_LM)","getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_C)","getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_I)","getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_L)","getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_RM)","getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(Status_O)"</value>
        </variable>
        <variable basic="false" name="POSTFIX">
            <value xml:space="preserve">"</value>
        </variable>
        <variable basic="false" name="PREFIX_UNIX">
            <value xml:space="preserve">/bin/sh -c "${CD} ${QUOTE}${ROOTDIR}${QUOTE};</value>
        </variable>
        <variable basic="false" name="PREFIX_WIN">
            <value xml:space="preserve">cmd /X /C "${CD} ${QUOTE}${ROOTDIR}${QUOTE}.&amp;&amp;</value>
        </variable>
        <variable basic="false" name="PREFIX_WORKDIR_FOR_LIST_UNIX">
            <value xml:space="preserve">/bin/sh -c "${CD} ${QUOTE}${ROOTDIR}$[? MODULE][${PS}${MODULE}][]$[? PATH][${PS}${PATH}][]${QUOTE};</value>
        </variable>
        <variable basic="false" name="PREFIX_WORKDIR_FOR_LIST_WINDOWS">
            <value xml:space="preserve">cmd /X /C "${CD} ${QUOTE}${ROOTDIR}$[? MODULE][${PS}${MODULE}][]$[? PATH][${PS}${PATH}][]${QUOTE}&amp;&amp;</value>
        </variable>
        <variable basic="false" name="PWORD">
            <value xml:space="preserve">$[? PWORD_U][${PWORD_U}]][[? PWORD_G][${PWORD_G}][]]</value>
        </variable>
        <variable basic="false" name="QDIFF3CMD">
            <value xml:space="preserve">$[? DIFF3CMD_U][--diff3-cmd ${QUOTE}${DIFF3CMD_U}${QUOTE} ][$[? DIFF3CMD_G][--diff3-cmd ${QUOTE}${DIFF3CMD_G}${QUOTE} ][]]</value>
        </variable>
        <variable basic="false" name="QDIFFCMD">
            <value xml:space="preserve">$[? DIFFCMD_U][--diff-cmd ${QUOTE}${DIFFCMD_U}${QUOTE} ][$[? DIFFCMD_G][--diff-cmd ${QUOTE}${DIFFCMD_G}${QUOTE} ][]]</value>
        </variable>
        <variable basic="false" name="QFILEARG">
            <value xml:space="preserve">${QUOTE}${FILEARG}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QFROM">
            <value xml:space="preserve">${QUOTE}${FROM}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QPATHARG">
            <value xml:space="preserve">${PATHARG}</value>
        </variable>
        <variable basic="false" name="QPROPNAME">
            <value xml:space="preserve">${QUOTE}${PROPNAME}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QPROPVALUE">
            <value xml:space="preserve">${QUOTE}${PROPVALUE}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QPWORD">
            <value xml:space="preserve">${QUOTE}${PWORD}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QTO">
            <value xml:space="preserve">${QUOTE}${TO}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QUIET">
            <value xml:space="preserve">$[? QUIET_U][-q ][$[? QUIET_G][-q ][]]</value>
        </variable>
        <variable basic="false" name="QUOTE">
            <value xml:space="preserve">\"</value>
        </variable>
        <variable basic="false" name="QURL">
            <value xml:space="preserve">${QUOTE}${URL}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QURL1">
            <value xml:space="preserve">${QUOTE}${URL1}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QURL2">
            <value xml:space="preserve">${QUOTE}${URL2}${QUOTE}</value>
        </variable>
        <variable basic="false" name="QUSER">
            <value xml:space="preserve">${QUOTE}${USER}${QUOTE}</value>
        </variable>
        <variable basic="false" name="RELATIVE_FILE">
            <value xml:space="preserve">$[? MODULE][${MODULE_/\}${PS}][]${FILE}</value>
        </variable>
        <variable basic="false" name="REVISION">
            <value xml:space="preserve">$[? REVISION_U][-r ${QUOTE}${REVISION_U}${QUOTE} ][$[? REVISION_G][-r ${QUOTE}${REVISION_G}${QUOTE} ][]]</value>
        </variable>
        <variable basic="false" name="SVN_CMD">
            <value xml:space="preserve">svn</value>
        </variable>
        <variable basic="false" name="SVN_PS">
            <value xml:space="preserve">/</value>
        </variable>
        <variable basic="false" name="TARGETS">
            <value xml:space="preserve">$[? TARGETS_U][--targets ${QUOTE}${TARGETS_U}${QUOTE} ][$[? TARGETS_G][--targets ${QUOTE}${TARGETS_G}${QUOTE} ][]]</value>
        </variable>
        <variable basic="false" name="TO">
            <value xml:space="preserve">$[? TO_U][${TO_U}][$[? TO_G][${TO_G}][]]</value>
        </variable>
        <variable basic="false" name="TO_G">
            <value xml:space="preserve">${URL_G}</value>
        </variable>
        <variable basic="false" name="URL">
            <value xml:space="preserve">$[? URL_U][${URL_U}][$[? URL_G][${URL_G}][]]</value>
        </variable>
        <variable basic="false" name="URL1">
            <value xml:space="preserve">$[? URL1_U][${URL1_U}][$[? URL_G][${URL_G}][]]</value>
        </variable>
        <variable basic="false" name="URL2">
            <value xml:space="preserve">$[? URL2_U][${URL2_U}][$[? URL_G][${URL_G}][]]</value>
        </variable>
        <variable basic="false" name="URL_G">
            <value xml:space="preserve">${REPOSITORY_URL}$[? MODULE][${SVN_PS}${MODULE_\/}][]$[? DIR][${SVN_PS}${DIR_\/}][]$[? FILE][${SVN_PS}${FILE}][]</value>
        </variable>
        <variable basic="false" name="USER">
            <value xml:space="preserve">$[? USER_U][${USER_U}][$[? USER_G][${USER_G}][]]</value>
        </variable>
        <variable basic="false" name="WORKDIR">
            <value xml:space="preserve">${ROOTDIR}${PS}${MODULE}${PS}${DIR}</value>
        </variable>
        <variable basic="false" name="PREFIX">
            <value xml:space="preserve">${PREFIX_UNIX}</value>
            <value if="IS_WINDOWS" xml:space="preserve">${PREFIX_WIN}</value>
        </variable>
        <variable basic="false" name="CD">
            <value xml:space="preserve">cd</value>
            <value if="IS_WINDOWS" xml:space="preserve">cd /D</value>
        </variable>
        <variable basic="false" if="IS_WINDOWS" name="MAX_CMD_LENGTH">
            <value xml:space="preserve">1000</value>
        </variable>
        <variable basic="false" name="LOCAL_FILES_FILTERED_OUT_CASE_SENSITIVE">
            <value xml:space="preserve">true</value>
            <value if="IS_WINDOWS" xml:space="preserve">false</value>
        </variable>
        <variable basic="false" name="PREFIX_WORKDIR_FOR_LIST">
            <value xml:space="preserve">${PREFIX_WORKDIR_FOR_LIST_UNIX}</value>
            <value if="IS_WINDOWS" xml:space="preserve">${PREFIX_WORKDIR_FOR_LIST_WINDOWS}</value>
        </variable>
    </variables>
    <commands>
        <command displayName="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(SVN_Local)" name="SVN">
            <command displayName="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(CMD_CheckOut)" name="CHECKOUT">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} co ${REVISION}${QUIET}${NONRECURSIVE}${NOAUTHCACHE}${NONINTERACTIVE}${AUTH}${CONFIGDIR}${URL} ${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Checkout,ACCESSIBILITY(DESCRIPTION_Dialog for svn checkout command))
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_U),,)
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(NONRECURSIVE, Non-Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"-N ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "true",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")    
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">o</value>
                </property>
                <property name="onFile">
                    <value xml:space="preserve">false</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshParentFolder">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshRecursivelyPatternUnmatched">
                    <value xml:space="preserve"> -N </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Update" name="UPDATE">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} up ${REVISION}${NONRECURSIVE}${QUIET}${QDIFF3CMD}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Update,ACCESSIBILITY(DESCRIPTION_Dialog for svn update command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET, Quiet, "false",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"-q ", "")
ASK_FOR_EXPERT(NONRECURSIVE, Non-Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"-N ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE, No Auth cache, "false",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"--no-auth-cache ", "")
ASK_FOR_EXPERT(NONINTERACTIVE, Non-Interactive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"--non-interactive ", "")
PROMPT_FOR_EXPERT(DIFF3CMD_U, diff3-cmd, "${DIFF3CMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for diff3-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">u</value>
                </property>
                <property name="refreshCurrentFolder">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshRecursivelyPatternUnmatched">
                    <value xml:space="preserve"> -N </value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command name="COMMIT_TEMPLATE_GETTER">
                <property name="exec">
                    <value xml:space="preserve" if="IS_WINDOWS"></value>
                    <value xml:space="preserve">${PREFIX} echo a | ${SVN_CMD} ci --editor-cmd cat --non-interactive ${AUTH}${QMPATHS}${POSTFIX}</value>
                </property>
                <property name="data.regex">
                    <value xml:space="preserve">^($|[^La].*$|.[^o)].*$|..[^gb].*$|...[^ o].*$|....[^mr].*$|.....[^et].*$|......[^s,].*$|.......[^s ].*$|........[^ac].*$|.........[^g)].*$|..........[^eo].*$|...........[^ n].*$|............[^ut].*$|.............[^ni].*$)</value>
                </property>
                <property name="ignoreFail">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Commit" name="Commit">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} ci $[? EDITORCMD] [][-F ${QUOTE}${TEMPLATE_FILE}${QUOTE}] ${QUIET}${NONRECURSIVE}${TARGETS}${FORCELOG}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${AUTH}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Commit,ACCESSIBILITY(DESCRIPTION_Dialog for svn commit command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
IF_VAR_EMPTY"EDITORCMD"_PROMPT_FOR_FILE(TEMPLATE_FILE, "Message:", {FILE_OUTPUT_OF_COMMIT_TEMPLATE_GETTER(0)}, ACCESSIBILITY(DESCRIPTION_Text area for message argument of commit command;;MNEMONIC_M), 10, 40)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(NONRECURSIVE_U, Non-Recursive, "${NONRECURSIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"true", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_Text field for targets argument;;MNEMONIC_T),SELECTOR_FILE)
ASK_FOR_EXPERT(FORCELOG, Force-log, "false",ACCESSIBILITY(DESCRIPTION_Check box for false argument;;MNEMONIC_F),"--force-log ", "")
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">c</value>
                </property>
                <property name="onFile">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshParentFolder">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshRecursivelyPatternUnmatched">
                    <value xml:space="preserve"> -N </value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <separator/>
            <command displayName="Add" name="ADD">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} add ${TARGETS}${NONRECURSIVE}${QUIET}${AUTOPROPS}${NOAUTOPROPS}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Add,ACCESSIBILITY(DESCRIPTION_Dialog for svn add command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_Text field for targets argument;;MNEMONIC_T),,)
ASK_FOR_EXPERT(NONRECURSIVE, Non-Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"-N ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
ASK_FOR_EXPERT(AUTOPROPS, AutoProps, "false",ACCESSIBILITY(DESCRIPTION_Check box for auto-props argument;;MNEMONIC_A),"--auto-props ", "")
ASK_FOR_EXPERT(NOAUTOPROPS, No AutoProps, "false",ACCESSIBILITY(DESCRIPTION_Check box for no-auto-props argument;;MNEMONIC_U),"--no-auto-props ", "")
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">A</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshParentFolder">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshRecursivelyPatternUnmatched">
                    <value xml:space="preserve"> -N </value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Copy" name="COPY_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} cp ${FORCELOG}${MESSAGE}$[? MESSAGEFILE][-F ${MESSAGEFILE}][]${REVISION}${QUIET}${NONRECURSIVE}${TARGETS}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${CONFIGDIR}${QPATHARG} ${QUOTE}${DST}${QUOTE}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Copy,ACCESSIBILITY(DESCRIPTION_Dialog for svn copy command))
PROMPT_FOR_EXPERT(PATHARG_U, Source, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_P),,)
PROMPT_FOR(DST, Destination, "",ACCESSIBILITY(DESCRIPTION_Text field for destination argument;;MNEMONIC_S),,)
PROMPT_FOR_EXPERT(MESSAGE_U, Message, "${MESSAGE_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_M),,)
PROMPT_FOR_EXPERT(FILEMESSAGE, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_F),SELECTOR_FILE)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive;;MNEMONIC_I),"true", "")
ASK_FOR_EXPERT(FORCELOG, Force-log, "false",ACCESSIBILITY(DESCRIPTION_Check box for force-log argument;;MNEMONIC_I),"--force-log ", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_D),,)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">c</value>
                </property>
                <property name="onDir">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Move" name="MOVE_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} mv ${MESSAGE}$[? MESSAGEFILE][-F ${MESSAGEFILE} ][]${REVISION}${QUIET}${FORCE}${AUTH}${NONRECURSIVE}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${FORCELOG}${QPATHARG} ${QUOTE}${DST}${QUOTE}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Move,ACCESSIBILITY(DESCRIPTION_Dialog for svn move command))
PROMPT_FOR_EXPERT(PATHARG_U, SRC, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR(DST, DST, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for destination argument;;MNEMONIC_S),,)
PROMPT_FOR_EXPERT(MESSAGE_U, Message, "${MESSAGE_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_M),,)
PROMPT_FOR_EXPERT(FILEMESSAGE, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_F),SELECTOR_FILE)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(FORCE, Force, "",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_F),"--force ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
ASK_FOR_EXPERT(FORCELOG, Force-log, "",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_L),"--force-log ", "")
                    </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Delete" name="REMOVE_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} rm ${FORCE}${FORCELOG}${MESSAGE}$[? MESSAGEFILE][-F ${MESSAGEFILE} ][]${QUIET}${NONRECURSIVE}${TARGETS}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Delete,ACCESSIBILITY(DESCRIPTION_Dialog for svn delete command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(FORCE, Force, "false",ACCESSIBILITY(DESCRIPTION_Check box for force argument;;MNEMONIC_F),"--force ", "")
ASK_FOR_EXPERT(FORCELOG, Force-log, "false",ACCESSIBILITY(DESCRIPTION_Check box for force-log argument;;MNEMONIC_L),"--force-log ", "")
PROMPT_FOR_EXPERT(MESSAGE_U, Message, "${MESSAGE_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_M),,)
PROMPT_FOR_EXPERT(FILEMESSAGE, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_F),SELECTOR_FILE)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_Text field for targets argument;;MNEMONIC_T),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">d</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshParentFolder">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Mkdir" name="MAKE DIR_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} mkdir ${MESSAGE}$[? MESSAGEFILE][-F ${MESSAGEFILE} ][]${QUIET}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${FORCELOG}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Mkdir,ACCESSIBILITY(DESCRIPTION_Dialog for svn mkdir command))
PROMPT_FOR(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH;;MNEMONIC_T),,)
PROMPT_FOR_EXPERT(MESSAGE_U, Message, "${MESSAGE_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_M),,)
PROMPT_FOR_EXPERT(FILEMESSAGE, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_F),SELECTOR_FILE)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"--no-auth-cache ", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"--non-interactive ", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
ASK_FOR_EXPERT(FORCELOG, Force-log, "false",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"--force-log ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="onDir">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="onFile">
                    <value xml:space="preserve">false</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <separator/>
            <command displayName="Diff" name="DIFF">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} diff $[? EXTENSIONS][-x ${EXTENSIONS} ][]${NONRECURSIVE}${QDIFFCMD}${NODIFFDELETED}${NOTICEANCESTRY}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}$[? NREV][-r ${NREV}$[? MREV][:${MREV}][] ][]$[? OLDTARGET][--old ${OLDTARGET} ][]$[? NEWTARGET][--new ${NEWTARGET} ][]${PATHSARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Diff,ACCESSIBILITY(DESCRIPTION_Dialog for svn diff command))
PROMPT_FOR_EXPERT(PATHSARG, PATH(s), "${QMPATHS}",ACCESSIBILITY(DESCRIPTION_Text field for PATHS argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(NREV, Old Target Revision, "",ACCESSIBILITY(DESCRIPTION_Text field for old target revision argument;;MNEMONIC_O),,)
PROMPT_FOR_EXPERT(MREV, New Target Revision, "",ACCESSIBILITY(DESCRIPTION_Text field for new target revision argument;;MNEMONIC_N),,)
PROMPT_FOR_EXPERT(OLDTARGET, Old Target,,ACCESSIBILITY(DESCRIPTION_Text field for old path argument;;MNEMONIC_A),,)
PROMPT_FOR_EXPERT(NEWTARGET, New Target,,ACCESSIBILITY(DESCRIPTION_Text field for new path argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(EXTENSIONS, Extensions, "",ACCESSIBILITY(DESCRIPTION_Text field for extensions argument;;MNEMONIC_X),,)
ASK_FOR_EXPERT(NONRECURSIVE, Non recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"-N ", "")
PROMPT_FOR_EXPERT(DIFFCMD_U, Diff Command, ${DIFFCMD_G},ACCESSIBILITY(DESCRIPTION_Text field for diff-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
ASK_FOR_EXPERT(NODIFFDELETED, No Diff Deleted, "false",ACCESSIBILITY(DESCRIPTION_Check box for extensions argument;;MNEMONIC_E),"--no-diff-deleted ", "")
ASK_FOR_EXPERT(NOTICEANCESTRY, Notice Ancestry, "false",ACCESSIBILITY(DESCRIPTION_Check box for extensions argument;;MNEMONIC_G),"--notice-ancestry ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"--no-auth-cache ", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"--non-interactive ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Merge" name="MERGE">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} merge ${NONRECURSIVE}${QUIET}${FORCE}${DRYRUN}$[? DIFF3CMD][--diff3-cmd ${DIFF3CMD} ][]${IGNOREANCESTRY}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}$[? FORM][${QUOTE}${WCPATH1}${QUOTE}$[? NREV][@${NREV}][] ${QUOTE}${WCPATH2}${QUOTE}$[? MREV][@${MREV}][] ][-r $[? NREV][${NREV}][HEAD]:$[? MREV][${MREV}][HEAD] ${QUOTE}${SRC}${QUOTE} ]$[? WCPATH][${QUOTE}${WCPATH}${QUOTE}][]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Merge,ACCESSIBILITY(DESCRIPTION_Dialog for svn merge command))
ASK_FOR_EXPERT(FORM, "Use two Paths", "false", ACCESSIBILITY(DESCRIPTION_Check box for WCPATH form of command;;MNEMONIC_T),ENABLE(WCPATH1, WCPATH2), DISABLE(SRC))
PROMPT_FOR(WCPATH1, WCPATH 1,"${MPATHS}",ACCESSIBILITY(DESCRIPTION_Text field for WCPATH1 argument;;MNEMONIC_W),,)
PROMPT_FOR(WCPATH2, WCPATH 2, "${MPATHS}",ACCESSIBILITY(DESCRIPTION_Text field for WCPATH2 argument;;MNEMONIC_C),,)
PROMPT_FOR(SRC, Source, "${MPATHS}",ACCESSIBILITY(DESCRIPTION_Text field for SRC argument;;MNEMONIC_S),,)
PROMPT_FOR(WCPATH, WCPath, "",ACCESSIBILITY(DESCRIPTION_Text field for wcpath argument;;MNEMONIC_W),,)
PROMPT_FOR(NREV, Old Target Revision, "",ACCESSIBILITY(DESCRIPTION_Text field for old target revision argument;;MNEMONIC_O),,)
PROMPT_FOR(MREV, New Target Revision, "",ACCESSIBILITY(DESCRIPTION_Text field for new target revision argument;;MNEMONIC_N),,)
ASK_FOR_EXPERT(NONRECURSIVE_U, Non recursive, "${NONRECURSIVE}",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(FORCE, Force, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_F),"--force ", "")
ASK_FOR_EXPERT(DRYRUN, Dry Run, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_D),"--dry-run ", "")
PROMPT_FOR_EXPERT(DIFF3CMD_U, Diff 3 Cmd,"${DIFFCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for diif3cmd argument;;MNEMONIC_I),SELECTOR_FILE)
ASK_FOR_EXPERT(IGNOREANCESTRY, Ignore Ancestry, "false",ACCESSIBILITY(DESCRIPTION_Check box for ignore-ancestry argument;;MNEMONIC_F),"--ignore-ancestry ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Resolved" name="RESOLVED">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} resolved ${TARGETS}${RECURSIVE}${QUIET}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Resolve,ACCESSIBILITY(DESCRIPTION_Dialog for svn resolve command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_Text field for targets argument;;MNEMONIC_T),SELECTOR_FILE)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_R),"-R ", "")
ASK_FOR_EXPERT(QUIET, Quiet, "false",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"-q ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Revert" name="REVERT">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} revert ${TARGETS}${RECURSIVE}${QUIET}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Revert,ACCESSIBILITY(DESCRIPTION_Dialog for svn revert command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_Text field for targets argument;;MNEMONIC_T),SELECTOR_FILE)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_R),"-R ", "")
ASK_FOR_EXPERT(QUIET, Quiet, "false",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"-q ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Cleanup" name="CLEANUP">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} cleanup ${DIFF3CMD}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Cleanup,ACCESSIBILITY(DESCRIPTION_Dialog for cleanup command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(DIFF3CMD_U, Diff3cmd, "${DIFF3CMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for diff3cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)</value>
                </property>
                <property name="onFile">
                    <value xml:space="preserve">false</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">false</value>
                </property>
            </command>
            <separator/>
            <command displayName="List" name="LS_LOCAL">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} ls ${REVISION}${VERBOSE}${RECURSIVE}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN List,ACCESSIBILITY(DESCRIPTION_Dialog for svn list command))
PROMPT_FOR_EXPERT(PATHARG_U, TARGET, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(VERBOSE, Verbose, "false",ACCESSIBILITY(DESCRIPTION_Check box for verbose argument;;MNEMONIC_V),"-v ",)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_E),"-R ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
            </command>
            <command displayName="Status" name="STATUS">
                <property name="data.fileName.index">
                    <value xml:space="preserve">-1</value>
                </property>
                <property name="data.regex">
                    <value xml:space="preserve">^([ ADMCI\?!~]{1})([ MC]{1})([ L]{1})([ \+]{1})([ S]{1})([ ]{1})([ ]{1})([ \*]{1}) *([0-9]*) *([0-9]*) *([^ ]*).*\\([^\\]*)$</value>
                </property>
                <property name="data.revision.index">
                    <value xml:space="preserve">-1</value>
                </property>
                <property name="data.status.index">
                    <value xml:space="preserve">-1</value>
                </property>
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} status ${SHOWUPDATES}${VERBOSE}${NONRECURSIVE}${QUIET}${NOIGNORE}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Status,ACCESSIBILITY(DESCRIPTION_Dialog for svn status command))
PROMPT_FOR_EXPERT(PATHARG_U, TARGET, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(SHOWUPDATES, Show Updates, "false",ACCESSIBILITY(DESCRIPTION_Check box for show-updates argument;;MNEMONIC_U),"-u ", "")
ASK_FOR_EXPERT(VERBOSE, Verbose, "false",ACCESSIBILITY(DESCRIPTION_Check box for verbose argument;;MNEMONIC_V),"-v ", "")
ASK_FOR_EXPERT(NONRECURSIVE, Non Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_R),"-N ", "")
ASK_FOR_EXPERT(QUIET, Quiet, "false",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"-q ", "")
ASK_FOR_EXPERT(NOIGNORE, No Ignore, "false",ACCESSIBILITY(DESCRIPTION_Check box for no-ignore argument;;MNEMONIC_G),"--no-ignore ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE, No Auth Cache, "false",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_C),"--no-auth-cache ", "")
ASK_FOR_EXPERT(NONINTERACTIVE, Non Interactive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"--non-interactive ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
</value>
                </property>
                <property name="refreshFileRelativePath">
                    <value xml:space="preserve">${MODULE}</value>
                </property>
                <property name="refreshFileStatusSubstitutions">
                    <value xml:space="preserve"></value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Info" name="INFO">
                <property name="advancedName">
                    <value xml:space="preserve">info</value>
                </property>
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} info ${TARGETS}${RECURSIVE}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Info,ACCESSIBILITY(DESCRIPTION_Dialog for svn info command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_File Selection for target argument;;MNEMONIC_T),SELECTOR_FILE)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_R),"-R ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR) 
                    </value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Log" name="LOG">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} log ${REVISION}${QUIET}${VERBOSE}${TARGETS}${STOPONCOPY}${INCREMENTAL}${XML}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Log,ACCESSIBILITY(DESCRIPTION_Dialog for svn log command))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(VERBOSE, Verbose, "false",ACCESSIBILITY(DESCRIPTION_Check box for verbose argument;;MNEMONIC_V),"-v ", "")
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_File Selection for target argument;;MNEMONIC_T),SELECTOR_FILE)
ASK_FOR_EXPERT(STOPONCOPY, Stop-on-copy, "false",ACCESSIBILITY(DESCRIPTION_Check box for strict argument;;MNEMONIC_S),"--stop-on-copy ", "")
ASK_FOR_EXPERT(INCREMENTAL, Incremental, "false",ACCESSIBILITY(DESCRIPTION_Check box for incremental argument;;MNEMONIC_N),"--incremental ", "")
ASK_FOR_EXPERT(XML, XML, "false",ACCESSIBILITY(DESCRIPTION_Check box for xml argument;;MNEMONIC_X),"--xml ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR) </value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Cat" name="CAT">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} cat ${REVISION}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Cat,ACCESSIBILITY(DESCRIPTION_Dialog for svn cat command))
PROMPT_FOR_EXPERT(PATHARG_U, TARGET, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for TARGET argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="onDir">
                    <value xml:space="preserve">false</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">false</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Blame" name="BLAME">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} blame ${REVISION}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${STRICT}${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Blame,ACCESSIBILITY(DESCRIPTION_Dialog for svn blame command))
PROMPT_FOR_EXPERT(PATHARG_U, TARGET, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for TARGET argument;;MNEMONIC_T),,) PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Help" name="HELP">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} help ${VERSION}${QUIET}${CONFIGDIR}${SUBCOMMAND}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Help,ACCESSIBILITY(DESCRIPTION_Dialog for help command))
ASK_FOR_EXPERT(VERSION, Version, "false",ACCESSIBILITY(DESCRIPTION_Check box for version argument;;MNEMONIC_V),"--version ", "")
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(SUBCOMMAND, Subcommand, "",ACCESSIBILITY(DESCRIPTION_Text field for subcommand argument;;MNEMONIC_T),,)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <separator/>
            <command displayName="Switch" name="SWITCH">
                <property name="confirmationMsg">
                    <value xml:space="preserve">If this command is performed on the root of the filesystem the repository URL in the Customize Dialog must be changed manually to match the new branch/URL after the switch succeeds.  Make sure you know what you are doing before switching anything other than the root since it can lead to confusing results.  Would you like to continue?</value>
                </property>
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} switch ${REVISION}${NONRECURSIVE}${QUIET} ${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}$[? FORM][${QURL}][--relocate ${QFROM} ${QTO}] ${QPATHARG}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Switch,ACCESSIBILITY(DESCRIPTION_Dialog for svn switch command))
ASK_FOR(FORM, "Use switch URL [PATH...]  (uncheck for switch --relocate FROM TO [PATH...])", "false", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_G), DISABLE(FROM_G,TO_G))
PROMPT_FOR(URL_G, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_U),,)
PROMPT_FOR(FROM_G, FROM, "${FROM_G}",ACCESSIBILITY(DESCRIPTION_Text field for FROM argument;;MNEMONIC_U),,)
PROMPT_FOR(TO_G, TO, "${TO_G}",ACCESSIBILITY(DESCRIPTION_Text field for TO argument;;MNEMONIC_U),,)
PROMPT_FOR_EXPERT(PATHARG_U, PATH, ".",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(NONRECURSIVE, Non-Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"-N ", "")
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(DIFF3CMD_U, Diff3-cmd, "${DIFF3CMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for diff3-cmd argument;;MNEMONIC_U),SELECTOR_FILE)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")    
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="notificationFailMsg">
                    <value xml:space="preserve">Switch failed so there is no need to update the repository URL in the Customize dialog.</value>
                </property>
                <property name="notificationSuccessMsg">
                    <value xml:space="preserve">Be sure to change the repository URL in the Customize dialog for this subversion mount point to match the URL that you switched to.</value>
                </property>
                <property name="onDir">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="onFile">
                    <value xml:space="preserve">false</value>
                </property>
                <property name="refreshCurrentFolder">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <separator/>
            <command displayName="Property List" name="PROPERTY LIST">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} pl ${VERBOSE}${RECURSIVE}${REVISION}${QUIET}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}$[? FORM][--revprop ${REVISION}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property List,ACCESSIBILITY(DESCRIPTION_Dialog for svn proplist command))
ASK_FOR_EXPERT(FORM, "Use revprop", "false", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)ASK_FOR_EXPERT(VERBOSE, Verbose, "false",ACCESSIBILITY(DESCRIPTION_Check box for verbose argument;;MNEMONIC_V),"-v ", "")
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_C),"-R ", "")
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Property Get" name="PROPERTY GET">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} pg ${RECURSIVE}${REVISION}${STRICT}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPROPNAME} $[? FORM][--revprop ${REVISION}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property Get,ACCESSIBILITY(DESCRIPTION_Dialog for svn propget command))
PROMPT_FOR(PROPNAME, Property Name, "",ACCESSIBILITY(DESCRIPTION_Text field for propname argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(FORM, "Use revprop", "false", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_C),"-R ", "")
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(STRICT, Strict, "false",ACCESSIBILITY(DESCRIPTION_Check box for strict argument;;MNEMONIC_S),"--strict ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No-Auth-Cache, "${NOAUTHCACHE_U}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Property Set" name="PROPSET">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} propset ${QUIET}${REVISION}${TARGETS}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${ENCODING}${FORCE}${CONFIGDIR}${QPROPNAME} $[? VALUEFORM][${QPROPVALUE}][${-F QFILEARG} ] $[? FORM][--revprop ${REVISION}${TARGETS}${RECURSIVE}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property Set,ACCESSIBILITY(DESCRIPTION_Dialog for svn propset command))
PROMPT_FOR(PROPNAME, Property Name, "",ACCESSIBILITY(DESCRIPTION_Text field for propname argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(VALUEFORM, "Use prop value", "true", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(PROPVALUE), DISABLE(FILEARG))
PROMPT_FOR(PROPVALUE, Property Value, "",ACCESSIBILITY(DESCRIPTION_Text field for propvalue argument;;MNEMONIC_V),,)
PROMPT_FOR_EXPERT(FILEARG, File, "",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_F),,)
ASK_FOR_EXPERT(FORM, "Use revprop", "false", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_File Selection for target argument;;MNEMONIC_T),SELECTOR_FILE)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_E),"-R ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No-Auth-Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
ASK_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Check box for encoding argument;;MNEMONIC_E),"true", "")
ASK_FOR_EXPERT(FORCE, Force, "false",ACCESSIBILITY(DESCRIPTION_Check box for revprop argument;;MNEMONIC_V),"--force ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">I</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshCurrentFolder">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Property Edit" name="PROPERTY EDIT">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} pe ${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${ENCODING}${EDITORCMD}${FORCE}${CONFIGDIR}${QPROPNAME} $[? FORM][--revprop ${REVISION}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property Edit,ACCESSIBILITY(DESCRIPTION_Dialog for svn propedit command))
PROMPT_FOR(PROPNAME, Property Name, "",ACCESSIBILITY(DESCRIPTION_Text field for propname argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(FORM, "Use revprop", "false", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No-Auth-Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE}_G",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
ASK_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Check box for encoding argument;;MNEMONIC_E),"true", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Check box for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
ASK_FOR_EXPERT(FORCE, Force, "",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_F),"--force ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Property Delete" name="PROPERTY DELETE">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} pdel ${QUIET}${RECURSIVE}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPROPNAME} $[? FORM][--revprop ${REVISION}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property Delete,ACCESSIBILITY(DESCRIPTION_Dialog for svn propdel command))
PROMPT_FOR(PROPNAME, Property Name, "",ACCESSIBILITY(DESCRIPTION_Text field for propname argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(FORM, "Use revprop", "false", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET}",ACCESSIBILITY(DESCRIPTION_Check box for revprop argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_R),"-R ", "")
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_C),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No-Auth-Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
            </command>
            <separator/>
            <command name="LIST_CMD">
                <property name="data.regex">
                    <value xml:space="preserve">^([ ADMCI!~])([ MC])([ L])([ \+])([ S])  ([ \*]) *( |[0-9]+) *( |\?|[0-9]+) *( |\?|[^ ]+) *(\.[^ ].*|[^\. ].*[^\.]|[^\. ].*[^ ]\.)$</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX_WORKDIR_FOR_LIST}${SVN_CMD} status -v  -N --no-ignore${POSTFIX}</value>
                </property>
            </command>
            <command displayName="Refresh" name="LIST">
                <property name="data.date.index">
                    <value xml:space="preserve">-1</value>
                </property>
                <property name="data.fileName.index">
                    <value xml:space="preserve">9</value>
                </property>
                <property name="data.locker.index">
                    <value xml:space="preserve">8</value>
                </property>
                <property name="data.regex">
                    <value xml:space="preserve">^([ ADMCI!~])([ MC])([ L])([ \+])([ S])  ([ \*]) *( |[0-9]+) *( |\?|[0-9]+) *( |\?|[^ ]+) *(\.[^ ].*|[^\. ].*[^\.]|[^\. ].*[^ ]\.)$</value>
                </property>
                <property name="data.revision.index">
                    <value xml:space="preserve">6</value>
                </property>
                <property name="data.size.index">
                    <value xml:space="preserve">-1</value>
                </property>
                <property name="data.status.index">
                    <value xml:space="preserve">0</value>
                </property>
                <property name="data.time.index">
                    <value xml:space="preserve">-1</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">org.netbeans.modules.vcs.profiles.subversion.list.SubversionListCommand.class LIST_CMD</value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">R</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Refresh Recursively" name="LIST_SUB">
                <property name="exec">
                    <value xml:space="preserve"></value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">f</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
        </command>
        <command displayName="getBundle(org/netbeans/modules/vcs/profiles/subversion/config/Bundle).getString(SVN_Remote)" name="SVN REMOTE">
            <command displayName="List" name="LS_2">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} ls ${REVISION}${VERBOSE}${RECURSIVE}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QURL}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN List,ACCESSIBILITY(DESCRIPTION_Dialog for svn list command))
PROMPT_FOR_EXPERT(URL_U, TARGET, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for target argument;;MNEMONIC_L),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(VERBOSE, Verbose, "false",ACCESSIBILITY(DESCRIPTION_Check box for verbose argument;;MNEMONIC_V),"-v ",)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_E),"-R ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="onFile">
                    <value xml:space="preserve">false</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Copy" name="COPY_1_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} cp ${FORCELOG}${MESSAGE} $[? MESSAGEFILE][-F ${MESSAGEFILE} ][]${REVISION}${QUIET}${NONRECURSIVE}${TARGETS}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${CONFIGDIR}${QUOTE}${SRC}${QUOTE} ${QUOTE}${DST}${QUOTE}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Copy,ACCESSIBILITY(DESCRIPTION_Dialog for svn copy command))
PROMPT_FOR(SRC, Source, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for source argument;;MNEMONIC_S),,)
PROMPT_FOR(DST, Destination, "",ACCESSIBILITY(DESCRIPTION_Text field for destination argument;;MNEMONIC_E),,)
PROMPT_FOR_EXPERT(MESSAGE_U, Message, "${MESSAGE_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_M),,)
PROMPT_FOR_EXPERT(FILEMESSAGE, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_F),SELECTOR_FILE)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
ASK_FOR_EXPERT(FORCELOG, Force-log, "false",ACCESSIBILITY(DESCRIPTION_Check box for force-log argument;;MNEMONIC_I),"--force-log ", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">c</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Move" name="MOVE_1_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} mv ${MESSAGE}$[? MESSAGEFILE][-F ${MESSAGEFILE} ][]${REVISION}${QUIET}${FORCE}${NONRECURSIVE}${TARGETS}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${FORCELOG}${CONFIGDIR}${QUOTE}${SRC}${QUOTE} ${QUOTE}${DST}${QUOTE}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Move,ACCESSIBILITY(DESCRIPTION_Dialog for svn move command))
PROMPT_FOR(SRC, Source, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for source argument;;MNEMONIC_S),,)
PROMPT_FOR(DST, Destination, "",ACCESSIBILITY(DESCRIPTION_Text field for destination argument;;MNEMONIC_E),,)
PROMPT_FOR_EXPERT(FILEMESSAGE, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_F),SELECTOR_FILE)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(FORCE, Force, "",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_F),"--force ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
ASK_FOR_EXPERT(FORCELOG, Force-log, "",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_F,"--force-log ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Delete" name="REMOVE_1_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} rm ${FORCE}${FORCELOG}${MESSAGE}$[? MESSAGEFILE][-F ${MESSAGEFILE} ][]${QUIET}${TARGETS}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${CONFIGDIR}${QUOTE}${URL}${QUOTE}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Delete,ACCESSIBILITY(DESCRIPTION_Dialog for svn delete command))
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_U),,)
ASK_FOR_EXPERT(FORCE, Force, "false",ACCESSIBILITY(DESCRIPTION_Check box for false argument;;MNEMONIC_F),"--force ", "")
ASK_FOR_EXPERT(FORCELOG, Force-log, "false",ACCESSIBILITY(DESCRIPTION_Check box for false argument;;MNEMONIC_F),"--force-log ", "")
PROMPT_FOR_EXPERT(MESSAGE_U, Message, "${MESSAGE_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_M),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_Text field for targets argument;;MNEMONIC_T),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
PROMPT_FOR_EXPERT(FILEMESSAGE, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_F),SELECTOR_FILE)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no auth cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">d</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Mkdir" name="MAKE DIR_1_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} mkdir ${MESSAGE}$[? MESSAGEFILE][-F ${MESSAGEFILE} ][]${QUIET}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${EDITORCMD}${ENCODING}${FORCELOG}${CONFIGDIR}${QURL}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Mkdir,ACCESSIBILITY(DESCRIPTION_Dialog for svn mkdir command))
PROMPT_FOR(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_T),,)
PROMPT_FOR_EXPERT(MESSAGE_U, Message, "${MESSAGE_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_M),,)
PROMPT_FOR_EXPERT(FILEMESSAGE, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_F),SELECTOR_FILE)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"--no-auth-cache ", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"--non-interactive ", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Text field for encoding argument;;MNEMONIC_E),,)
ASK_FOR_EXPERT(FORCELOG, Force-log, "false",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"--force-log ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="onDir">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="onFile">
                    <value xml:space="preserve">false</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <separator/>
            <command displayName="Diff" name="DIFF_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} diff $[? EXTENSIONS][-x ${EXTENSIONS} ][]${NONRECURSIVE}${QDIFFCMD}${NODIFFDELETED}${NOTICEANCESTRY}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}$[? FORM][-r ${NREV}:${MREV} ][$[? NREV][-r ${NREV}$[? MREV][:${MREV}][] ][]]$[? FORM][${QURL}][${QURL1} ${QURL2}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Diff,ACCESSIBILITY(DESCRIPTION_Dialog for svn diff command))
ASK_FOR_EXPERT(FORM, "Use diff -r N:M URL (uncheck for Use diff [-r N[:M]] URL1[@N] URL2[@M])", "true", ACCESSIBILITY(DESCRIPTION_Check box for form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(URL1_U,URL2_U))
PROMPT_FOR_EXPERT(URL_U, URL,${URL_G},ACCESSIBILITY(DESCRIPTION_Text field for old path argument;;MNEMONIC_A),,)
PROMPT_FOR_EXPERT(URL1_U, URL1,${URL_G},ACCESSIBILITY(DESCRIPTION_Text field for old path argument;;MNEMONIC_A),,)
PROMPT_FOR_EXPERT(URL2_U, URL2,${URL_G},ACCESSIBILITY(DESCRIPTION_Text field for old path argument;;MNEMONIC_A),,)
PROMPT_FOR_EXPERT(NREV, Old Target Revision, "",ACCESSIBILITY(DESCRIPTION_Text field for old target revision argument;;MNEMONIC_O),,)
PROMPT_FOR_EXPERT(MREV, New Target Revision, "",ACCESSIBILITY(DESCRIPTION_Text field for new target revision argument;;MNEMONIC_N),,)
PROMPT_FOR_EXPERT(EXTENSIONS, Extensions, "",ACCESSIBILITY(DESCRIPTION_Text field for extensions argument;;MNEMONIC_X),,)
ASK_FOR_EXPERT(NONRECURSIVE, Non recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"-N ", "")
PROMPT_FOR_EXPERT(DIFFCMD_U, Diff Command, ${DIFFCMD_G},ACCESSIBILITY(DESCRIPTION_Text field for diff-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
ASK_FOR_EXPERT(NODIFFDELETED, No Diff Deleted, "false",ACCESSIBILITY(DESCRIPTION_Check box for extensions argument;;MNEMONIC_E),"--no-diff-deleted ", "")
ASK_FOR_EXPERT(NOTICEANCESTRY, Notice Ancestry, "false",ACCESSIBILITY(DESCRIPTION_Check box for extensions argument;;MNEMONIC_G),"--notice-ancestry ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"--no-auth-cache ", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"--non-interactive ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Merge" name="MERGE">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} merge ${NONRECURSIVE}${QUIET}${FORCE}${DRYRUN}$[? DIFF3CMD][--diff3-cmd ${DIFF3CMD} ][]${IGNOREANCESTRY}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}$[? FORM][${QUOTE}${URL1}${QUOTE}$[? NREV][@${NREV}][] ${QUOTE}${URL2}${QUOTE}$[? MREV][@${MREV}][] ][-r $[? NREV][${NREV}][HEAD]:$[? MREV][${MREV}][HEAD] ${QUOTE}${SRC}${QUOTE} ]$[? WCPATH][${QUOTE}${WCPATH}${QUOTE}][]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Merge,ACCESSIBILITY(DESCRIPTION_Dialog for svn merge command))
ASK_FOR(FORM, "Use two URLs", "false", ACCESSIBILITY(DESCRIPTION_Check box for URL form of command;;MNEMONIC_T),ENABLE(URL1, URL2), DISABLE(SRC))
PROMPT_FOR(URL1, URL 1,"${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for url1 argument;;MNEMONIC_U),,)
PROMPT_FOR(URL2, URL 2, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for url2 argument;;MNEMONIC_L),,)
PROMPT_FOR(SRC, Source, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for SRC argument;;MNEMONIC_S),,)
PROMPT_FOR(WCPATH, WCPath, "",ACCESSIBILITY(DESCRIPTION_Text field for wcpath argument;;MNEMONIC_W),,)
PROMPT_FOR(NREV, Old Target Revision, "",ACCESSIBILITY(DESCRIPTION_Text field for old target revision argument;;MNEMONIC_O),,)
PROMPT_FOR(MREV, New Target Revision, "",ACCESSIBILITY(DESCRIPTION_Text field for new target revision argument;;MNEMONIC_N),,)
ASK_FOR_EXPERT(NONRECURSIVE_U, Non recursive, "${NONRECURSIVE}",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(FORCE, Force, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_F),"--force ", "")
ASK_FOR_EXPERT(DRYRUN, Dry Run, "false",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_D),"--dry-run ", "")
PROMPT_FOR_EXPERT(DIFF3CMD_U, Diff 3 Cmd,"${DIFFCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for diif3cmd argument;;MNEMONIC_I),SELECTOR_FILE)
ASK_FOR_EXPERT(IGNOREANCESTRY, Ignore Ancestry, "false",ACCESSIBILITY(DESCRIPTION_Check box for ignore-ancestry argument;;MNEMONIC_F),"--ignore-ancestry ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="runOnMultipleFiles">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Import" name="IMPORT">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} import ${MESSAGE}$[? MESSAGEFILE][-F ${MESSAGEFILE} ][]${QUIET}${NONRECURSIVE}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${FORCELOG}${EDITORCMD}${ENCODING}${CONFIGDIR}${AUTOPROPS}${NOAUTOPROPS}$[? IPATH][${QUOTE}${IPATH}${QUOTE} ][]${QURL}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Import,ACCESSIBILITY(DESCRIPTION_Dialog for svn import command))
PROMPT_FOR(IPATH, Path, "",ACCESSIBILITY(DESCRIPTION_Text field for wcpath argument;;MNEMONIC_S),,)
PROMPT_FOR(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for url argument;;MNEMONIC_L),,)
PROMPT_FOR_EXPERT(MESSAGE_U, Message, "${MESSAGE_G}",ACCESSIBILITY(DESCRIPTION_Text field for message argument;;MNEMONIC_O),,)
PROMPT_FOR_EXPERT(FILEARG, File, "",ACCESSIBILITY(DESCRIPTION_Text field for file argument;;MNEMONIC_O),SELECTOR_FILE)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_Q),"-q ", "")
ASK_FOR_EXPERT(NONRECURSIVE_U, Non recursive, "${NONRECURSIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_N),"true", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
ASK_FOR_EXPERT(FORCELOG, Force-log, "false",ACCESSIBILITY(DESCRIPTION_Check box for force-log argument;;MNEMONIC_L),"--force-log ", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command,"${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Text field for editor-cmd argument;;MNEMONIC_E),SELECTOR_FILE)
PROMPT_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Check box for encoding argument;;MNEMONIC_I),,)
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
ASK_FOR_EXPERT(AUTOPROPS, Auto-props, "false",ACCESSIBILITY(DESCRIPTION_Check box for auto-props argument;;MNEMONIC_P),"--auto-props ", "")
ASK_FOR_EXPERT(NOAUTOPROPS, No-auto-props, "false",ACCESSIBILITY(DESCRIPTION_Check box for no-auto-props argument;;MNEMONIC_A),"--no-auto-props ", "")</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Export" name="EXPORT">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} export ${REVISION}${QUIET}${FORCE}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QURL}$[? IPATH1][${QUOTE}${IPATH1}${QUOTE} ][]$[? IPATH2][${QUOTE}${IPATH2}${QUOTE} ][]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Export,ACCESSIBILITY(DESCRIPTION_Dialog for svn export command))
PROMPT_FOR(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for url argument;;MNEMONIC_L),,)
PROMPT_FOR(IPATH1, Path1, "",ACCESSIBILITY(DESCRIPTION_Text field for path1 argument;;MNEMONIC_S),,)
PROMPT_FOR(IPATH2, Path2, "",ACCESSIBILITY(DESCRIPTION_Text field for path2 argument;;MNEMONIC_S),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "QUIET_G",ACCESSIBILITY(DESCRIPTION_Check box for non-recursive argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(FORCE, Force, "false",ACCESSIBILITY(DESCRIPTION_Check box for force argument of;;MNEMONIC_Q),"--force ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Blame" name="BLAME_R">
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} blame ${REVISION}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QURL} ${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Blame,ACCESSIBILITY(DESCRIPTION_Dialog for svn blame command))
PROMPT_FOR_EXPERT(TARGET, TARGET, "${URL}",ACCESSIBILITY(DESCRIPTION_Text field for TARGET argument;;MNEMONIC_T),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G",ACCESSIBILITY(DESCRIPTION_Check box for no auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
            </command>
            <command displayName="Log" name="LOGR">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} log ${REVISION}${QUIET}${VERBOSE}${TARGETS}${STOPONCOPY}${INCREMENTAL}${XML}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QURL}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Log,ACCESSIBILITY(DESCRIPTION_Dialog for svn log command))
PROMPT_FOR_EXPERT(URL_U, PATH, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(VERBOSE, Verbose, "false",ACCESSIBILITY(DESCRIPTION_Check box for verbose argument;;MNEMONIC_V),"-v ", "")
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_File Selection for target argument;;MNEMONIC_T),SELECTOR_FILE)
ASK_FOR_EXPERT(STOPONCOPY, Stop-on-copy, "false",ACCESSIBILITY(DESCRIPTION_Check box for stop-on-copy argument;;MNEMONIC_S),"--stop-on-copy ", "")
ASK_FOR_EXPERT(INCREMENTAL, Incremental, "false",ACCESSIBILITY(DESCRIPTION_Check box for incremental argument;;MNEMONIC_N),"--incremental ", "")
ASK_FOR_EXPERT(XML, XML, "false",ACCESSIBILITY(DESCRIPTION_Check box for xml argument;;MNEMONIC_X),"--xml ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)</value>
                </property>
            </command>
            <command displayName="Cat" name="CATR">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} cat ${REVISION}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QURL}${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Cat,ACCESSIBILITY(DESCRIPTION_Dialog for svn cat command))
PROMPT_FOR_EXPERT(URL_U, TARGET, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for target argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_A),"--no-auth-cache ", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"--non-interactive ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
            </command>
            <separator/>
            <command displayName="Property List" name="PROPERTY LIST_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} pl ${VERBOSE}${RECURSIVE}${REVISION}${QUIET}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}$[? FORM][--revprop ${REVISION}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property List,ACCESSIBILITY(DESCRIPTION_Dialog for svn proplist command))
ASK_FOR_EXPERT(FORM, "Use revprop", "true", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)ASK_FOR_EXPERT(VERBOSE, Verbose, "false",ACCESSIBILITY(DESCRIPTION_Check box for verbose argument;;MNEMONIC_V),"-v ", "")
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_C),"-R ", "")
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No Auth Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Property Get" name="PROPERTY GET_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} pg ${RECURSIVE}${REVISION}${STRICT}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPROPNAME} $[? FORM][--revprop ${REVISION}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property Get,ACCESSIBILITY(DESCRIPTION_Dialog for svn propget command))
PROMPT_FOR(PROPNAME, Property Name, "",ACCESSIBILITY(DESCRIPTION_Text field for propname argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(FORM, "Use revprop", "false", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_C),"-R ", "")
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
ASK_FOR_EXPERT(STRICT, Strict, "true",ACCESSIBILITY(DESCRIPTION_Check box for strict argument;;MNEMONIC_S),"--strict ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No-Auth-Cache, "${NOAUTHCACHE_U}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Property Set" name="PROPSET_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} propset ${QUIET}${REVISION}${TARGETS}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${ENCODING}${FORCE}${CONFIGDIR}${QPROPNAME} $[? VALUEFORM][${QPROPVALUE}][${-F QFILEARG} ] $[? FORM][--revprop ${REVISION}${TARGETS}${RECURSIVE}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property Set,ACCESSIBILITY(DESCRIPTION_Dialog for svn propset command))
PROMPT_FOR(PROPNAME, Property Name, "",ACCESSIBILITY(DESCRIPTION_Text field for propname argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(VALUEFORM, "Use prop value", "true", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(PROPVALUE), DISABLE(FILEARG))
PROMPT_FOR(PROPVALUE, Property Value, "",ACCESSIBILITY(DESCRIPTION_Text field for propvalue argument;;MNEMONIC_V),,)
PROMPT_FOR_EXPERT(FILEARG, File, "",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_F),,)
ASK_FOR_EXPERT(FORM, "Use revprop", "true", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET_G}",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_Q),"true", "")
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(TARGETS_U, Targets, "",ACCESSIBILITY(DESCRIPTION_File Selection for target argument;;MNEMONIC_T),SELECTOR_FILE)
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_E),"-R ", "")
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No-Auth-Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
ASK_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Check box for encoding argument;;MNEMONIC_E),"true", "")
ASK_FOR_EXPERT(FORCE, Force, "false",ACCESSIBILITY(DESCRIPTION_Check box for revprop argument;;MNEMONIC_V),"--force ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="labelMnemonic">
                    <value xml:space="preserve">I</value>
                </property>
                <property name="onRoot">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="refreshCurrentFolder">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Property Edit" name="PROPERTY EDIT_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} pe ${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${ENCODING}${EDITORCMD}${FORCE}${CONFIGDIR}${QPROPNAME} $[? FORM][--revprop ${REVISION}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property Edit,ACCESSIBILITY(DESCRIPTION_Dialog for svn propedit command))
PROMPT_FOR(PROPNAME, Property Name, "",ACCESSIBILITY(DESCRIPTION_Text field for propname argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(FORM, "Use revprop", "true", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_R),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No-Auth-Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE}_G",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
ASK_FOR_EXPERT(ENCODING_U, Encoding, "${ENCODING_G}",ACCESSIBILITY(DESCRIPTION_Check box for encoding argument;;MNEMONIC_E),"true", "")
PROMPT_FOR_EXPERT(EDITORCMD_U, Editor Command, "${EDITORCMD_G}",ACCESSIBILITY(DESCRIPTION_Check box for editor-cmd argument;;MNEMONIC_D),SELECTOR_FILE)
ASK_FOR_EXPERT(FORCE, Force, "",ACCESSIBILITY(DESCRIPTION_Check box for quiet argument;;MNEMONIC_F),"--force ", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
            <command displayName="Property Delete" name="PROPERTY DELETE_1">
                <property name="display">
                    <value xml:space="preserve">true</value>
                </property>
                <property name="exec">
                    <value xml:space="preserve">${PREFIX}${SVN_CMD} pdel ${QUIET}${RECURSIVE}${AUTH}${NOAUTHCACHE}${NONINTERACTIVE}${CONFIGDIR}${QPROPNAME} $[? FORM][--revprop ${REVISION}${QURL}][${QPATHARG}]${POSTFIX}</value>
                </property>
                <property name="inputDescriptor">
                    <value xml:space="preserve">LABEL(SVN Property Delete,ACCESSIBILITY(DESCRIPTION_Dialog for svn propdel command))
PROMPT_FOR(PROPNAME, Property Name, "",ACCESSIBILITY(DESCRIPTION_Text field for propname argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(FORM, "Use revprop", "true", ACCESSIBILITY(DESCRIPTION_Check box for revprop form of command;;MNEMONIC_T),ENABLE(URL_U), DISABLE(PATHARG_U))
PROMPT_FOR_EXPERT(PATHARG_U, PATH, "${PATHARG_G}",ACCESSIBILITY(DESCRIPTION_Text field for PATH argument;;MNEMONIC_P),,)
PROMPT_FOR_EXPERT(URL_U, URL, "${URL_G}",ACCESSIBILITY(DESCRIPTION_Text field for URL argument;;MNEMONIC_P),,)
ASK_FOR_EXPERT(QUIET_U, Quiet, "${QUIET}",ACCESSIBILITY(DESCRIPTION_Check box for revprop argument;;MNEMONIC_Q),"true", "")
ASK_FOR_EXPERT(RECURSIVE, Recursive, "false",ACCESSIBILITY(DESCRIPTION_Check box for recursive argument;;MNEMONIC_R),"-R ", "")
PROMPT_FOR_EXPERT(REVISION_U, Revision, "${REVISION_G}",ACCESSIBILITY(DESCRIPTION_Text field for revision argument;;MNEMONIC_C),,)
PROMPT_FOR_EXPERT(USER_U, Username, "${USER_G}",ACCESSIBILITY(DESCRIPTION_Text field for username argument;;MNEMONIC_U),,)
PROMPT_FOR_PASSWORD_EXPERT(PWORD_U, Password, "${PWORD_G}",ACCESSIBILITY(DESCRIPTION_Text field for password argument;;MNEMONIC_W),,)
ASK_FOR_EXPERT(NOAUTHCACHE_U, No-Auth-Cache, "${NOAUTHCACHE_G}",ACCESSIBILITY(DESCRIPTION_Check box for no-auth-cache argument;;MNEMONIC_N),"true", "")
ASK_FOR_EXPERT(NONINTERACTIVE_U, Non-Interactive, "${NONINTERACTIVE_G}",ACCESSIBILITY(DESCRIPTION_Check box for non-interactive argument;;MNEMONIC_I),"true", "")
PROMPT_FOR_EXPERT(CONFIGDIR_U, Config-dir, "${CONFIGDIR_G}",ACCESSIBILITY(DESCRIPTION_Text field for config-dir argument;;MNEMONIC_C),SELECTOR_DIR)
                    </value>
                </property>
                <property name="supportsAdvancedMode">
                    <value xml:space="preserve">true</value>
                </property>
            </command>
        </command>
    </commands>
    <globalCommands/>
</configuration>
