/*
 *                         Sun Public License Notice
 *
 * The contents of this file are subject to the Sun Public License Version
 * 1.0 (the "License"). You may not use this file except in compliance with 
 * the License. A copy of the License is available at http://www.sun.com/
 *
 * The Original Code is the Jabber module.
 * The Initial Developer of the Original Code is Petr Nejedly
 * Portions created by Petr Nejedly are Copyright (c) 2004.
 * All Rights Reserved.
 *
 * Contributor(s): Petr Nejedly
 */

package org.netbeans.modules.jabber.ui;

import java.awt.Dialog;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import javax.swing.SwingUtilities;
import org.netbeans.modules.jabber.Contact;
import org.netbeans.modules.jabber.Manager;
import org.netbeans.modules.jabber.Result;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;

/**
 *
 * @author  nenik
 */
public class RemoveContactUI extends javax.swing.JPanel {

    
    public static void removeContacts(Contact[] contacts) {
        Manager man = contacts[0].getManager();
        new RemoveContactUI(man, contacts).doRemove();

    }
    
    
    private Manager manager;
    private Contact[] toRemove;
    private Result result;
    Dialog d;

    
    /** Creates new form RemoveContactUI */
    private  RemoveContactUI(Manager man, Contact[] contacts) {
        manager = man;
        toRemove = contacts;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        cancelButton = new javax.swing.JButton();
        list = new javax.swing.JLabel();

        cancelButton.setText("Cancel");
        cancelButton.setMinimumSize(new java.awt.Dimension(200, 100));

        setLayout(new java.awt.BorderLayout());

        add(list, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel list;
    // End of variables declaration//GEN-END:variables


    
    private void doRemove() {
        // prepare listener
        Lst listener = new Lst();
        
        StringBuffer listBuffer = new StringBuffer();
        Contact.List cList = manager.getContactList();

        for (int i = 0; i<toRemove.length; i++ ) {
            listBuffer.append(cList.getLongDisplayName(toRemove[i].getJid()));            
            if (i < toRemove.length - 1) listBuffer.append(", ");
        }
        

        list.setText("Removing " + listBuffer.toString());
        
        DialogDescriptor desc = new DialogDescriptor(this, "Removing ...", true,
            new Object[] {cancelButton}, cancelButton,
            DialogDescriptor.BOTTOM_ALIGN, null, listener);
        
        d = DialogDisplayer.getDefault().createDialog(desc);
        d.addWindowListener(listener);

        result = manager.getContactList().removeContacts(toRemove, listener);
        d.show();
    }

    private class Lst extends WindowAdapter implements ActionListener, Result.Callback, Runnable {
        boolean done;
        
        // cancel
        public void actionPerformed(java.awt.event.ActionEvent e) {
            result.cancel();
        }
        
        // result came, replan to AWT
        public void resultFinished(Result result) {
            done = true;
            SwingUtilities.invokeLater(this);
        }    
        
        // either finished removing or cancelled
        public void run() {
            d.dispose();
        }
        
        public void windowClosed(java.awt.event.WindowEvent e) {
            if (!done) {
                done = true;
                result.cancel();
                d.removeWindowListener(this); // necessary?
            }
        }

        
    }
    
}
