<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
           xmlns:rss="http://schemas.sun.com/jbi/wsdl-extensions/rss/" 
           targetNamespace="http://schemas.sun.com/jbi/wsdl-extensions/rss/">
    <xs:import namespace="http://schemas.xmlsoap.org/wsdl/" schemaLocation="wsdl.xsd"/>
    <xs:element name="binding" type="rss:tBinding">
        <xs:annotation>
            <xs:documentation>
                "binding" indicates a protocol based binding.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="tBinding">
        <xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement"/>
            <!-- could add more attributes to the binding -->
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="operation" type="rss:tOperation"/>
    <xs:complexType name="tOperation">
        <xs:annotation>
            <xs:documentation>
                "operation" defines the protocol based operation binding details.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement">
                <xs:attribute name="name" type="rss:operationName" use="required">
                    <xs:annotation>
                        <xs:documentation>Select the name of the operation. Subscribe provides the capability to receive notifications of new feed entries from external feeds. Publish allows components to send the RSS BC a new entry to publish to its internal feed store.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="operationName">
        <xs:restriction base="xs:string">
                <xs:enumeration value="subscribe"/>
                <xs:enumeration value="publish"/>
        </xs:restriction>
    </xs:simpleType>        
    <xs:element name="address" type="rss:tAddress">
        <xs:annotation>
            <xs:documentation>
                "address" indicates protocol based service address.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="tAddress">
        <xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement">
                <xs:attribute name="feedTitle" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Feed title is the title of your feed. For example in RSS 2.0 this corresponds to the Channel Title. Required only for publish.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="feedDescription" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Feed description is the description of your feed. For example in RSS 2.0 this corresponds to the Channel Description. Required only for publish.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="feedType" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Feed type is used to specify the type and version of your feed. Format is type_version, for example "rss_2.0" or "atom_1.0". Required only for publish.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="feedUrl" type="xs:anyURI">
                    <xs:annotation>
                        <xs:documentation>Feed URL has different meanings for publish and subscribe. For publish this correlates to the local address, port, and path you wish your feed to use; for example http://localhost:8282/myfeed/latest. This is the URL you would point a subscribe to as well as your favorite RSS Reader. For subscribe feedUrl correlates to the external RSS feed URL; for example http://www.cnn.com/feed/news.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="input" type="rss:tInput">
        <xs:annotation>
            <xs:documentation>
            "input" indicates a rss protocol based operation input.
            </xs:documentation>
            <xs:appinfo>
                <prop:ElementProperties  xmlns:prop="http://xml.netbeans.org/schema/wsdlui/property">
                    <prop:Property attributeName="pollingInterval" propertyOrder="1">
                        <prop:BuiltInCustomizer>
                            <prop:SimpleCustomizer name="PartChooser"/>
                        </prop:BuiltInCustomizer>
                    </prop:Property>
                    <prop:Property attributeName="filterByType"  propertyOrder="2">
                        <prop:BuiltInCustomizer>
                            <prop:SimpleCustomizer name="PartChooser"/>
                        </prop:BuiltInCustomizer>
                    </prop:Property>
                    <prop:Property attributeName="filterByValue" propertyOrder="3">
                        <prop:BuiltInCustomizer>
                            <prop:SimpleCustomizer name="PartChooser"/>
                        </prop:BuiltInCustomizer>
                    </prop:Property>
                    <prop:Property attributeName="entryTitle" propertyOrder="4">
                        <prop:BuiltInCustomizer>
                            <prop:SimpleCustomizer name="PartChooser"/>
                        </prop:BuiltInCustomizer>
                    </prop:Property>
                    <prop:Property attributeName="entryLink" propertyOrder="5">
                        <prop:BuiltInCustomizer>
                            <prop:SimpleCustomizer name="PartChooser"/>
                        </prop:BuiltInCustomizer>
                    </prop:Property>
                    <prop:Property attributeName="entryDescription" propertyOrder="6">
                        <prop:BuiltInCustomizer>
                            <prop:SimpleCustomizer name="PartChooser"/>
                        </prop:BuiltInCustomizer>
                    </prop:Property>
                </prop:ElementProperties>
            </xs:appinfo>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="tInput">
        <xs:annotation>
            <xs:documentation>
                "input" defines the protocol based input binding details.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement">
                <xs:attribute name="pollingInterval" type="xs:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>The time unit in seconds to poll for feed changes. Required only for subscribe.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="filterByType" type="rss:filterType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Specify whether to filter or not. Two values are supported: none and publishDate. Default is publishDate. To specify that you want all the feed entries everytime a change has occured specify "none". If you wish to only receive the latest feed entries, determined by the publish date of the entry, then specify "publishDate". The "publishDate" value is also used in conjunction with the filterByValue attribute. Required only for subscribe.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="filterByValue" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Used when filterByType is publishDate. The values supported are: now or an actual date + time in the format yyyy-MM-dd HH:mm (military style). The vale now means to use the current date + time as the first filter date. This will notify you only of the recent changes, nothing historical. Here is an example: filterByValue="now". If you specify an actual date + time, that value will be used as the first filter date. Here is an example: filterByValue="2007-05-02 14:30. Required only for subcribe."</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="entryTitle" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>TBD</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="entryLink" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>TBD</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="entryDescription" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>TBD</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="filterType">
        <xs:restriction base="xs:string">
                <xs:enumeration value="none"/>
                <xs:enumeration value="publishDate"/>
        </xs:restriction>
    </xs:simpleType>        
</xs:schema>
