/*
  * The contents of this file are subject to the terms of the Common Development
  * and Distribution License (the License). You may not use this file except in
  * compliance with the License.
  *
  * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
  * or http://www.netbeans.org/cddl.txt.
  *
  * When distributing Covered Code, include this CDDL Header Notice in each file
  * and include the License file at http://www.netbeans.org/cddl.txt.
  * If applicable, add the following below the CDDL Header, with the fields
  * enclosed by brackets [] replaced by your own identifying information:
  * "Portions Copyrighted [year] [name of copyright owner]"
  *
  * The Original Software is NetBeans. The Initial Developer of the Original
  * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
  * Microsystems, Inc. All Rights Reserved.
  */
package org.netbeans.modules.portalpack.portlets.genericportlets.ddapi.impl.sun.ui;

import java.awt.Frame;
import java.awt.event.ItemEvent;
import java.util.List;
import org.netbeans.modules.portalpack.portlets.genericportlets.ddapi.eventing.EventObject;

/**
 *
 * @author  Satyaranjan
 */
public class GenerateEventDialog extends javax.swing.JDialog {
    private String portlet = "";
    private EventObject event;
    private boolean cancel = false;
    /** Creates new form GenerateEventDialog */
    public GenerateEventDialog(Frame parent,String portlet,EventObject event) {
        super(parent,true);
        initComponents();
        this.portlet = portlet;
        this.event = event;
        initData();
        setLocation(parent.getX()+(parent.getWidth()-getWidth())/2,parent.getY()+(parent.getHeight()-getHeight())/2);
    }
    
    private void initData()
    {
        eventNameTf.setEditable(false);
        portletNameTf.setText(portlet);
        if(event.getName() != null)
            eventNameTf.setText(event.getName());
        else if(event.getQName() != null)
            eventNameTf.setText(event.getQName().toString());
    }
    
    public void setMethods(Object[] methods)
    {
        for(int i=0;i<methods.length;i++)
        {
            methodListCombo.addItem(methods[i]);
        }
    }
    
    public void setMethods(List list)
    {
        for(int i=0;i<list.size();i++)
            methodListCombo.addItem(list.get(i));
        
    }
    
    public boolean isCancelled()
    {
        return cancel;
    }
    public void setSuggestedMethodName(String method)
    {
        methodNameTxt.setText(method);

    }
    public String getSuggestedMethodName()
    {
        return methodNameTxt.getText();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generateSourcePanel = new javax.swing.JPanel();
        addToExistingMethodCB = new javax.swing.JCheckBox();
        methodListCombo = new javax.swing.JComboBox();
        generateNewMthodLabel = new javax.swing.JLabel();
        methodNameTxt = new javax.swing.JTextField();
        eventParametersPanel = new javax.swing.JPanel();
        eventNameLabel = new javax.swing.JLabel();
        eventNameTf = new javax.swing.JTextField();
        portletNameLabel = new javax.swing.JLabel();
        portletNameTf = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.title")); // NOI18N

        generateSourcePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.generateSourcePanel.border.title"))); // NOI18N

        addToExistingMethodCB.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.addToExistingMethodCB.text")); // NOI18N
        addToExistingMethodCB.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        addToExistingMethodCB.setMargin(new java.awt.Insets(0, 0, 0, 0));
        addToExistingMethodCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addToExistingMethodCBItemStateChanged(evt);
            }
        });

        generateNewMthodLabel.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.generateNewMthodLabel.text")); // NOI18N

        methodNameTxt.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.methodNameTxt.text")); // NOI18N

        org.jdesktop.layout.GroupLayout generateSourcePanelLayout = new org.jdesktop.layout.GroupLayout(generateSourcePanel);
        generateSourcePanel.setLayout(generateSourcePanelLayout);
        generateSourcePanelLayout.setHorizontalGroup(
            generateSourcePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(generateSourcePanelLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(generateSourcePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(addToExistingMethodCB, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(generateSourcePanelLayout.createSequentialGroup()
                        .add(generateNewMthodLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(27, 27, 27)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(generateSourcePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(methodNameTxt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .add(methodListCombo, 0, 236, Short.MAX_VALUE)))
        );
        generateSourcePanelLayout.setVerticalGroup(
            generateSourcePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(generateSourcePanelLayout.createSequentialGroup()
                .add(18, 18, 18)
                .add(generateSourcePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addToExistingMethodCB)
                    .add(methodListCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26)
                .add(generateSourcePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(generateNewMthodLabel)
                    .add(methodNameTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        eventParametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.eventParametersPanel.border.title"))); // NOI18N

        eventNameLabel.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.eventNameLabel.text")); // NOI18N

        eventNameTf.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.eventNameTf.text")); // NOI18N

        portletNameLabel.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.portletNameLabel.text")); // NOI18N

        portletNameTf.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.portletNameTf.text")); // NOI18N
        portletNameTf.setEnabled(false);

        org.jdesktop.layout.GroupLayout eventParametersPanelLayout = new org.jdesktop.layout.GroupLayout(eventParametersPanel);
        eventParametersPanel.setLayout(eventParametersPanelLayout);
        eventParametersPanelLayout.setHorizontalGroup(
            eventParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(eventParametersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(eventParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(eventParametersPanelLayout.createSequentialGroup()
                        .add(eventNameLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(4, 4, 4))
                    .add(portletNameLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(91, 91, 91)
                .add(eventParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(portletNameTf, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .add(eventNameTf, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)))
        );
        eventParametersPanelLayout.setVerticalGroup(
            eventParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(eventParametersPanelLayout.createSequentialGroup()
                .add(eventParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(eventNameTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(eventNameLabel))
                .add(14, 14, 14)
                .add(eventParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(portletNameLabel)
                    .add(portletNameTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        okButton.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.ok.text")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "GenerateEventDialog.cancel.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(layout.createSequentialGroup()
                            .add(4, 4, 4)
                            .add(generateSourcePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                            .add(263, 263, 263)
                            .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(cancelButton)))
                    .add(eventParametersPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {cancelButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .add(generateSourcePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(eventParametersPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(okButton)
                    .add(cancelButton))
                .addContainerGap())
        );

        eventParametersPanel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GenerateEventDialog.class, "ACC_Event_Parameters")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    // TODO add your handling code here:
    cancel = true;
    setVisible(false);
    dispose();
}//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    // TODO add your handling code here:
    setVisible(false);
    dispose();
}//GEN-LAST:event_okButtonActionPerformed

private void addToExistingMethodCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addToExistingMethodCBItemStateChanged
// TODO add your handling code here:
    int state = evt.getStateChange();
    if(state == ItemEvent.SELECTED)
        methodNameTxt.setEditable(false);
    else
        methodNameTxt.setEditable(true);
        
}//GEN-LAST:event_addToExistingMethodCBItemStateChanged
   
    public boolean addToExistingMethod()
    {
        return addToExistingMethodCB.isSelected();
    }

    public Object getExistingMethodName()
    {
        return methodListCombo.getSelectedItem();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addToExistingMethodCB;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel eventNameLabel;
    private javax.swing.JTextField eventNameTf;
    private javax.swing.JPanel eventParametersPanel;
    private javax.swing.JLabel generateNewMthodLabel;
    private javax.swing.JPanel generateSourcePanel;
    private javax.swing.JComboBox methodListCombo;
    private javax.swing.JTextField methodNameTxt;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel portletNameLabel;
    private javax.swing.JTextField portletNameTf;
    // End of variables declaration//GEN-END:variables
    
}
