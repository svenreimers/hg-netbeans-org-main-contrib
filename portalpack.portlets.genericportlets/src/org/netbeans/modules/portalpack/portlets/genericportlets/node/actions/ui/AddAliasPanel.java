/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 * 
 * Contributor(s):
 * 
 * Portions Copyrighted 2008 Sun Microsystems, Inc.
 */
package org.netbeans.modules.portalpack.portlets.genericportlets.node.actions.ui;

import javax.xml.namespace.QName;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.NbBundle;

/**
 *
 * @author  Satyaranjan
 */
public class AddAliasPanel extends javax.swing.JDialog {
    private QName qName;
    /** Creates new form AddAliasPanel */
    public AddAliasPanel(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
   
        setLocation(parent.getX()+(parent.getWidth()-getWidth())/2,parent.getY()+(parent.getHeight()-getHeight())/2);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        localPartTf = new javax.swing.JTextField();
        namespace = new javax.swing.JLabel();
        namespaceTf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        prefixTf = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        okButton = new javax.swing.JButton();
        cancelTf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "AddAliasPanel.Event.title")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "LBL_LOCAL_PART")); // NOI18N

        localPartTf.setText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "AddAliasPanel.localPartTf.text")); // NOI18N
        localPartTf.setToolTipText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "AddAliasPanel.localPartTf.tooltip")); // NOI18N

        namespace.setText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "LBL_NAMESPACE")); // NOI18N

        namespaceTf.setText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "AddAliasPanel.namespaceTf.text")); // NOI18N
        namespaceTf.setToolTipText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "AddAliasPanel.namespaceTf.tooltip")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "LBL_PREFIX")); // NOI18N

        prefixTf.setText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "AddAliasPanel.prefixTf.tooltip")); // NOI18N
        prefixTf.setToolTipText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "AddAliasPanel.prefixTf.tooltip")); // NOI18N
        prefixTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefixTfActionPerformed(evt);
            }
        });

        okButton.setText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "LBL_OK")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelTf.setText(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "LBL_CANCEL")); // NOI18N
        cancelTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelTfActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(namespace)
                            .add(jLabel2))
                        .add(22, 22, 22)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(namespaceTf)
                                .add(localPartTf, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
                            .add(prefixTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelTf)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(localPartTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(namespace)
                    .add(namespaceTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(prefixTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelTf)
                    .add(okButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        okButton.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "ACC_Ok")); // NOI18N
        cancelTf.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AddAliasPanel.class, "ACC_Cancel")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void prefixTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefixTfActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_prefixTfActionPerformed

private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
// TODO add your handling code here:
    String prefix = prefixTf.getText();
    String namespace = namespaceTf.getText();
    String localPart = localPartTf.getText();
    
    
    if(localPart == null || localPart.length() == 0)
    {
        NotifyDescriptor nd = new NotifyDescriptor.Message(NbBundle.getMessage(AddAliasPanel.class, "NOT_A_VALID_LOCAL_PART"),NotifyDescriptor.ERROR_MESSAGE);
        DialogDisplayer.getDefault().notify(nd);
        return;
    }
    
    if(namespace == null || namespace.length() ==0) namespace = null;
    
    if(namespace != null && namespace.contains(" "))
    {
        NotifyDescriptor nd = new NotifyDescriptor.Message(NbBundle.getMessage(AddAliasPanel.class, "NOT_A_VALID_NAMESPACE"),NotifyDescriptor.ERROR_MESSAGE);
        DialogDisplayer.getDefault().notify(nd);
        return;
    }
    
    if(prefix != null && prefix.contains(" "))
    {
        NotifyDescriptor nd = new NotifyDescriptor.Message(NbBundle.getMessage(AddAliasPanel.class, "NOT_A_VALID_PREFIX"),NotifyDescriptor.ERROR_MESSAGE);
        DialogDisplayer.getDefault().notify(nd);
        return;
    }
    
        if(prefix == null || prefix.length() == 0)
            qName = new QName(namespace,localPart);
        else
            qName = new QName(namespace,localPart,prefix);
    this.setVisible(false);
    this.dispose();
}//GEN-LAST:event_okButtonActionPerformed

public QName getAlias()
{
    return qName;
}
private void cancelTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelTfActionPerformed
// TODO add your handling code here:
      this.setVisible(false);
        this.dispose();
}//GEN-LAST:event_cancelTfActionPerformed

    /**
    * @param args the command line arguments
    */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelTf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField localPartTf;
    private javax.swing.JLabel namespace;
    private javax.swing.JTextField namespaceTf;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField prefixTf;
    // End of variables declaration//GEN-END:variables

}
