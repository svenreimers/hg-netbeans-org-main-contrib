/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

/**
 * Examples of deprecated method migration.
 */

//java.awt.Component
$a.getPeer()!=null => $a.isDisplayable() :: $a instanceof java.awt.Component;
$a.getPeer()==null => !$a.isDisplayable() :: $a instanceof java.awt.Component;
$a.getPeer()=>comment("FIX: Eliminate peer usage") :: $a instanceof java.awt.Component;
$a.enable() => $a.setEnabled(true) :: $a instanceof java.awt.Component;
$a.disable() => $a.setEnabled(false) :: $a instanceof java.awt.Component;
$a.enable($b) => $a.setEnabled($b) :: $a instanceof java.awt.Component;
$a.show() => $a.setVisible(true) :: $a instanceof java.awt.Component;
$a.hide() => $a.setVisible(false) :: $a instanceof java.awt.Component;
$a.show($b) => $a.setVisible($b) :: $a instanceof java.awt.Component;
$a.location() => $a.getLocation() :: $a instanceof java.awt.Component;
$a.getLocation().x => $a.getX() :: $a instanceof java.awt.Component;
$a.getLocation().y => $a.getY() :: $a instanceof java.awt.Component;
$a.move($x,$y) => $a.setLocation($x,$y) :: $a instanceof java.awt.Component;
$a.size() => $a.getSize() :: $a instanceof java.awt.Component;
$a.getSize().width => $a.getWidth() :: $a instanceof java.awt.Component;
$a.getSize().height => $a.getHeight() :: $a instanceof java.awt.Component;
$a.resize($x,$y)=>$a.setSize($x,$y) :: $a instanceof java.awt.Component;
$a.resize($d)=>$a.setSize($d) :: $a instanceof java.awt.Component;
$a.bounds()=>$a.getBounds() :: $a instanceof java.awt.Component;
$a.reshape($x,$y,$width,$height)=>$a.setBounds($x,$y,$width,$height) :: $a instanceof java.awt.Component;
$a.preferredSize()=>$a.getPreferredSize() :: $a instanceof java.awt.Component;
$a.minimumSize()=>$a.getMinimumSize() :: $a instanceof java.awt.Component;
$a.layout()=>$a.doLayout() :: $a instanceof java.awt.Component;
$a.inside($x,$y)=>$a.contains($x,$y) :: $a instanceof java.awt.Component;
$a.locate($x,$y)=>$a.getComponentAt($x,$y) :: $a instanceof java.awt.Component;
$a.deliverEvent($e)=>$a.postEvent($e) :: $a instanceof java.awt.Component;
$a.postEvent($e)=>$a.dispatchEvent($e) :: $a instanceof java.awt.Component;
$a.handleEvent($e)=>$a.processEvent($e) :: $a instanceof java.awt.Component;
//skipped all the deprecated event methods like mouseDown($x,$y)

//Frame
Frame.DEFAUL$tCURSOR=>Cursor.DEFAUL$tCURSOR;
Frame.CROSSHAIR_CURSOR=>Cursor.CROSSHAIR_CURSOR;
$f.getCursorType()=>$f.getCursor().getType() :: $f instanceof java.awt.Frame;


//String
$s.getBytes($a,$b,$c,$d)=>comment("FIX: Use chars, not bytes");
//new String((byte[])$a,$b,$c,$d)=>comment("FIX: Use chars, not bytes");
new $t($s)=>$s :: $t instanceof java.lang.String && $s instanceof java.lang.String;

//Container
$c.countComponents()=>$c.getComponentCount();
$c.insets()=>$c.getInsets();

//Character
$t.isSpace($c) => $t.isWhitespace($c) :: $t instanceof java.lang.Character;
$t.isJavaLetter($c) => $t.isJavaIdentifierStart($c) :: $t instanceof java.lang.Character;
$t.isJavaLetterOrDigit($c) => $t.isJavaIdentifierPart($c) :: $t instanceof java.lang.Character;

//Boolean
new $t($b) => $b ? $t.TRUE : $t.FALSE :: $t instanceof java.lang.Boolean;
true?$a:$b=>$a;
false?$a:$b=>$b;
