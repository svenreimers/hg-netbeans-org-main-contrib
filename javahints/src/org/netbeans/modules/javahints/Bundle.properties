# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
#The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
#Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.


#
# This file contains localized strings used in this package.  The typical
# NetBeans pattern is to use one bundle per-package, called Bundle.properties;
# the openide class NbBundle supports this usage.
#
# Typically, fetch a resource as follows:
# NbBundle.getMessage (MyClass.class, "SOME_Key");
#
# Don't bother caching strings or worse, static references to resource bundles -
# this may seem like its faster, but it wastes memory and slows things down
# in the long run.
#

Add_cast_to_X=Cast {0} to {1}

Add_throws_clause_for_X=Add throws clause for {0}

Add_import_for_X=Add import for {0}

#actions in the Refactor menu:
CTL_IntroduceVariableAction=Introduce Variable...
CTL_IntroduceConstantAction=Introduce Constant...
CTL_IntroduceFieldAction=Introduce Field...
CTL_IntroduceMethodAction=Introduce Method...

Implement_all_abstract_methods=Implement all abstract methods

MSG_CreateField=Create field {0} in {1}
MSG_CreateMethod=Create method {0} in {1}
MSG_CreateLocalVariable=Create local variable {0}
MSG_CreateParameter=Create parameter {0}
MSG_MakeClassAbstract=Make the class {0} abstract


# InitializeVariableHint
MSG_InitializeVar=Initialize variable {0}
LBL_surroundTryCatch=Surround with try-catch

LBL_Error_Provider=Java Error Provider

jCheckBox1.text=Replace All Occurrences

jCheckBox2.text=Declare Final

TL_InitializeIn=Initialize in
IntroduceFieldPanel.name.text=
LBL_Name=&Name\:

LBL_DeclareFinal=Declare &Final

LBL_ReplaceAll=Replace &All Occurrences
LBL_public=&public
LBL_Default=&default
LBL_protected=pr&otected
LBL_private=pri&vate
LBL_CurrentMethod=Current &Method
LBL_Field=F&ield
LBL_Constructors=&Constructor(s)

IntroduceFieldPanel.lblInitializeIn.text=Initialize in\:

LBL_Access=Access\:

HINT_Introduce=Introduce...
#fixes in the editor:
FIX_IntroduceConstant=Introduce Constant...
FIX_IntroduceVariable=Introduce Variable...
FIX_IntroduceField=Introduce Field...
FIX_IntroduceMethod=Introduce Method...
#captions of the dialogs:
CAP_IntroduceConstant=Introduce Constant
CAP_IntroduceVariable=Introduce Variable
CAP_IntroduceField=Introduce Field
CAP_IntroduceMethod=Introduce Method

#error messages:
ERR_Not_Selected=No supported file opened in the editor.
ERR_Not_Supported=Not supported on this file.
ERR_Invalid_Selection=Invalid Selection.
ERR_Too_Many_Different_Exits=Too many different exits.
ERR_Too_Many_Return_Values=Too many return values.
ERR_Different_Return_Values=Different return values.
ERR_Break_Mismatch=Break or Continue lead to different statements.


#ConvertAnonymousToInner:
HINT_ConvertAnonymousToInner=Convert Anonymous to Inner
DN_ConvertAnonymousToInner=Convert Anonymous to Inner
DESC_ConvertAnonymousToInner=Convert Anonymous to Inner
FIX_ConvertAnonymousToInner=Convert Anonymous to Inner


ERR_DereferencingNull=Dereferencing null
ERR_PossiblyDereferencingNull=Possibly Dereferencing null
ERR_AssigningNullToNotNull=Assigning Null to NotNull Variable
ERR_PossibleAssigingNullToNotNull=Possibly Assigning Null to NotNull Variable
ERR_NULL_TO_NON_NULL_ARG=Passing null to not-null argument
ERR_POSSIBLENULL_TO_NON_NULL_ARG=Passing possible null to not-null argument


DN_NegateCondition=Negate if condition
DESC_NegateCondition=Negate if condition
FIX_NegateCondition=Negate if condition

DSC_Excluded=Visible notice when the Excluder (see Code Completion -> Java) has been violated. Feedback to http://www.netbeans.org/issues/show_bug.cgi?id=125060
DN_Excluded=Excluded
HINT_Excluded={0} is in the Exclude list

DN_org.netbeans.modules.javahints.RPD=RequestProcessor.getDefault()
DESC_org.netbeans.modules.javahints.RPD=RequestProcessor.getDefault()

DN_MissingReturn=Method Missing a Return Statement
FIX_AddReturn=Add return statement
