<?xml version="1.0" encoding="UTF-8"?><!-- -*- sgml-indent-step: 2 -*- -->
<!--
   -                 Sun Public License Notice
   - 
   - The contents of this file are subject to the Sun Public License
   - Version 1.0 (the "License"). You may not use this file except in
   - compliance with the License. A copy of the License is available at
   - http://www.sun.com/
   - 
   - The Original Code is NetBeans. The Initial Developer of the Original
   - Code is Sun Microsystems, Inc. Portions Copyright 1997-2003 Sun
   - Microsystems, Inc. All Rights Reserved.
  -->
<?xml-stylesheet type="text/xml" href="../../../../../nbbuild/javadoctools/apichanges.xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../../../../../nbbuild/javadoctools/apichanges.dtd">

<!--

INFO FOR PEOPLE ADDING CHANGES:

Check the DTD (apichanges.dtd) for details on the syntax. You do not
need to regenerate the HTML, this will be done periodically; just
change the XML. If you can, validate the XML against the DTD, if not
do not worry about it. Rough syntax of a change (several parts optional):

<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>

Also permitted elements: <package>, <branch>. <version> is API spec
version, recommended for all new changes. <compatibility> should say
if things were added/modified/deprecated/etc. and give all information
related to upgrading old code. List affected top-level classes and
link to issue numbers if applicable. See the DTD for more details.

Changes need not be in any particular order, they are sorted in various
ways by the stylesheet anyway.

Dates are assumed to mean "on the trunk". If you *also* make the same
change on a stabilization branch, use the <branch> tag to indicate this
and explain why the change was made on a branch in the <description>.

Please only change this file on the trunk! Rather: you can change it
on branches if you want, but these changes will be ignored; only the
trunk version of this file is important.

Deprecations do not count as incompatible, assuming that code using the
deprecated calls continues to see their documented behavior. But do
specify deprecation="yes" in <compatibility>.

This file is not a replacement for Javadoc: it is intended to list changes,
not describe the complete current behavior, for which ordinary documentation
is the proper place.

-->

<apichanges>

  <!-- First, a list of API names you may use: -->
  <apidefs>
    <!-- org.netbeans.api.mdr.MDRManager, MDRepository, CreationFailedException, MDRObject -->
    <apidef name="facility">Facility API</apidef>
    <!-- org.netbeans.api.mdr.XMIReader, XMIWriter, DTDProducer, JMIMapper, JMIStreamFactory -->
    <apidef name="services">Services API</apidef>
    <!-- org.netbeans.api.mdr.events.* -->
    <apidef name="events">Events API</apidef>
    <!-- org.netbeans.api.xmi.** -->
    <apidef name="xmi">XMI API</apidef>
  </apidefs>

<!-- ACTUAL CHANGES BEGIN HERE: -->

  <changes>
      <change>
          <api name="events"/>
          <summary>API and SPI finalized.</summary>
          <version major="1" minor="1"/>
          <date day="28" month="1" year="2005"/>
          <author login="mmatula"/>
          <compatibility modification="yes" />
          <description>VetoChangeException added to allow vetoable "preChange" events. The exception can be thrown from MDRPreChangeListener.plannedChange().
          </description>
          <class package="org.netbeans.api.mdr.events" name="VetoChangeException"/>
          <class package="org.netbeans.api.mdr.events" name="MDRPreChangeListener"/>
          <issue number="51937"/>
      </change>
      <change>
          <api name="xmi"/>
          <summary>Deprecated API removed.</summary>
          <version major="0" minor="986"/>
          <date day="2" month="5" year="2004"/>
          <author login="mmatula"/>
          <compatibility modification="yes" />
          <description>Deprecated API classes (org.netbeans.api.mdr.XMIReader and org.netbeans.api.mdr.XMIWriter) removed.
          </description>
          <class package="org.netbeans.api.mdr" name="XMIReader"/>
          <class package="org.netbeans.api.mdr" name="XMIWriter"/>
          <issue number="41562"/>
      </change>
    <change>
        <api name="facility"/>
        <summary>Added MDRManager.shutdownAll and MDRepository.shutdown methods.</summary>
        <version major="0" minor="98"/>
        <date day="9" month="5" year="2002"/>
        <author login="mmatula"/>
        <compatibility addition="yes"/>
        <description>Added additional shutdownAll method to MDRManager and
	  MDRepository.shutdown method to MDRepository which can be implemented
	  to perform any cleanup actions needed at the MDR shutdown.
        </description>
        <class package="org.netbeans.api.mdr" name="MDRManager"/>
        <class package="org.netbeans.api.mdr" name="MDRepository"/>
        <!--issue number="19668"/-->
    </change>
    <change>
        <api name="events"/>
        <summary>Added transaction events, extended events API to allow events filtering.</summary>
        <version major="0" minor="981"/>
        <date day="18" month="7" year="2002"/>
        <author login="hkrug"/>
        <author login="mmatula"/>
        <compatibility addition="yes"/>
        <description>Added transaction events fired when a writable transaction
          starts and ends. These events are fired on repository object (new subclass
          of MDRChangeEvent named TransactionEvent was introduced to represent
          transaction events). In addition the events
          API was extended to allow users to specify a bitmask used for filtering events delivered
          to a listener. For this purpose, additional addListener and removeListener methods 
          were introduced to MDRChangeSource interface. Also new bitmask constants were added to
          existing event objects.
        </description>
        <class package="org.netbeans.api.mdr.events" name="TransactionEvent"/>
        <class package="org.netbeans.api.mdr.events" name="MDRChangeSource"/>
        <class package="org.netbeans.api.mdr.events" name="InstanceEvent"/>
        <class package="org.netbeans.api.mdr.events" name="ExtentEvent"/>
        <class package="org.netbeans.api.mdr.events" name="AttributeEvent"/>
        <class package="org.netbeans.api.mdr.events" name="AssociationEvent"/>
        <issue number="25186"/>
        <issue number="25214"/>
    </change>
    <change>
        <api name="services"/>
        <summary>XMIReader and XMIWriter made deprecated, added new XMI API package.</summary>
        <version major="0" minor="982"/>
        <date day="11" month="8" year="2002"/>
        <author login="mmatula"/>
        <compatibility deprecation="yes" addition="yes"/>
        <description>
            Old org.netbeans.api.mdr.XMIReader and XMIWriter classes were made deprecated
            as the new refactored XMI API was created in org.netbeans.api.xmi package.
        </description>
        <class package="org.netbeans.api.mdr" name="XMIReader"/>
        <class package="org.netbeans.api.mdr" name="XMIWriter"/>
        <package name="org.netbeans.api.xmi"/>
    </change>
    <change>
        <api name="services"/>
        <summary>JMIMapper.JMIStreamFactory was moved from JMIMapper and extended.</summary>
        <version major="0" minor="983"/>
        <date day="20" month="9" year="2002"/>
        <author login="mmatula"/>
        <compatibility addition="yes" modification="yes"/>
        <description>
            JMIStreamFactory was made a regular class (as opposed to
            being innerclass of JMIMapper). It was changed from
            interface to abstract class and a new method was added with
            additional parameter to enable specifying file
            extension for the generated data.
        </description>
        <class package="org.netbeans.api.mdr" name="JMIMapper"/>
        <class package="org.netbeans.api.mdr" name="JMIStreamFactory"/>
    </change>
    <change>
        <api name="xmi"/>
        <summary>New methods added to XMIOutputConfig.</summary>
        <version major="0" minor="984"/>
        <date day="18" month="11" year="2002"/>
        <author login="dprusa"/>
        <compatibility addition="yes"/>
        <description>
            getEncoding and setEncoding abstract methods were added to XMIOutputConfig
        </description>
        <class package="org.netbeans.api.xmi" name="XMIOutputConfig"/>
    </change>
  </changes>

  <!-- Now the surrounding HTML text and document structure: -->

  <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <======================

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE mdr/api/doc/changes/apichanges.xml

-->
    <head>
      <title>MDR API Changes by Date</title>
      <link rel="stylesheet" href="http://www.netbeans.org/netbeans.css" type="text/css"/>
      <meta name="CATEGORY" content="OtherDevelopmentDoc"/>
      <meta name="DESCRIPTION" content="A cross-indexed list of all changes made to the NetBeans MDR module APIs."/>
    </head>
    <body>

<h1>Introduction</h1>

<p>This document lists changes made to the <a href="http://mdr.netbeans.org/">Metadata Repository module</a> APIs.
Please ask on the <code>dev@mdr.netbeans.org</code> mailing list
if you have any questions about the details of a
change, or are wondering how to convert existing code to be compatible.</p>

<h2>What do the Dates Mean?</h2>

<p>The supplied dates indicate when the API change was made, on the CVS
trunk. From this you can generally tell whether the change should be
present in a given build or not.</p>

<!-- The actual lists of changes, as summaries and details: -->

      <hr/><standard-changelists module-code-name="org.netbeans.api.mdr/1"/>

<hr/>    </body>
  </htmlcontents>

</apichanges>
