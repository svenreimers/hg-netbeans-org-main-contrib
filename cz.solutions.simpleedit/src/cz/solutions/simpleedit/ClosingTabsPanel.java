/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is the Simple Edit Module.
 * The Initial Developer of the Original Software is Internet Solutions s.r.o.
 * Portions created by Internet Solutions s.r.o. are
 * Copyright (C) Internet Solutions s.r.o..
 * All Rights Reserved.
 *
 * Contributor(s): David Strupl.
 */
package cz.solutions.simpleedit;

import java.util.prefs.Preferences;

/**
 * @author David Strupl
 */
final class ClosingTabsPanel extends javax.swing.JPanel {

    private final ClosingTabsOptionsPanelController controller;

    ClosingTabsPanel(ClosingTabsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        keepClosingCheckBox.setBackground(this.getBackground());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        keepClosingCheckBox = new javax.swing.JCheckBox();

        setBackground(java.awt.Color.white);
        org.openide.awt.Mnemonics.setLocalizedText(keepClosingCheckBox, java.util.ResourceBundle.getBundle("cz/solutions/simpleedit/Bundle").getString("CTL_CloseTabs"));
        keepClosingCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        keepClosingCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        keepClosingCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keepClosingCheckBoxActionPerformed(evt);
            }
        });

        add(keepClosingCheckBox);

    }// </editor-fold>//GEN-END:initComponents

    private void keepClosingCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keepClosingCheckBoxActionPerformed
        controller.changed();
    }//GEN-LAST:event_keepClosingCheckBoxActionPerformed
    
    void load() {
        keepClosingCheckBox.setSelected(Preferences.userNodeForPackage(
                ClosingTabsPanel.class).getBoolean("keepClosing", false));
    }
    
    void store() {
        Preferences.userNodeForPackage(ClosingTabsPanel.class).
                putBoolean("keepClosing", keepClosingCheckBox.isSelected());
    }
    
    boolean valid() {
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox keepClosingCheckBox;
    // End of variables declaration//GEN-END:variables
    
}
