OpenIDE-Module-Display-Category=Editing
OpenIDE-Module-Long-Description=\
    Interactively work with Code Templates. \
    Support for Registers.\n\
    To insert a Code Template:\n\n1. \
    Invoke "Show Templates ..." action.\n2. \
    Select a template from the list.\n3. \
    Preview it.\n4. \
    Click on Insert to insert the selected Code Template. \
    If the text editor has any selection that wll be inserted at the cursor location resulting after Code Template insertion..\n4. \
    Click Modify... to modify selected template.\n5. \
    Click Delete... to delete selected template.\n\n\
    To create a Code Template:\n\n1. \
    Select text in editor.\n2. \
    Invoke "Create Template..." action.\n3. \
    Name the template and insert any parameters using the ${<parameter-name>} syntax.\n\n    \
    Additional supported parameters:\n    ${selection editable=false} - replaced by the Selection when the code template is inserted.\n    \
    ${clipboard-content editable=false} replaced by the text in clipboard when the code template is inserted.\n\n4. \
    Click on Save to save the Code Template.\n\n\
    Cut, Copy and Paste to Registers from 0-9 and A-Z.\n\n\
    Xtrl+J R X - Cut to register\nXtrl+J R C - Copy to register\nXtrl+J R V - Paste from register. \
    Paste is implemented as a template insert so that\nthe magic of parameter substitution can happen.\n\n\
    This is implemented using Code Templates named "REG_" + Register name.\n\
    The "REG_" prefix can be overridden using the System property "org.netbeans.modules.codetemplatetools.REGISTER_PREFIX". \
    It must be string with alphanumerics and _.
OpenIDE-Module-Name=Code Template Tools
OpenIDE-Module-Short-Description=Interactively work with Code Templates. Support for Registers.
