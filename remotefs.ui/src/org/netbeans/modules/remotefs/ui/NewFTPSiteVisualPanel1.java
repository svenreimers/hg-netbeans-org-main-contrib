package org.netbeans.modules.remotefs.ui;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public final class NewFTPSiteVisualPanel1 extends JPanel {

    public static final String SITE_NAME = "site_name";
    public static final String SITE_SERVER = "site_server";
    public static final String SITE_USER = "site_user";
    public static final String SITE_PWD = "site_pwd";
    public static final String SITE_INIT_FOLDER = "site_init_folder";
    private String siteName = "";
    private String siteServer = "";
    private String siteUser = "";
    private String sitePassword = "";
    private String siteInitFolder = "";

    public NewFTPSiteVisualPanel1() {
        initComponents();

    }

    public @Override
    String getName() {
        return "Connection parameters";
    }

    private void setTestResult(boolean succes, String message) {
        if (succes) {
            jLabel5.setText("Test succesfull!");
            jLabel5.setForeground(Color.GREEN);
        } else {
            jLabel5.setText("Test failed! " + message);
            jLabel5.setForeground(Color.RED);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        serverField = new javax.swing.JTextField();
        userField = new javax.swing.JTextField();
        initFolderField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(testButton, "Test");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, "Not tested yet!!");

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, "Server (IP or name):");

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, "Username:");

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, "Password:");

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, "Initial folder:");

        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFieldFocusLost(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
        });

        serverField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                serverFieldFocusLost(evt);
            }
        });
        serverField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serverFieldKeyReleased(evt);
            }
        });

        userField.setText("anonymous");
        userField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userFieldFocusLost(evt);
            }
        });
        userField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userFieldKeyReleased(evt);
            }
        });

        initFolderField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                initFolderFieldFocusLost(evt);
            }
        });
        initFolderField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                initFolderFieldKeyReleased(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, "Connection name: ");

        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFieldFocusLost(evt);
            }
        });
        nameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameFieldKeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jLabel2)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, nameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, serverField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                            .add(userField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(testButton)
                        .add(18, 18, 18)
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabel3)
                        .add(53, 53, 53)
                        .add(passwordField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabel4)
                        .add(46, 46, 46)
                        .add(initFolderField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(nameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(serverField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(userField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(13, 13, 13)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(passwordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(initFolderField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(testButton))
                .addContainerGap(81, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setValue(String param, String text) {
        if (param.equals(SITE_INIT_FOLDER)) {
            setSiteInitFolder(text);
        } else if (param.equals(SITE_NAME)) {
            setSiteName(text);
        } else if (param.equals(SITE_USER)) {
            setSiteUser(text);
        } else if (param.equals(SITE_PWD)) {
            setSitePassword(text);
        } else if (param.equals(SITE_SERVER)) {
            setSiteServer(text);
        }
    }
    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
//        FTPClient ftp = new FTPClient();
//        //We need at least a server name or IP
//        if (serverField.getText() == null || "".equals(serverField.getText().trim())) {
//            setTestResult(false, "Server field is mandatory!");
//            return;
//        }
//        if (userField.getText() == null || "".equals(userField.getText().trim())) {
//            userField.setText("anonymous");
//        }
//        try {
//            ftp.connect(serverField.getText());
//            if (FTPReply.isPositiveCompletion(ftp.getReplyCode())) {
//                ftp.login(userField.getText(), new String(passwordField.getPassword()));
//            } else {
//                setTestResult(false, "Could not connect to server!");
//                return;
//            }
//            if (!(initFolderField.getText() == null || "".equals(initFolderField.getText().trim()))) {
//                boolean changeWorkingDirectory = ftp.changeWorkingDirectory(initFolderField.getText());
//                if (!changeWorkingDirectory) {
//                    setTestResult(false, "Invalid initial directory!");
//                    return;
//                }
//            }
//            setTestResult(true, null);
//        } catch (Exception ex) {
//            setTestResult(false, ex.getMessage());
//        } finally {
//            try {
//                if (ftp.isConnected()) {
//                    ftp.disconnect();
//                }
//            } catch (Exception e) {
//                Logger.getLogger(NewFTPSiteWizardAction.class.getName()).log(Level.SEVERE, null, e);
//            }
//        }
        

}//GEN-LAST:event_testButtonActionPerformed

    private void nameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost
        setValue(SITE_NAME, nameField.getText());
    }//GEN-LAST:event_nameFieldFocusLost

    private void serverFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serverFieldFocusLost
        setValue(SITE_SERVER, serverField.getText());
    }//GEN-LAST:event_serverFieldFocusLost

    private void userFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFieldFocusLost
        setValue(SITE_USER, userField.getText());
    }//GEN-LAST:event_userFieldFocusLost

    private void passwordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusLost
        setValue(SITE_PWD, new String(passwordField.getPassword()));
    }//GEN-LAST:event_passwordFieldFocusLost

    private void initFolderFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_initFolderFieldFocusLost
        setValue(SITE_INIT_FOLDER, initFolderField.getText());
    }//GEN-LAST:event_initFolderFieldFocusLost

    private void initFolderFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_initFolderFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_INIT_FOLDER, initFolderField.getText());
        }
    }//GEN-LAST:event_initFolderFieldKeyReleased

    private void passwordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_PWD, new String(passwordField.getPassword()));
        }
       
    }//GEN-LAST:event_passwordFieldKeyReleased

    private void userFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_USER, userField.getText());
        }

    }//GEN-LAST:event_userFieldKeyReleased

    private void serverFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serverFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_SERVER, serverField.getText());
        }

    }//GEN-LAST:event_serverFieldKeyReleased

    private void nameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_NAME, nameField.getText());
        }

    }//GEN-LAST:event_nameFieldKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField initFolderField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nameField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField serverField;
    private javax.swing.JButton testButton;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables

    public String getSiteName() {
        if (siteName == null || "".equals(siteName)) {
            return "New FTP Site";
        }
        return siteName;
    }

    public void setSiteName(String siteName) {
        if (siteName != null) {
            this.siteName = siteName;
        }
    }

    public String getSiteServer() {
        return siteServer;
    }

    public void setSiteServer(String siteServer) {
        if (siteServer != null) {
            this.siteServer = siteServer;
        }
    }

    public String getSiteUser() {
        return siteUser;
    }

    public void setSiteUser(String siteUser) {
        if (siteUser != null) {
            this.siteUser = siteUser;
        }
    }

    public String getSitePassword() {
        return sitePassword;
    }

    public void setSitePassword(String sitePassword) {
        if (sitePassword != null) {
            this.sitePassword = sitePassword;
        }
    }

    public String getSiteInitFolder() {
        return siteInitFolder;
    }

    public void setSiteInitFolder(String siteInitFolder) {
        if (siteInitFolder != null) {
            this.siteInitFolder = siteInitFolder;
        }
    }
}

