/*
 *                 Sun Public License Notice
 *
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 *
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2003 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.jemmysupport.namelookup;

import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import org.openide.ErrorManager;
import org.openide.util.HelpCtx;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;

/** Panel for Component name lookup.
 * @author Jiri.Skrivanek@sun.com 
 */
public class NameLookupPanel extends TopComponent implements PropertyChangeListener {
    
    static NameLookupPanel panel=null;
    private NameLookup nameLookup;
    
    /** Creates new NameLookupPanel. */
    public NameLookupPanel() {
        super();
        setName(NbBundle.getMessage(NameLookupPanel.class, "Title")); // NOI18N
        try {
            setIcon(Toolkit.getDefaultToolkit().getImage(
            getClass().getResource("/org/netbeans/modules/jemmysupport/namelookup/NameLookupAction.gif"))); // NOI18N
        } catch (Exception e){
            ErrorManager.getDefault().notify(e);
        }
        initComponents();
        nameLookup = new NameLookup();
        nameLookup.setShowFullName(cbFullName.isSelected());
    }
    
    /** Starts name lookup and register itself to listen component changes.
     * @see NameLookup
     */
    public void addNotify() {
        super.addNotify();
        nameLookup.start();
        nameLookup.addPropertyChangeListener(this);
    }
    
    /** Stops name lookup and un register itself from listening of 
     * component changes.
     */
    public void removeNotify() {
        super.removeNotify();
        nameLookup.stop();
        nameLookup.removePropertyChangeListener(this);
    }
    
    /** Returns HelpCtx object for this panel.
     * @return HelpCtx object for this panel
     */
    public HelpCtx getHelpCtx() {
        return new HelpCtx(NameLookupPanel.class);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        lblName = new javax.swing.JLabel();
        lblNameLabel = new javax.swing.JLabel();
        classPanel = new javax.swing.JPanel();
        lblClass = new javax.swing.JLabel();
        cbFullName = new javax.swing.JCheckBox();
        lblClassLabel = new javax.swing.JLabel();
        lblOperator = new javax.swing.JLabel();
        txtOperator = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(600, 220));
        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "Title"));
        getAccessibleContext().setAccessibleDescription("N/A");
        lblName.setText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "LBL_MoveMouse"));
        lblName.setToolTipText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "TTT_ComponentName"));
        lblName.setName("lblName");
        lblName.setPreferredSize(new java.awt.Dimension(200, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 11);
        add(lblName, gridBagConstraints);

        lblNameLabel.setLabelFor(lblName);
        lblNameLabel.setText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "LBL_ComponentName"));
        lblNameLabel.setToolTipText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "TTT_ComponentName"));
        lblNameLabel.setName("lblNameLabel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        add(lblNameLabel, gridBagConstraints);

        classPanel.setLayout(new java.awt.GridBagLayout());

        classPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102)));
        classPanel.setPreferredSize(new java.awt.Dimension(600, 76));
        lblClass.setBackground((java.awt.Color) javax.swing.UIManager.getDefaults().get("Button.highlight"));
        lblClass.setToolTipText(NbBundle.getMessage(NameLookupPanel.class, "TTT_ClassName"));
        lblClass.setMinimumSize(new java.awt.Dimension(200, 16));
        lblClass.setName("lblClass");
        lblClass.setPreferredSize(new java.awt.Dimension(200, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 11);
        classPanel.add(lblClass, gridBagConstraints);

        cbFullName.setMnemonic(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "MNM_FullName").charAt(0));
        cbFullName.setSelected(true);
        cbFullName.setText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "LBL_FullName"));
        cbFullName.setToolTipText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "TTT_FullName"));
        cbFullName.setName("cbFullName");
        cbFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFullNameActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 12, 11, 0);
        classPanel.add(cbFullName, gridBagConstraints);

        lblClassLabel.setLabelFor(lblClass);
        lblClassLabel.setText(NbBundle.getMessage(NameLookupPanel.class, "LBL_ClassName"));
        lblClassLabel.setToolTipText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "TTT_ClassName"));
        lblClassLabel.setName("lblClassLabel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        classPanel.add(lblClassLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 11);
        add(classPanel, gridBagConstraints);

        lblOperator.setLabelFor(txtOperator);
        lblOperator.setText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "LBL_Operator"));
        lblOperator.setToolTipText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "TTT_Operator"));
        lblOperator.setName("lblOperator");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 11, 0);
        add(lblOperator, gridBagConstraints);

        txtOperator.setEditable(false);
        txtOperator.setToolTipText(org.openide.util.NbBundle.getMessage(NameLookupPanel.class, "TTT_Operator"));
        txtOperator.setName("txtOperator");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 11, 11);
        add(txtOperator, gridBagConstraints);

    }//GEN-END:initComponents
    
    
    private void cbFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFullNameActionPerformed
        nameLookup.setShowFullName(cbFullName.isSelected());
        lblClass.setText(nameLookup.getClassName());
    }//GEN-LAST:event_cbFullNameActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbFullName;
    private javax.swing.JPanel classPanel;
    private javax.swing.JLabel lblClass;
    private javax.swing.JLabel lblClassLabel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameLabel;
    private javax.swing.JLabel lblOperator;
    private javax.swing.JTextField txtOperator;
    // End of variables declaration//GEN-END:variables
    
    /** opens panel */
    public static void openPanel() {
        if (panel == null) {
            panel = new NameLookupPanel();
        }
        panel.open();
    }
    
    /** If component has changed in name lookup, change values of labels
     * and text fields in the panel.
     * @param evt event
     */
    public void propertyChange(PropertyChangeEvent evt) {
        if(evt.getPropertyName().equals(NameLookup.PROP_COMPONENT)) {
            lblClass.setText(nameLookup.getClassName());
            lblName.setText(nameLookup.getName());
            String constructor = nameLookup.getOperatorConstructor();
            txtOperator.setText(constructor);
            if(constructor != null) {
                txtOperator.requestFocus();
                txtOperator.selectAll();
            }
        }
    }

    /** opens panel for debugging purposes
     * @param args command line argument
     */
    public static void main(String args[]) {
        NameLookupPanel.openPanel();
    }
    
}
