/*
 *                 Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 * 
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2003 Sun
 * Microsystems, Inc. All Rights Reserved.
 */


package org.netbeans.modules.helpbuilder.ui;

import org.netbeans.modules.helpbuilder.*;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.net.URL;
import java.net.MalformedURLException;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.swing.JFileChooser;
import javax.swing.KeyStroke;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentListener;
import javax.swing.tree.TreePath;

import org.openide.WizardDescriptor;
import org.openide.loaders.DataFilter;
import org.openide.loaders.DataFolder;
import org.openide.loaders.RepositoryNodeFactory;
import org.openide.nodes.Node;
import org.openide.util.HelpCtx;
import org.openide.util.NbBundle;

/** 
 *
 * @author  Richard Gregor
 */
public class ProjectSetupPanel extends javax.swing.JPanel implements DocumentListener, DataFilter, PropertyChangeListener{
    private final ProjectSetup descriptor;   
    private Node rootNode;
    
    /** Create the wizard panel and set up some basic properties. */
    public ProjectSetupPanel(final ProjectSetup descriptor) {
        this.descriptor = descriptor;
        initComponents ();                        
        setName(NbBundle.getMessage(ProjectSetupPanel.class, "TITLE_ProjectSetupPanel")); 
        
        rootNode = createPackagesNode ();
        packagesPanel.getExplorerManager ().setRootContext (rootNode);
        packagesPanel.getExplorerManager ().addPropertyChangeListener (this);
        //packagesPanel.getExplorerManager ().addVetoableChangeListener (this);

        // registers itself to listen to changes in the content of document
        txtFolder.getDocument().addDocumentListener(this);
        txtFolder.unregisterKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0));
        
    }
      
    /** Creates node that displays all packages.
    */
    private Node createPackagesNode () {
        return RepositoryNodeFactory.getDefault().repository(this);
    }
    
    // --- VISUAL DESIGN OF PANEL ---

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        packagesPanel = new org.openide.explorer.ExplorerPanel();
        txtDesc = new javax.swing.JTextArea();
        beanTreeView1 = new org.openide.explorer.view.BeanTreeView();
        lblFolder = new javax.swing.JLabel();
        txtFolder = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        lblDirectory = new javax.swing.JLabel();
        txtDircetory = new javax.swing.JTextField();
        lblLocation = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        setMinimumSize(new java.awt.Dimension(700, 417));
        setPreferredSize(new java.awt.Dimension(700, 417));
        packagesPanel.setLayout(new java.awt.GridBagLayout());

        txtDesc.setBackground((java.awt.Color) javax.swing.UIManager.getDefaults().get("Button.background"));
        txtDesc.setColumns(60);
        txtDesc.setEditable(false);
        txtDesc.setForeground((java.awt.Color) javax.swing.UIManager.getDefaults().get("RadioButtonMenuItem.acceleratorForeground"));
        txtDesc.setLineWrap(true);
        txtDesc.setRows(2);
        txtDesc.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("txtSetupPanel"));
        txtDesc.setWrapStyleWord(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 11);
        packagesPanel.add(txtDesc, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 11, 6, 11);
        packagesPanel.add(beanTreeView1, gridBagConstraints);

        lblFolder.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("ACS_lblFolder_mnc").charAt(0));
        lblFolder.setLabelFor(txtFolder);
        lblFolder.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("LBL_PRojectSetupPanel.folderLabel"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        packagesPanel.add(lblFolder, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        packagesPanel.add(txtFolder, gridBagConstraints);

        btnCreate.setMnemonic(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("ACS_btnCreate_mnc").charAt(0));
        btnCreate.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("LBL_ProjectSetupPanel.btnCreate"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 11);
        packagesPanel.add(btnCreate, gridBagConstraints);

        lblDirectory.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("ACS_lblDirectory_mnc").charAt(0));
        lblDirectory.setLabelFor(txtDircetory);
        lblDirectory.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("LBL_ProjectSetupPanel.lblDirectory"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 11, 0);
        packagesPanel.add(lblDirectory, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 11, 11);
        packagesPanel.add(txtDircetory, gridBagConstraints);

        lblLocation.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("ACS_lblLocation_mnc").charAt(0));
        lblLocation.setLabelFor(beanTreeView1);
        lblLocation.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/helpbuilder/ui/Bundle").getString("LBL_ProjectSetupPanel.lblLocation"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 0);
        packagesPanel.add(lblLocation, gridBagConstraints);

        add(packagesPanel, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

    public boolean isValid(){        
     /*   String txtHome = txtHomeID.getText();
        if((txtHome == null) || (txtHome.trim().length() < 1))
            return false;
        else*/
            return true;    
    }
        
    public boolean acceptDataObject(org.openide.loaders.DataObject obj) {
        return obj instanceof DataFolder;
    }    
        
    public void changedUpdate(javax.swing.event.DocumentEvent e) {
    }    
        
    public void insertUpdate(javax.swing.event.DocumentEvent e) {
    }
    
    public void propertyChange(java.beans.PropertyChangeEvent evt) {
    }
    
    public void removeUpdate(javax.swing.event.DocumentEvent e) {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField txtFolder;
    private javax.swing.JLabel lblFolder;
    private javax.swing.JButton btnCreate;
    private javax.swing.JTextField txtDircetory;
    private org.openide.explorer.ExplorerPanel packagesPanel;
    private javax.swing.JLabel lblDirectory;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JLabel lblLocation;
    private org.openide.explorer.view.BeanTreeView beanTreeView1;
    // End of variables declaration//GEN-END:variables



}
