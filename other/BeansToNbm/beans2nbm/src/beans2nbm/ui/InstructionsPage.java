/*
 *                 Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 * 
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */
package beans2nbm.ui;

import java.awt.Dimension;
import java.awt.Font;
import java.util.prefs.Preferences;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;
import org.netbeans.spi.wizard.WizardPage;

/**
 *
 * @author  Tim Boudreau
 */
public class InstructionsPage extends WizardPage {
    
    /** Creates new form InstructionsPage */
    public InstructionsPage() {
        super (false);
        try {
        initComponents();
        Font f = jLabel1.getFont();
        instructionsField.setFont (f);
        //Bug in form editor - it has an unused field (tipsField) stuck in its craw
        if (instructionsField1 != null) {
            instructionsField1.setFont (f);
        }
        f = f.deriveFont(Font.BOLD);
        jLabel1.setFont(f);
        setPreferredSize (new Dimension (700, 400));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void addNotify() {
        super.addNotify();
        jCheckBox1.setSelected(!shouldShowInstructions());
        //A hack - need to add support for this in Wizard
        JDialog dlg = (JDialog) SwingUtilities.getAncestorOfClass(JDialog.class, this);
        if (dlg != null) {
            dlg.setTitle ("BeanNetter - the NetBeans Module Generator");
        }
    }
    
    public static boolean shouldShowInstructions() {
        boolean b = Preferences.userNodeForPackage(
                InstructionsPage.class).getBoolean(KEY_SHOW_INSTRUCTIONS, true);
        return b;
    }
    
    public static String getStep() {
        return "Instructions";
    }
    
    public static String getDescription() {
        return "Instructions";
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        instructionsField = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        instructionsField1 = new javax.swing.JTextArea();
        jCheckBox1 = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 6, 12, 12));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        instructionsField.setBackground(javax.swing.UIManager.getDefaults().getColor("control"));
        instructionsField.setColumns(20);
        instructionsField.setEditable(false);
        instructionsField.setLineWrap(true);
        instructionsField.setRows(5);
        instructionsField.setText("This tool allows you to deliver Swing components (Java Beans) directly into the NetBeans component palette, by embedding them in a NetBeans plug-in.  It will generate an NBM (NetBeans Module) file   \n\nOn the next page, choose a JAR file that contains some components.  It will find any JavaBeans listed in the manifest, and also let you add classes from the JAR file.  When the resulting NetBeans plug-in is installed in NetBeans, the components you selected will be on the Component Palette, and can be dragged and dropped onto Swing forms.  The library display name you enter is also the name that will be used for the category in the component palette where your components will appear.");
        instructionsField.setWrapStyleWord(true);
        jScrollPane1.setViewportView(instructionsField);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);

        jLabel1.setText("Tips, Tricks and Support");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 12, 0);
        add(jLabel1, gridBagConstraints);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        instructionsField1.setBackground(javax.swing.UIManager.getDefaults().getColor("control"));
        instructionsField1.setColumns(20);
        instructionsField1.setLineWrap(true);
        instructionsField1.setRows(5);
        instructionsField1.setText("This is an experimental tool - test the results.  It also is important to compile your Swing classes on JDK 1.4 if possible, JDK 1.5 if not (JDK 6 class file format is different and many people do not yet use it, so avoid that unless you are really using JDK 6 features in your classes).\n\nThere are surely some bugs - avoid unusual characters in file names and display names.  If you encounter a problem, send email to Tim Boudreau <tboudreau@sun.com>.");
        instructionsField1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(instructionsField1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane2, gridBagConstraints);

        jCheckBox1.setText("Don't show this page next time");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jCheckBox1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        Preferences.userNodeForPackage(getClass()).putBoolean(KEY_SHOW_INSTRUCTIONS, !jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    public static final String KEY_SHOW_INSTRUCTIONS = "DontShowInstructions";
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea instructionsField;
    private javax.swing.JTextArea instructionsField1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
    
}
