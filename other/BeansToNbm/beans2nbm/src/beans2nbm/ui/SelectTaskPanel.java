/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */


package beans2nbm.ui;

import java.awt.Component;
import javax.swing.JDialog;
import javax.swing.JRadioButton;
import javax.swing.SwingUtilities;
import org.netbeans.spi.wizard.WizardPage;

/**
 *
 * @author  Tim Boudreau
 */
public class SelectTaskPanel extends WizardPage {

    /** Creates new form SelectTaskPanel */
    public SelectTaskPanel() {
        initComponents();
    }

    public static String getStep() {
        return "taskChoice";
    }

    public static String getDescription() {
        return "Pick Module Type";
    }

public String getID() {
        return getStep();
    }

    protected String validateContents(Component component, Object event) {
        String selName = null;
        Component[] c = getComponents();
        for (int i=0; i < c.length; i++) {
            if (c[i] instanceof JRadioButton) {
                JRadioButton jb = (JRadioButton) c[i];
                if (jb.isSelected()) {
                    selName = jb.getName();
                    assert selName != null : "Unnamed radio button present:" + jb;
                }
            }
        }
        if (selName == null) {
            return "Select a task";
        } else {
            if (selName == beanModule.getName()) {
                putWizardData("title", "BeanNetter - Create a plugin for Swing/AWT components");
            } else if (selName == libModule.getName()) {
                putWizardData("title", "BeanNetter - Create a plugin to provide a library");
            } else if (selName == lafModule.getName()) {
                putWizardData("title", "BeanNetter - Create a plugin to provide a look and feel");
            } else {
                putWizardData("title", null);
            }
            updateDlgTitle();
        }
        return null;
    }

    public void addNotify() {
        super.addNotify();
        updateDlgTitle();
    }

    private void updateDlgTitle() {
        JDialog dlg = (JDialog) SwingUtilities.getAncestorOfClass(JDialog.class, this);
        if (dlg != null) {
            String ttl = (String) getWizardData ("title");
            if (ttl == null) {
                dlg.setTitle ("BeanNetter - the NetBeans Module Generator");
            } else {
                dlg.setTitle (ttl);
            }
        }
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        beanModule = new javax.swing.JRadioButton();
        libModule = new javax.swing.JRadioButton();
        lafModule = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        buttonGroup1.add(beanModule);
        beanModule.setText("Create a Module that adds some Swing/AWT components to the palette");
        beanModule.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        beanModule.setMargin(new java.awt.Insets(0, 0, 0, 0));
        beanModule.setName("beansModule");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(beanModule, gridBagConstraints);

        buttonGroup1.add(libModule);
        libModule.setText("Create a Module that provides a library");
        libModule.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        libModule.setMargin(new java.awt.Insets(0, 0, 0, 0));
        libModule.setName("libsModule");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
        add(libModule, gridBagConstraints);

        buttonGroup1.add(lafModule);
        lafModule.setText("Create a module that installs a Look and Feel");
        lafModule.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        lafModule.setEnabled(false);
        lafModule.setMargin(new java.awt.Insets(0, 0, 0, 0));
        lafModule.setName("lafModule");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
        add(lafModule, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton beanModule;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton lafModule;
    private javax.swing.JRadioButton libModule;
    // End of variables declaration//GEN-END:variables
    
}
