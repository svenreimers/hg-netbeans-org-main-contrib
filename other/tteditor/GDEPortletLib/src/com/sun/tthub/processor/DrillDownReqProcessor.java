
/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * Copyright 2007 Sun Microsystems, Inc. All Rights Reserved
 *
 */


package com.sun.tthub.processor;

import com.sun.tthub.util.DataConstants;
import javax.portlet.ActionRequest;
import javax.portlet.PortletSession;
import java.util.ArrayList;

import com.sun.tthub.data.*;
/**
 *
 * @author choonyin
 */

/*
All 'Drill Down' requests are processed by the 'DrillDownRequestProcessor'. This
class takes the following 2 steps for processing the 'Drill Down' request.
 
a. Persist the state of the current page in a 'TemporaryPageState' object so
   that the page can be generated using this state whenever it is required. The
   state of the page stored is non-validated and it is required that the user be
   presented with exactly the same page when he returns from a drill down
   request. The StandardTempPageState of a page is generated by the
   StandardPageStateHandler object associated with a page. For the standard
   pages generated by the wizard, the StandardPageStateHandler and the
   StandardTempPageState objects are defined.
   <---------------------------To be implemented----------------------------->
   But, for a custom page that the user
   provides, the TemporaryPageStateHandler and the TemporaryPageState objects
   should be defined by the user.
   </---------------------------To be implemented----------------------------->
 
b. Identify the detailed data entry page to be presented to the user for
   capturing the value of the 'complex object'. Use the PageFormatter to
   generate the return page identified. (Generating the page means routing the
   request to the jsp corresponding to the return page. The remaining formatting
   activities happen inside the jsp)
 
 */

public class DrillDownReqProcessor {
    
    /** Creates a new instance of DrillDownReqProcessor */
    public DrillDownReqProcessor() {
    }
    
    /**
     * This function will perform the DrillDownRequest and fill the UseCaseState Objects with
     * the required values
     *
     * @return the page- return edithpathrepresentation string to the portlet for displaying the complex entry page
     **/
    public String processRequest(AppRequest appRequest,ActionRequest request){
        System.out.println("[DrillDownReqProcessor.processRequest Entry]");
        //// Persist the state of the current page in a 'StandardTempPageState' object and store in session
        ArrayList <GlobalError>globalErrors = new ArrayList<GlobalError>();
        String curEditPath=appRequest.getCurEditPath();
        String fieldName=request.getParameter("fieldName");
        try{
            
            StandardPageStateHandler pageHandler=new StandardPageStateHandler(request);
            pageHandler.extractTempPageState(curEditPath);
            
        }catch(Exception e){
            e.printStackTrace();
            GlobalError globalError=new GlobalError(e.getMessage());
            globalErrors.add(globalError);
        }
        
        String returnEditPath="";
        String statusMessage="";
        if( globalErrors.size()!=0){
            returnEditPath=curEditPath;
            statusMessage=DataConstants.FAILED_MESSAGE+": Unable to access " +fieldName;
        }else{
            if (curEditPath!=null && curEditPath.length() !=1)
                returnEditPath=new String(curEditPath+"/"+fieldName);
            else
                returnEditPath= new String (curEditPath+fieldName);
            statusMessage=DataConstants.SUCCESS_MESSAGE+": Please enter information for "+fieldName;
        }
        //Set Processing Result
        ReqProcessingResult result=new ReqProcessingResult();
        result.setGlobalErrors(globalErrors);
        result.setStatusMessage(statusMessage);
        PortletSession session= request.getPortletSession();
        session.setAttribute(DataConstants.REQPROCESSINGRESULT,result);
        
        return returnEditPath;
    }
}
