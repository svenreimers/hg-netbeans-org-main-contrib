/*
 * ConfigFrame.java
 *
 * Created on 25. øíjen 2007, 11:55
 */

package org.openoffice.config;

import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author  sa
 */
public class ConfigFrame extends javax.swing.JFrame {
    
    private ConfigManager manager;
    /** Creates new form ConfigFrame */
    public ConfigFrame( ConfigManager manager ) {
        this.manager = manager;
        initComponents();
        
        try {
            UIManager.setLookAndFeel( UIManager.getSystemLookAndFeelClassName() );
        } catch (Exception ex) {
            //ignore
            ex.printStackTrace();
        }

        comboRoots.setModel( new DefaultComboBoxModel( manager.getRoots().toArray(new String[0])) );
        comboRoots.setSelectedIndex( 0 );
        comboRoots.addItemListener( new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                switchTableModel( false );
            }
        });
        switchTableModel( false );
        setPreferredSize( new Dimension( 650, 400 ) );
    }
    
    private void switchTableModel( boolean forceRefresh ) {
        String configRoot = (String)comboRoots.getSelectedItem();
        
        //TODO check for null
        tblContents.setModel( manager.getTableModel( configRoot, forceRefresh ) );
//        jTable1.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
//        jTable1.getColumnModel().getColumn( 0 ).sizeWidthToFit();
        tblContents.getTableHeader().setReorderingAllowed( false );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        comboLabel = new javax.swing.JLabel();
        comboRoots = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblContents = new javax.swing.JTable();
        btnRefreshTable = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OpenOffice Configuration");
        comboLabel.setText("Module:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(comboLabel, gridBagConstraints);

        comboRoots.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(comboRoots, gridBagConstraints);

        tblContents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblContents);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        btnRefreshTable.setText("Refresh");
        btnRefreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTable(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(btnRefreshTable, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTable(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTable
        switchTableModel( true );
    }//GEN-LAST:event_refreshTable
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefreshTable;
    private javax.swing.JLabel comboLabel;
    private javax.swing.JComboBox comboRoots;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblContents;
    // End of variables declaration//GEN-END:variables
    

    private static class TableModelComparator implements Comparator<TableModel> {
        public int compare(TableModel o1, TableModel o2) {
            return o1.toString().compareTo( o2.toString() );
        }
    }
}
