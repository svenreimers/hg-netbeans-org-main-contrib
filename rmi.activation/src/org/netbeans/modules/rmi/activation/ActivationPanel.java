/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

package org.netbeans.modules.rmi.activation;

/**
 * Panel to find out the activation system identification.
 * @author Jan Pokorsky
 */
public class ActivationPanel extends javax.swing.JPanel {

  /** Initializes the Form */
  public ActivationPanel() {
    initComponents ();
    this.getAccessibleContext().setAccessibleDescription(getString("AD_ActivationPanel"));
    jTextField1.setText("localhost");
    jTextField1.selectAll();
    jTextField2.setText(String.valueOf(java.rmi.activation.ActivationSystem.SYSTEM_PORT));
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
      jLabel1 = new javax.swing.JLabel();
      jTextField1 = new javax.swing.JTextField();
      jLabel2 = new javax.swing.JLabel();
      jTextField2 = new javax.swing.JTextField();
      
      setLayout(new java.awt.GridBagLayout());
      java.awt.GridBagConstraints gridBagConstraints1;
      
      jLabel1.setText(getString("LBL_ActivationPanel.Host"));
      jLabel1.setDisplayedMnemonic(getMnemonic("LBL_ActivationPanel.Host"));
      jLabel1.setLabelFor(jTextField1);
      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 0;
      gridBagConstraints1.gridy = 0;
      gridBagConstraints1.insets = new java.awt.Insets(12, 12, 0, 0);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.EAST;
      add(jLabel1, gridBagConstraints1);
      
      jTextField1.setColumns(20);
      jTextField1.getAccessibleContext().setAccessibleDescription(getString("AD_ActivationPanel.Host"));
      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 1;
      gridBagConstraints1.gridy = 0;
      gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints1.insets = new java.awt.Insets(12, 12, 0, 11);
      gridBagConstraints1.weightx = 1.0;
      add(jTextField1, gridBagConstraints1);
      
      jLabel2.setText(getString("LBL_ActivationPanel.Port"));
      jLabel2.setDisplayedMnemonic(getMnemonic("LBL_ActivationPanel.Port"));
      jLabel2.setLabelFor(jTextField2);
      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 0;
      gridBagConstraints1.gridy = 1;
      gridBagConstraints1.insets = new java.awt.Insets(11, 12, 0, 0);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.EAST;
      add(jLabel2, gridBagConstraints1);
      
      jTextField2.setColumns(5);
      jTextField2.getAccessibleContext().setAccessibleDescription(getString("AD_ActivationPanel.Port"));
      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 1;
      gridBagConstraints1.gridy = 1;
      gridBagConstraints1.insets = new java.awt.Insets(11, 12, 0, 11);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      add(jTextField2, gridBagConstraints1);
      
  }//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
  
  /** Get port number of activation system.
   * @throws NumberFormatException if port is not 1-65535
   */
  public int getPort() throws NumberFormatException {
    String portStr = jTextField2.getText();
    int port = java.rmi.activation.ActivationSystem.SYSTEM_PORT;
    if (portStr != null && portStr.length() > 0) port = Integer.parseInt(portStr);
    if (port < 1 || port > 65535) throw new NumberFormatException();

    return port;
  }

  public String getHost() {
    return jTextField1.getText();
  } 
  
  /** Localization. */
  private String getString(java.lang.String key) {
     return org.openide.util.NbBundle.getBundle (ActivationPanel.class).getString(key);
  }    
  
  private static final String mnemonic_suffix = ".mnemonic"; // NOI18N
  
  private char getMnemonic(java.lang.String key) {
     return org.openide.util.NbBundle.getBundle (ActivationPanel.class).getString(key + mnemonic_suffix).charAt(0);
  }
  
}
