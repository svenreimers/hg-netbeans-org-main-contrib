<?xml version="1.0"?>
<!DOCTYPE configuration PUBLIC '-//NetBeans//DTD VCS Configuration 1.1//EN' 'http://www.netbeans.org/dtds/vcs-configuration-1_1.dtd'>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
Microsystems, Inc. All Rights Reserved.
-->


<configuration>
  <resourceBundle>org/netbeans/modules/vcs/profiles/cvsprofiles/config/BundleGlobal</resourceBundle>
  <resourceBundle>org/netbeans/modules/vcs/profiles/cvsprofiles/config/Bundle</resourceBundle>
  <label>ResourceMsg(CVS_Label)</label>
  <!-- <label>getBundle(org/netbeans/modules/vcs/profiles/cvsprofiles/config/BundleGlobal).getString(CVS_Label)</label> -->
  
  <os>
    <compatible>"Unix", "Windows", "OpenVMS", "OS/2"</compatible>
  </os>
  
  <condition var="IS_WINDOWS">
    <var name="os.name" valueContainsIgnoreCase="WINDOWS"/>
  </condition>
  
  <condition var="IS_WIN9X">
    <or>
      <var name="os.name" value="Windows 95"/>
      <var name="os.name" value="Windows 98"/>
      <var name="os.name" value="Windows Me"/>
    </or>
  </condition>
  
  <condition var="IS_WINNT">
    <var name="IS_WINDOWS" value="true"/>
    <not>
      <var name="IS_WIN9X" value="true"/>
    </not>
  </condition>
  
  <condition var="IS_OS2">
    <var name="os.name" value="OS/2"/>
  </condition>
  
  <condition var="IS_VMS">
    <var name="os.name" valueContainsIgnoreCase="OpenVMS"/>
  </condition>

  
  <condition var="IS_BUILT-IN_AND_WIN9X">
    <var name="IS_WIN9X" value="true"/>
    <var name="BUILT-IN" value="true"/>
  </condition>
  
  <variables>
    <variable name="FS_DISPLAY_NAME" basic="false">
      <value>ResourceMsg(CVS_FS_DISPLAY_NAME)</value>
    </variable>
    <variable name="MODULE_INFORMATION_CODE_NAME_BASE" basic="false">
      <value>org.netbeans.modules.vcs.profiles.cvsprofiles</value>
    </variable>
    <variable name="SHOWLOCALFILES" basic="false">
      <value>true</value>
    </variable>
    <variable name="MODPATH" basic="false">
      <value if="IS_WINDOWS">$[? FILE] [$[? DIR_\/] [$[? MODULE_\/] [${MODULE_\/}/${DIR_\/}/${FILE}] [${DIR_\/}/${FILE}]] [$[? MODULE_\/] [${MODULE_\/}/${FILE}] [${FILE}]]] [$[? DIR_\/] [$[? MODULE_\/] [${MODULE_\/}/${DIR_\/}] [${DIR_\/}]] [$[? MODULE_\/] [${MODULE_\/}] [.]]]</value>
      <value>$[? FILE] [$[? DIR] [$[? MODULE] [${MODULE}${PS}${DIR}${PS}${FILE}] [${DIR}${PS}${FILE}]] [$[? MODULE] [${MODULE}${PS}${FILE}] [${FILE}]]] [$[? DIR] [$[? MODULE] [${MODULE}${PS}${DIR}] [${DIR}]] [$[? MODULE] [${MODULE}] [.]]]</value>
    </variable>
    <variable name="WRAPPER" basic="false">
      <value>vcs.list.CvsListCommand.class</value>
    </variable>
    <!-- BUILT-IN is true by default -->
    <variable name="BUILT-IN" basic="true">
      <value>true</value>
    </variable>
    <variable name="SERVERTYPE_LOCAL" basic="false">
      <value>local</value>
    </variable>
    <variable name="ENVIRONMENT_VAR_CVS_CLIENT_PORT" basic="true">
      <value>2401</value>
    </variable>
    <variable name="CVSROOT" basic="false">
      <value>$[? SERVERTYPE] [:${SERVERTYPE}:$[? SERVERTYPE - SERVERTYPE_LOCAL] [$[? CVS_USERNAME] [${CVS_USERNAME}@] []$[? CVS_SERVER] [${CVS_SERVER}:] []] []][]${CVS_REPOSITORY}</value>
    </variable>
    <variable name="CD" basic="false">
      <value if="IS_WINDOWS" unless="IS_WIN9X">cd /D</value>
      <value>cd</value>
    </variable>
    <variable name="DOCUMENT_CLEANUP_REMOVE1" basic="false">
      <value>COMMIT, 1, "CVS:"</value>
    </variable>
    <variable name="ARGUMENT_FILES_TO_CLONE" basic="false">
      <value>TEMPLATE_FILE</value>
    </variable>
    <variable name="POSSIBLE_FILE_STATUSES" basic="false">
      <value>"Up-to-date", "Locally Modified", "Locally Added", "Locally Removed", "Needs Checkout", "Needs Patch", "Needs Merge", "File had conflicts on merge", "Unknown"</value>
    </variable>
    <variable name="GENERIC_STATUS_UP_TO_DATE" basic="false">
      <value>"Up-to-date"</value>
    </variable>
    <variable name="GENERIC_STATUS_OUT_OF_DATE" basic="false">
      <value>"Needs Patch", "Needs Merge"</value>
    </variable>
    <variable name="GENERIC_STATUS_MODIFIED" basic="false">
      <value>"Locally Modified", "Locally Added", "Locally Removed", "File had conflicts on merge"</value>
    </variable>
    <variable name="GENERIC_STATUS_MISSING" basic="false">
      <value>"Needs Checkout"</value>
    </variable>
    <variable name="ICONS_FOR_FILE_STATUSES" basic="false">
      <value>"vcs/resources/badgeUpToDate.gif", "vcs/resources/badgeLocModified.gif", "vcs/resources/badgeLocModified.gif", "vcs/resources/badgeLocRemoved.gif", "vcs/resources/badgeNeedsCheckout.gif", "vcs/resources/badgeNeedsCheckout.gif", "vcs/resources/badgeNeedsCheckout.gif", "vcs/resources/badgeMergeConflict.gif", ""</value>
    </variable>
    <variable name="NOT_MODIFIABLE_FILE_STATUSES" basic="false">
      <value>"Locally Added", "Needs Merge", "Local"</value>
    </variable>
    <variable name="VCS_FILE_STATUS_MISSING" basic="false">
      <value>Needs Checkout</value>
    </variable>
    <variable name="NOT_MISSINGABLE_FILE_STATUSES" basic="false">
      <value>Locally Removed, Needs Checkout, Dead</value>
    </variable>
    <variable name="RUNCDW" basic="false">
      <value if="IS_WINDOWS" unless="IS_WIN9X">cmd /X /C "${CD} ${QUOTE}${WORKDIR}${QUOTE}&amp;&amp;  </value>
      <value if="IS_WIN9X">${SHELL} -c "${CD} ${QUOTE}${WORKDIR}${QUOTE}&amp;&amp;  </value>
      <value if="IS_OS2">cmd /C "${CD} ${QUOTE}${WORKDIR}${QUOTE}&amp;&amp;  </value>
      <value>/bin/sh -c "${CD} ${QUOTE}${WORKDIR}${QUOTE};</value>
    </variable>
    <variable name="RUNCDM" basic="false">
      <value if="IS_WINDOWS" unless="IS_WIN9X">cmd /X /C "${CD} ${QUOTE}${ROOTDIR}${PS}${MODULE}${PS}.${QUOTE}&amp;&amp;  </value>
      <value if="IS_WIN9X">${SHELL} -c "${CD} ${QUOTE}${ROOTDIR}${PS}${MODULE}${PS}.${QUOTE}&amp;&amp;  </value>
      <value if="IS_OS2">cmd /C "${CD} ${QUOTE}${ROOTDIR}${PS}${MODULE}${PS}.${QUOTE}&amp;&amp;  </value>
      <value>/bin/sh -c "${CD} ${QUOTE}${ROOTDIR}${PS}${MODULE}${QUOTE};</value>
    </variable>
    <variable name="PS" basic="false">
      <value>${path.separator}</value>
      <value if="IS_WIN9X">/</value>
    </variable>
    <variable name="LOCAL_FILES_FILTERED_OUT_CASE_SENSITIVE" basic="false">
      <value unless="IS_WINDOWS">true</value>
      <value if="IS_WINDOWS">false</value>
    </variable>
    <variable name="POSSIBLE_FILE_STATUSES_LOCALIZED" basic="false">
      <value>"ResourceMsg(CVS_Status_UTD)", "ResourceMsg(CVS_Status_LM)", "ResourceMsg(CVS_Status_LA)", "ResourceMsg(CVS_Status_LR)", "ResourceMsg(CVS_Status_NC)", "ResourceMsg(CVS_Status_NP)", "ResourceMsg(CVS_Status_NM)", "ResourceMsg(CVS_Status_FCM)", "ResourceMsg(CVS_Status_Unknown)"</value>
    </variable>
    <variable name="POSSIBLE_FILE_STATUSES_LOCALIZED_SHORT" basic="false">
      <value>"ResourceMsg(CVS_Status_short_UTD)", "ResourceMsg(CVS_Status_short_LM)", "ResourceMsg(CVS_Status_short_LA)", "ResourceMsg(CVS_Status_short_LR)", "ResourceMsg(CVS_Status_short_NC)", "ResourceMsg(CVS_Status_short_NP)", "ResourceMsg(CVS_Status_short_NM)", "ResourceMsg(CVS_Status_short_FCM)", "ResourceMsg(CVS_Status_short_Unknown)"</value>
    </variable>
    <variable name="STATUS_SCHEDULED_ADD" basic="false">
      <value>Locally Added</value>
    </variable>
    <variable name="STATUS_SCHEDULED_REMOVE" basic="false">
      <value>Locally Removed</value>
    </variable>
    <variable name="ADJUST_CHARS" basic="false" unless="IS_WINNT">
      <value>\$`"\</value>
    </variable>
    <variable name="ADJUST_VARS" basic="false" unless="IS_WINNT">
      <value>"DESCRIPTION", "IGNORE"</value>
    </variable>
    <variable name="LOCAL_FILES_FILTERED_OUT" basic="false">
      <value if="IS_WINDOWS" unless="IS_WIN9X">"CVS", ".nbcicat.bat"</value>
      <value>"CVS"</value>
    </variable>
    <variable name="USER_LOCAL_PARAM_LABELS" basic="false">
      <value>"ResourceMsg(CVS_CMD_Options)", "ResourceMsg(CVS_IMPORT_Options)", "ResourceMsg(CVS_CO_Options)"</value>
    </variable>
    <variable name="USER_GLOBAL_PARAM_LABELS" basic="false">
      <value>"ResourceMsg(CVS_GLOBAL_Options)"</value>
    </variable>
    <variable name="NUR" basic="false">
      <value>"</value>
      <value if="BUILT-IN"></value>
    </variable>
    <variable name="WORKDIR" basic="false">
      <value if="IS_WINDOWS">${ROOTDIR}${PS}${MODULE}${PS}${DIR}${PS}.</value>
      <value if="IS_OS2">${ROOTDIR}${PS}${MODULE}${PS}${DIR}${PS}.</value>
      <value>${ROOTDIR}${PS}${MODULE}${PS}${DIR}</value>
    </variable>
    <variable name="MODDIR" basic="false">
      <value>${ROOTDIR}$[? MODULE] [${PS}${MODULE}] []</value>
    </variable>
    <variable name="RUN" basic="false">
      <value if="IS_WINNT">cmd /X /C "${CD} ${QUOTE}${ROOTDIR}${PS}.${QUOTE}&amp;&amp;  </value>
      <value if="IS_WIN9X">${SHELL} -c "${CD} ${QUOTE}${ROOTDIR_\/}${QUOTE}&amp;&amp;  </value>
      <value if="IS_OS2">cmd /C "${CD} ${QUOTE}${ROOTDIR}${PS}.${QUOTE}&amp;&amp;  </value>
      <value>/bin/sh -c "${CD} ${QUOTE}${ROOTDIR}${QUOTE}; </value>
    </variable>
    <variable name="QUOTE" basic="false">
      <value if="BUILT-IN">"</value>
      <value if="IS_OS2">"</value>
      <value if="IS_WIN9X" unless="BUILT-IN">\"\"</value>
      <value>\"</value>
    </variable>
    <variable name="MSG_PROMPT_FOR_AUTO_EDIT" basic = "false">
      <value>ResourceMsg(CVS_MSG_PROMPT_FOR_AUTO_EDIT)</value>
    </variable>
    <variable name="TEMPLATE_FILE_PLEASE_WAIT_TEXT" basic = "false">
      <value>ResourceMsg(CVS_TEMPLATE_FILE_PLEASE_WAIT_TEXT)</value>
    </variable>
    <variable name="SERVERTYPE" basic="true" label="ResourceMsg(VAR_SERVER_Type)" labelMnemonic="ResourceMsg(VAR_SERVER_Type_Mnemonic)" localFile="false" localDir="false" executable="false" order="1">
      <value>local</value>
    </variable>
    <variable name="CVS_SERVER" basic="true" label="ResourceMsg(VAR_SERVER_Name)" labelMnemonic="ResourceMsg(VAR_SERVER_Name_Mnemonic)" localFile="false" localDir="false" executable="false" order="2">
      <value></value>
    </variable>
    <variable name="CVS_USERNAME" basic="true" label="ResourceMsg(VAR_User)" labelMnemonic="ResourceMsg(VAR_User_Mnemonic)" localFile="false" localDir="false" executable="false" order="3">
      <value></value>
    </variable>
    <variable name="CVS_REPOSITORY" basic="true" label="ResourceMsg(VAR_Repository)" labelMnemonic="ResourceMsg(VAR_Repository_Mnemonic)" localFile="false" localDir="true" executable="true" order="4">
      <value></value>
    </variable>
    <variable name="CVS_EXE" basic="true" label="ResourceMsg(VAR_EXE)" labelMnemonic="ResourceMsg(VAR_EXE_Mnemonic)" localFile="true" localDir="false" executable="false" order="5">
      <value>cvs</value>
    </variable>
    <variable name="CVS_DEF_EXE" basic="false">
      <value>${QUOTE}${CVS_EXE}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE}</value>
      <value if="IS_WIN9X">${QUOTE}${CVS_EXE_\/}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE}</value>
    </variable>
    <variable name="EXECUTE" basic="false">
      <value>${RUN} ${CVS_DEF_EXE} </value>
      <value if="BUILT-IN">org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${ROOTDIR}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} </value>
    </variable>
    <variable name="CDM_EXECUTE" basic="false">
      <value>${RUNCDM} ${CVS_DEF_EXE} </value>
      <value if="BUILT-IN">org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${MODDIR}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} </value>
    </variable>
    <variable name="CDW_EXECUTE" basic="false">
      <value>${RUNCDW} ${CVS_DEF_EXE} </value>
      <value if="BUILT-IN">org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${WORKDIR}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} </value>
    </variable>
    <variable name="SHELL" basic="true" label="ResourceMsg(Unix_Shell)" labelMnemonic="ResourceMsg(Unix_Shell_Mnemonic)" localFile="true" localDir="false" executable="false" order="6" if="IS_WIN9X">
      <value>sh.exe</value>
    </variable>
    <variable name="PSERVER_VALUE" basic="false">
      <value>pserver</value>
    </variable>
    <variable name="LOCAL_VALUE" basic="false">
      <value>local</value>
    </variable>
    <variable name="REVISION_OPERATION_IDENT" basic="false">
      <value>R</value>
    </variable>
    <variable name="1" basic="false">
      <value>1</value>
    </variable>
    <variable name="IS_LOCAL_METHOD" basic="false">
      <value>$[? SERVERTYPE-LOCAL_VALUE] [] [true]</value>
    </variable>
    <variable name="GLOBAL_INPUT_DESCRIPTOR" basic="false">
      <value>LABEL(ResourceMsg(CVS_OPTIONS_GLOBAL_Label),
                ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_CVS_OPTIONS_GLOBAL_Label)))
             SELECT_COMBO(QUIETNESS, "ResourceMsg(CVS_OPTIONS_GLOBAL_QUIETNESS_Label)","",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_CVS_OPTIONS_GLOBAL_QUIETNESS_Label);;MNEMONIC_ResourceMsg(ACS_CVS_OPTIONS_GLOBAL_QUIETNESS_Label_mnc)),
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_QUIETNESS_No)", ""],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_QUIETNESS_Somewhat)", "-q"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_QUIETNESS_Really)", "-Q"])
             ASK_FOR(DISK_CHANGE, "ResourceMsg(CVS_OPTIONS_GLOBAL_PREVIEW)","",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_CVS_OPTIONS_GLOBAL_PREVIEW);;MNEMONIC_ResourceMsg(ACS_CVS_OPTIONS_GLOBAL_PREVIEW_mnc)))
             ASK_FOR(TRACE, "ResourceMsg(CVS_OPTIONS_GLOBAL_TRACE)","",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_CVS_OPTIONS_GLOBAL_TRACE);;MNEMONIC_ResourceMsg(ACS_CVS_OPTIONS_GLOBAL_TRACE_mnc)))
             ASK_FOR(CHECKOUT_RO_RW, "ResourceMsg(CVS_OPTIONS_GLOBAL_RO)", "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_CVS_OPTIONS_GLOBAL_RO);;MNEMONIC_ResourceMsg(ACS_CVS_OPTIONS_GLOBAL_RO_mnc)) ,"-r", "")
             ASK_FOR(NOT_USE_CVSRC, "ResourceMsg(CVS_OPTIONS_GLOBAL_NORC)", "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_CVS_OPTIONS_GLOBAL_NORC);;MNEMONIC_ResourceMsg(ACS_CVS_OPTIONS_GLOBAL_NORC_mnc)), "-f", "")
             SELECT_COMBO(COMPRESSION, "ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Label)", "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_CVS_OPTIONS_GLOBAL_COMPRESSION_Label);;MNEMONIC_ResourceMsg(ACS_CVS_OPTIONS_GLOBAL_COMPRESSION_Label_mnc)),
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_0)", ""],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_1)", "-z 1"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_2)", "-z 2"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_3)", "-z 3"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_4)", "-z 4"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_5)", "-z 5"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_6)", "-z 6"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_7)", "-z 7"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_8)", "-z 8"],
                 ["ResourceMsg(CVS_OPTIONS_GLOBAL_COMPRESSION_Level_9)", "-z 9"])
      </value>
    </variable>
    <variable name="GLOBAL_INPUT_EXPRESSION" basic="false">
      <value>$[? QUIETNESS] [${QUIETNESS} ][]$[? DISK_CHANGE] [-n ] []$[? TRACE] [-t ] []$[? CHECKOUT_RO_RW] [${CHECKOUT_RO_RW} ][]$[? NOT_USE_CVSRC] [${NOT_USE_CVSRC} ][]${COMPRESSION}</value>
    </variable>
    <variable name="AUTO_FILL_VARS" basic="false">
      <value>ROOTDIR, AUTO_FILL_CONFIG, MODULE, AUTO_FILL_CONFIG, SERVERTYPE, SET_LOGIN_STATE, CVS_SERVER, SET_LOGIN_STATE, CVS_USERNAME, SET_LOGIN_STATE, CVS_REPOSITORY, SET_LOGIN_STATE, ENVIRONMENT_VAR_CVS_CLIENT_PORT, SET_LOGIN_STATE,FILESYSTEM_PROPERTY_offLine, AUTO_FILL_CHECKOUT</value>
    </variable>
    <variable name="AUTORECOGNIZE_FROM_COMMAND" basic="false">
      <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.CvsFSAutorecognizer</value>
    </variable>
    <variable name="DISK_CACHE_FILE_NAME" basic="false">
      <value if="IS_WINDOWS">CVS\netbeans.cmd.cache</value>
      <value>CVS/netbeans.cmd.cache</value>
    </variable>
    <variable name="MAX_CMD_LENGTH" basic="false" if="IS_WINDOWS">
      <value>1000</value>
    </variable>
    <variable name="CONFIG_INPUT_DESCRIPTOR" basic="false">
      <value>PROMPT_FOR(ROOTDIR, "ResourceMsg(INPUT_WORKING_DIR)", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_INPUT_WORKING_DIR);;MNEMONIC_ResourceMsg(INPUT_WORKING_DIR_Mnemonic)),
                        SELECTOR_DIR)
             SELECT_COMBO_EDITABLE(SERVERTYPE, "ResourceMsg(VAR_SERVER_Type):", "pserver",
                                   ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Type);;MNEMONIC_ResourceMsg(VAR_SERVER_Type_Mnemonic)),
                                   [local, local, DISABLE(CVS_SERVER, ENVIRONMENT_VAR_CVS_CLIENT_PORT, CVS_USERNAME, ENVIRONMENT_VAR_CVS_RSH, BUILT-IN/true, FILESYSTEM_PROPERTY_offLine)],
                                   [server, server, DISABLE(ENVIRONMENT_VAR_CVS_RSH, FILESYSTEM_PROPERTY_offLine)],
                                   [pserver, pserver, ENABLE(ENVIRONMENT_VAR_CVS_CLIENT_PORT, FILESYSTEM_PROPERTY_offLine), DISABLE(ENVIRONMENT_VAR_CVS_RSH)],
                                   [ext, ext, ENABLE(ENVIRONMENT_VAR_CVS_RSH), DISABLE(ENVIRONMENT_VAR_CVS_CLIENT_PORT, BUILT-IN/true, FILESYSTEM_PROPERTY_offLine)])
             PROMPT_FOR(CVS_SERVER, "ResourceMsg(VAR_SERVER_Name):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Name);;MNEMONIC_ResourceMsg(VAR_SERVER_Name_Mnemonic)))
             PROMPT_FOR(ENVIRONMENT_VAR_CVS_CLIENT_PORT, "ResourceMsg(VAR_SERVER_Port):", "2401",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Port);;MNEMONIC_ResourceMsg(VAR_SERVER_Port_Mnemonic)))
             PROMPT_FOR(CVS_USERNAME, "ResourceMsg(VAR_User):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_User);;MNEMONIC_ResourceMsg(VAR_User_Mnemonic)))
             PROMPT_FOR(CVS_REPOSITORY, "ResourceMsg(VAR_Repository):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_Repository);;MNEMONIC_ResourceMsg(VAR_Repository_Mnemonic)),
                        IF_VAR_NON_EMPTY"IS_LOCAL_METHOD"_SELECTOR_DIR)
             SELECT_RADIO(BUILT-IN, "", "", ["ResourceMsg(VAR_BuiltIn_true)", "true", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_BuiltIn_true);;MNEMONIC_ResourceMsg(VAR_BuiltIn_true_Mnemonic))"],
                                            ["ResourceMsg(VAR_BuiltIn_false)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_BuiltIn_false);;MNEMONIC_ResourceMsg(VAR_BuiltIn_false_Mnemonic))",
                 PROMPT_FOR(CVS_EXE, "ResourceMsg(VAR_EXE):", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_EXE);;MNEMONIC_ResourceMsg(VAR_EXE_Mnemonic)),
                            SELECTOR_FILE)
                 PROMPT_FOR(ENVIRONMENT_VAR_CVS_RSH, "ResourceMsg(VAR_CVS_RSH):", "ssh",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_CVS_RSH);;MNEMONIC_ResourceMsg(VAR_CVS_RSH_Mnemonic)))
                 IF_VAR_NON_EMPTY"IS_WIN9X"_PROMPT_FOR(SHELL, "ResourceMsg(Unix_Shell):", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_Unix_Shell);;MNEMONIC_ResourceMsg(Unix_Shell_Mnemonic)),
                            SELECTOR_FILE)])
             SELECT_RADIO(FILESYSTEM_PROPERTY_offLine, "", "", ["ResourceMsg(VAR_OFFLINE_Login, ${CVS_SERVER})", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_OFFLINE_Login);;MNEMONIC_ResourceMsg(VAR_OFFLINE_Login_Mnemonic))",
                                                                PROMPT_FOR_PASSWORD(PASSWORD, "ResourceMsg(VAR_Password)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_Password);;MNEMONIC_ResourceMsg(VAR_Password_Mnemonic))", SELECTOR_CMD_(ResourceMsg(LOGIN_Button))CONNECTION_LOGIN)
                                                                TEXT(LOGGED_IN_TEXT, 1, 1, LINE_SINGLE)],
                                                               ["ResourceMsg(VAR_OFFLINE_MODE)", "true", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_OFFLINE_MODE);;MNEMONIC_ResourceMsg(VAR_OFFLINE_MODE_Mnemonic))"])
      </value>
    </variable>      
    <variable name="WIZARD_INPUT_DESCRIPTOR" basic="false">
      <value>PROMPT_FOR(ROOTDIR, "ResourceMsg(INPUT_WORKING_DIR)", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_INPUT_WORKING_DIR);;MNEMONIC_ResourceMsg(INPUT_WORKING_DIR_Mnemonic)),
                        VALIDATOR_FOLDER, SELECTOR_DIR)
             SELECT_COMBO_EDITABLE(SERVERTYPE, "ResourceMsg(VAR_SERVER_Type):", "pserver",
                                   ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Type);;MNEMONIC_ResourceMsg(VAR_SERVER_Type_Mnemonic)),
                                   [local, local, DISABLE(CVS_SERVER, ENVIRONMENT_VAR_CVS_CLIENT_PORT, CVS_USERNAME, ENVIRONMENT_VAR_CVS_RSH, BUILT-IN/true, FILESYSTEM_PROPERTY_offLine)],
                                   [server, server, DISABLE(ENVIRONMENT_VAR_CVS_RSH, FILESYSTEM_PROPERTY_offLine)],
                                   [pserver, pserver, ENABLE(ENVIRONMENT_VAR_CVS_CLIENT_PORT, FILESYSTEM_PROPERTY_offLine), DISABLE(ENVIRONMENT_VAR_CVS_RSH)],
                                   [ext, ext, ENABLE(ENVIRONMENT_VAR_CVS_RSH), DISABLE(ENVIRONMENT_VAR_CVS_CLIENT_PORT, BUILT-IN/true, FILESYSTEM_PROPERTY_offLine)])
             PROMPT_FOR(CVS_SERVER, "ResourceMsg(VAR_SERVER_Name):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Name);;MNEMONIC_ResourceMsg(VAR_SERVER_Name_Mnemonic)))
             PROMPT_FOR(ENVIRONMENT_VAR_CVS_CLIENT_PORT, "ResourceMsg(VAR_SERVER_Port):", "2401",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Port);;MNEMONIC_ResourceMsg(VAR_SERVER_Port_Mnemonic)))
             PROMPT_FOR(CVS_USERNAME, "ResourceMsg(VAR_User):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_User);;MNEMONIC_ResourceMsg(VAR_User_Mnemonic)))
             PROMPT_FOR(CVS_REPOSITORY, "ResourceMsg(VAR_Repository):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_Repository);;MNEMONIC_ResourceMsg(VAR_Repository_Mnemonic)),
                        VALIDATOR_NON_EMPTY, IF_VAR_NON_EMPTY"IS_LOCAL_METHOD"_SELECTOR_DIR)
             SELECT_RADIO(BUILT-IN, "", "true", ["ResourceMsg(VAR_BuiltIn_true)", "true", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_BuiltIn_true);;MNEMONIC_ResourceMsg(VAR_Wiz_BuiltIn_true_Mnemonic))"],
                                            ["ResourceMsg(VAR_BuiltIn_false)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_BuiltIn_false);;MNEMONIC_ResourceMsg(VAR_BuiltIn_false_Mnemonic))",
                 PROMPT_FOR(CVS_EXE, "ResourceMsg(VAR_EXE):", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_EXE);;MNEMONIC_ResourceMsg(VAR_EXE_Mnemonic)),
                            SELECTOR_FILE)
                 PROMPT_FOR(ENVIRONMENT_VAR_CVS_RSH, "ResourceMsg(VAR_CVS_RSH):", "ssh",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_CVS_RSH);;MNEMONIC_ResourceMsg(VAR_CVS_RSH_Mnemonic)))
                 IF_VAR_NON_EMPTY"IS_WIN9X"_PROMPT_FOR(SHELL, "ResourceMsg(Unix_Shell):", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_Unix_Shell);;MNEMONIC_ResourceMsg(Unix_Shell_Mnemonic)),
                            SELECTOR_FILE)])
             SELECT_RADIO(FILESYSTEM_PROPERTY_offLine, "", "", ["ResourceMsg(VAR_OFFLINE_Login, ${CVS_SERVER})", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_OFFLINE_Login);;MNEMONIC_ResourceMsg(VAR_OFFLINE_Login_Mnemonic))",
                                                                PROMPT_FOR_PASSWORD(PASSWORD, "ResourceMsg(VAR_Password)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_Password);;MNEMONIC_ResourceMsg(VAR_Password_Mnemonic))", SELECTOR_CMD_(ResourceMsg(LOGIN_Button))CONNECTION_LOGIN)
                                                                TEXT(LOGGED_IN_TEXT, 1, 1, LINE_SINGLE)],
                                                               ["ResourceMsg(VAR_OFFLINE_MODE)", "true", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_OFFLINE_MODE);;MNEMONIC_ResourceMsg(VAR_OFFLINE_MODE_Mnemonic))"])
             ASK_FOR(DO_CHECKOUT, ResourceMsg(WIZARD_Do_Checkout), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_WIZARD_Do_Checkout);;MNEMONIC_ResourceMsg(ACS_WIZARD_Do_Checkout_mnc)))
      </value>
    </variable>
    <variable name="IS_FINISH_ENABLED" basic="false">
      <value>$[? DO_CHECKOUT][]["true"]</value>
    </variable>
    <variable name="DO_CHECKOUT" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_MODULE" basic="false">
      <value>.</value>
    </variable>  
    <variable name="INITIAL_CO_MODULES" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_TAG" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_DATE" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_FORCE_HEAD_MATCH" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_PRUNE_EMPTY" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_RUN_MODULE_PROGRAM" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_RCS_KFLAG" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_DIRECTORY" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_DO_NOT_SHORTEN" basic="false">
      <value></value>
    </variable>  
    <variable name="INITIAL_CO_RECURSIVE" basic="false">
      <value></value>
    </variable>  
    <variable name="WIZARD_INPUT_DESCRIPTOR1" basic="false">      
      <value>LABEL(ResourceMsg(COMMAND_CHECKOUT_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Label)))
                 
                 SELECT_RADIO(INITIAL_CO_MODULE, "", ".", ["ResourceMsg(COMMAND_CHECKOUT_All)", ".", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_All);;MNEMONIC_ResourceMsg(COMMAND_CHECKOUT_All_Mnemonic))"],
                                            ["ResourceMsg(COMMAND_CHECKOUT_Module)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Module);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Module_mnc))",PROMPT_FOR(INITIAL_CO_MODULES, "", ${MPATHS_\/},SELECTOR_CMD_SELECTOR_MODULES)])
                 PROMPT_FOR(INITIAL_CO_TAG, ResourceMsg(COMMAND_CHECKOUT_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Tag);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Tag_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR(INITIAL_CO_DATE, ResourceMsg(COMMAND_CHECKOUT_Date), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Date);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Date_mnc)) ,SELECTOR_DATE_CVS)
                 ASK_FOR(INITIAL_CO_FORCE_HEAD_MATCH, ResourceMsg(COMMAND_Force_Head_Match), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_Force_Head_Match);;MNEMONIC_ResourceMsg(ACS_COMMAND_Force_Head_Match_mnc)) ,"-f", "")
                 ASK_FOR(INITIAL_CO_PRUNE_EMPTY, ResourceMsg(COMMAND_CHECKOUT_Prune_Empty), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Prune_Empty);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Prune_Empty_mnc)), "-P", "")
                 ASK_FOR(INITIAL_CO_RUN_MODULE_PROGRAM, ResourceMsg(COMMAND_COMMIT_Run_Module_Program), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_COMMIT_Run_Module_Program);;MNEMONIC_ResourceMsg(ACS_COMMAND_COMMIT_Run_Module_Program_mnc)), "", "-n")
                 SELECT_COMBO(INITIAL_CO_RCS_KFLAG, ResourceMsg(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 PROMPT_FOR(INITIAL_CO_DIRECTORY, ResourceMsg(COMMAND_CHECKOUT_Directory), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Directory);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Directory_Adv_mnc)) ,SELECTOR_DIR)
                 ASK_FOR(INITIAL_CO_DO_NOT_SHORTEN, ResourceMsg(COMMAND_CHECKOUT_Do_Not_Shorten_Paths), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Do_Not_Shorten_Paths);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Do_Not_Shorten_Paths_mnc)),"-N", "")                 
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR(INITIAL_CO_RECURSIVE, ResourceMsg(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg(ACS_COMMAND_Recursive_mnc)) ,"-R", "-l")
        </value>
    </variable>
    <variable name="LOGGED_IN_TEXT">
      <value>$[? USER_IS_LOGGED_IN] [ResourceMsg(LOGGED_IN_TEXT_IS)] [ResourceMsg(LOGGED_IN_TEXT_ISNOT)]</value>
    </variable>
    <variable name="USER_IS_LOGGED_IN" basic="true">
      <value></value>
    </variable>
    <variable name="AUTO_EXEC"> <!-- executed after filesystem instantiation if defined -->
      <value>$[? DO_CHECKOUT][INITIAL_CHECKOUT][]</value>
    </variable>
  </variables>
  <commands>
    <command name="ROOT" displayName="ResourceMsg1(CVS)">
      <property name="labelMnemonic">
        <value>ResourceMsg1(CVS_Mnemonic)</value>
      </property>     
      <command name="LIST" displayName="ResourceMsg1(LIST)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(LIST_Mnemonic)</value>
        </property>
	<property name="exec">
	  <value>${WRAPPER} LIST_STATUS_CMD LIST_LOG_CMD</value>
	</property>
	<property name="data.fileName.index">
	  <value>0</value>
	</property>
	<property name="data.status.index">
	  <value>1</value>
	</property>
        <property name="data.revision.index">
	  <value>2</value>
	</property>
	<property name="data.time.index">
	  <value>3</value>
	</property>
	<property name="data.date.index">
	  <value>4</value>
	</property>
        <property name="data.sticky.index">
	  <value>5</value>
	</property>
	<property name="data.size.index">
	  <value>-1</value>
	</property>
	<property name="data.locker.index">
	  <value>6</value>
	</property>
	<property name="input">
	  <value></value>
	</property>
	<property name="data.regex">
          <value>^(.*$)</value>
	</property>
	<property name="data.attr.index">
	  <value>-1</value>
	</property>
	<property name="error.regex">
	  <value>^(.*$)</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
        <property name="disabledOnStatus">
          <value>"Local"</value>
	</property>
      </command>
      <command name="LIST_OFFLINE" displayName="ResourceMsg1(LIST_OFFLINE)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(LIST_OFFLINE_Mnemonic)</value>
        </property>
	<property name="exec">
	  <value>vcs.list.CvsListOffline.class</value>
	</property>
	<property name="data.fileName.index">
	  <value>0</value>
	</property>
	<property name="data.status.index">
	  <value>1</value>
	</property>
        <property name="data.revision.index">
	  <value>2</value>
	</property>
	<property name="data.time.index">
	  <value>3</value>
	</property>
	<property name="data.date.index">
	  <value>4</value>
	</property>
        <property name="data.sticky.index">
	  <value>5</value>
	</property>
	<property name="data.size.index">
	  <value>-1</value>
	</property>
	<property name="data.locker.index">
	  <value>6</value>
	</property>
	<property name="input">
	  <value></value>
	</property>
	<property name="data.regex">
          <value>^(.*$)</value>
	</property>
	<property name="data.attr.index">
	  <value>-1</value>
	</property>
	<property name="error.regex">
	  <value>^(.*$)</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
        <property name="disabledOnStatus">
          <value>"Local"</value>
	</property>
      </command>
      <command name="LIST_FILE" displayName="ResourceMsg1(LIST)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(LIST_Mnemonic)</value>
        </property>
	<property name="exec">
	  <value>vcs.list.CvsListFileCommand.class LIST_FILE_STATUS_CMD LIST_FILE_LOG_CMD</value>
	</property>
	<property name="data.fileName.index">
	  <value>0</value>
	</property>
	<property name="data.status.index">
	  <value>1</value>
	</property>
        <property name="data.revision.index">
	  <value>2</value>
	</property>
	<property name="data.time.index">
	  <value>3</value>
	</property>
	<property name="data.date.index">
	  <value>4</value>
	</property>
        <property name="data.sticky.index">
	  <value>5</value>
	</property>
	<property name="data.size.index">
	  <value>-1</value>
	</property>
	<property name="data.locker.index">
	  <value>6</value>
	</property>
        <property name="refreshFileStatusSubstitutions">
          <!-- Match anything, but "Unknown" status. -->
          <value>"^($|[^U].*$|.[^n)].*$|..[^k].*$|...[^n].*$|....[^o].*$|.....[^w].*$|......[^n].*)$", "REG_EXP_PARSE_OUTPUT"</value>
        </property>
	<property name="input">
	  <value></value>
	</property>
	<property name="data.regex">
          <value>^(.*$)</value>
	</property>
	<property name="data.attr.index">
	  <value>-1</value>
	</property>
	<property name="error.regex">
	  <value>^(.*$)</value>
	</property>
	<property name="onFile">
	  <value>true</value>
	</property>
	<property name="onDir">
	  <value>false</value>
	</property>
	<property name="onRoot">
	  <value>false</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
      </command>
      <command name="LIST_SUB" displayName="ResourceMsg1(LIST_SUB)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(LIST_SUB_Mnemonic)</value>
        </property>
	<property name="exec">
          <value>vcs.list.CvsListRecursiveCommand.class LIST_SUB_STATUS_CMD LIST_SUB_LOG_CMD</value>
	</property>
	<property name="data.fileName.index">
	  <value>0</value>
	</property>
	<property name="data.status.index">
	  <value>1</value>
	</property>
        <property name="data.revision.index">
	  <value>2</value>
	</property>
	<property name="data.time.index">
	  <value>3</value>
	</property>
	<property name="data.date.index">
	  <value>4</value>
	</property>
        <property name="data.sticky.index">
	  <value>5</value>
	</property>
	<property name="data.size.index">
	  <value>-1</value>
	</property>
	<property name="data.locker.index">
	  <value>6</value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
	<property name="input">
	  <value></value>
	</property>
	<property name="data.regex">
	  <value>^(.*$)</value>
	</property>
	<property name="data.attr.index">
	  <value>-1</value>
	</property>
	<property name="error.regex">
	  <value>^(.*$)</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="disabledOnStatus">
          <value>"Local"</value>
	</property>
      </command>
      <command name="LIST_STATUS_CMD">
	<property name="exec">
	  <value>${CDW_EXECUTE} -f status -l ${NUR}</value>
	</property>
      </command>
      <command name="LIST_LOG_CMD">
	<property name="exec">
	  <value>${CDW_EXECUTE} -f log -h -l ${NUR}</value>
	</property>
      </command>
      <command name="LIST_FILE_STATUS_CMD">
	<property name="exec">
	  <value>${CDM_EXECUTE} -f status ${QPATHS} ${NUR}</value>
	</property>
      </command>
      <command name="LIST_FILE_LOG_CMD">
	<property name="exec">
	  <value>${CDM_EXECUTE} -f log -h ${QPATHS} ${NUR}</value>
	</property>
      </command>
      <command name="LIST_SUB_STATUS_CMD">
	<property name="exec">
	  <value>${CDW_EXECUTE} -f status -R ${NUR}</value>
	</property>
      </command>
      <command name="LIST_SUB_LOG_CMD">
	<property name="exec">
	  <value>${CDW_EXECUTE} -f log -h ${NUR}</value>
	</property>
      </command>
      <separator />
      <command name="INIT" displayName="ResourceMsg1(CVS_INIT)" unless="BUILT-IN">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_INIT_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>init</value>
	</property>
	<property name="exec">
	  <value>${RUN} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} init ${NUR}</value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onDir">
	  <value>false</value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="notificationSuccessMsg">
          <value>ResourceMsg1(NOTIFICATION_INIT_Success)</value>
        </property>
        <property name="notificationFailMsg">
          <value>ResourceMsg1(NOTIFICATION_INIT_Fail)</value>
        </property>
      </command>
      <separator />
      <command name="COMMIT" displayName="ResourceMsg1(CVS_COMMIT)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_COMMIT_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>commit</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>vcs.commands.CvsCommit.class COMMIT_CMD</value>
	</property>
        <property name="inputDescriptor">
          <value>
            LABEL(ResourceMsg1(COMMAND_COMMIT_Label),
                ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMIT_Label)))
            PROMPT_FOR_FILE(TEMPLATE_FILE, ResourceMsg1(COMMAND_COMMIT_Reason), {FILE_OUTPUT_OF_COMMIT_TEMPLATE_GETTER(0)},ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMIT_Reason);;MNEMONIC_ResourceMsg1(ACS_COMMAND_COMMIT_Reason_mnc)), 10, 75)
            ASK_FOR_EXPERT(FORCE, ResourceMsg1(COMMAND_COMMIT_Force), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMIT_Force);;MNEMONIC_ResourceMsg1(ACS_COMMAND_COMMIT_Force_mnc)), "-f", "")                
            PROMPT_FOR_EXPERT(BRANCH, ResourceMsg1(COMMAND_COMMIT_To_Branch), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMIT_To_Branch);;MNEMONIC_ResourceMsg1(ACS_COMMAND_COMMIT_To_Branch_mnc)), IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_BRANCHES)                
            ASK_FOR_EXPERT(RUN_MODULE_PROGRAM, ResourceMsg1(COMMAND_COMMIT_Run_Module_Program), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMIT_Run_Module_Program);;MNEMONIC_ResourceMsg1(ACS_COMMAND_COMMIT_Run_Module_Program_mnc)), "", "-n")
            IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)),"-R", "-l") 
          </value>
	</property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.commit.CvsCommitVisualizer</value>
        </property>
	<property name="input">
	  <value></value>
	</property>
	<property name="data.regex">
	  <value>(.*$)</value>
	</property>
	<property name="error.regex">
	  <value>(.*$)</value>
	</property>
	<property name="data.fileName.index">
	  <value>0</value>
	</property>
	<property name="data.status.index">
	  <value>1</value>
	</property>
        <property name="data.revision.index">
	  <value>2</value>
	</property>
	<property name="data.time.index">
	  <value>3</value>
	</property>
	<property name="data.date.index">
	  <value>4</value>
	</property>
        <property name="data.sticky.index">
	  <value>5</value>
	</property>
	<property name="data.locker.index">
	  <value>6</value>
	</property>
        <property name="data.removedFileName.index">
          <value>7</value>
        </property>
        <property name="refreshFileRelativePath">
          <value></value>
        </property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="disabledOnStatus">
          <value>"Local"</value>
	</property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.actions.CommitCommandAction</value>
        </property>
        <property name="generalCommandActionDisplayName">
          <value>ResourceMsg1(CVS_GENERAL_ACTION_COMMIT)</value>
        </property>
        <property name="associatedCommandInterfaceName">
          <value>org.netbeans.api.vcs.commands.CheckInCommand</value>
        </property>
      </command>
      <command name="COMMIT_CMD">
	<property name="exec">
	  <value>${CDM_EXECUTE} ${USER_GLOBAL_PARAM} commit ${FORCE} ${RUN_MODULE_PROGRAM}  ${RECURSIVE} $[? BRANCH] [-r ${BRANCH}] [] -F ${QUOTE}${TEMPLATE_FILE}${QUOTE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	</property>
	<property name="checkForModifications">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="changingNumRevisions">
          <value>true</value>
        </property>
        <property name="concurrentExec">
          <value>10</value> <!-- EXEC_SERIAL_ON_PACKAGE + EXEC_SERIAL_OF_COMMAND -->
        </property>
      </command>
      <command name="COMMIT_TEMPLATE_GETTER" unless="IS_BUILT-IN_AND_WIN9X">
	<property name="exec">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.CvsCommitTemplateGetter.class COMMIT_TEMPLATE_GETTER_CMD</value>
        </property>
	<property name="ignoreFail">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>        
      </command>
      <command name="COMMIT_TEMPLATE_GETTER_CMD" unless="IS_BUILT-IN_AND_WIN9X">
	<property name="exec">
          <value>$[? MULTIPLE_FILES] [${RUNCDM} echo a | ${CVS_DEF_EXE} -f -e cat commit $[? PATHS] [${QPATHS}] [] ${NUR}] [$[? FILE_IS_FOLDER] [${RUNCDM} ${CD} ${QPATH}; echo a | ${CVS_DEF_EXE} -f -e cat commit ${NUR}] [${RUNCDM} echo a | ${CVS_DEF_EXE} -f -e cat commit $[? PATHS] [${QPATHS}] [] ${NUR}]]</value>
          <value if="IS_WINNT">$[? MULTIPLE_FILES] [${RUNCDM} echo a | ${CVS_DEF_EXE} -f -e ${QUOTE}${WINCAT}${QUOTE} commit $[? DIR] [${QPATHS}] [$[? FILE] [${QPATHS}] []] ${NUR}] [$[? FILE_IS_FOLDER] [${RUNCDM} ${CD} ${QPATH}&amp;&amp; echo a | ${CVS_DEF_EXE} -f -e ${QUOTE}${WINCAT}${QUOTE} commit ${NUR}] [${RUNCDM} echo a | ${CVS_DEF_EXE} -f -e ${QUOTE}${WINCAT}${QUOTE} commit $[? DIR] [${QPATHS}] [$[? FILE] [${QPATHS}] []] ${NUR}]]</value>
        </property>
	<property name="data.regex">
	  <value>^($|[^LaA].*$|.[^o)c].*$|..[^gbt].*$|...[^ oi].*$|....[^mro].*$|.....[^etn].*$|......[^s,:].*$|.......[^s ].*$|........[^ac(].*$|.........[^g)c].*$|..........[^eo].*$|...........[^ n].*$|............[^ut].*$|.............[^ni].*$)</value>
	</property>
	<property name="ignoreFail">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>        
      </command>
      <command name="UPDATE_CMD" >
	<property name="exec">
	  <value>${CDM_EXECUTE} ${USER_GLOBAL_PARAM} update ${PRUNE_EMPTY} ${CREATE_DIRS} ${GET_CLEAN_COPY} ${SEND_TO_STDOUT} $[? RESET_STICKY] [${RESET_STICKY}] [$[? TAG] [-r ${TAG}] [] $[? DATE] [-D ${QUOTE}${DATE}${QUOTE}] []] $[? MERGE_SELECTION] [$[? MERGE_SELECTION - 1] [-j ${MERGE_REV1} -j ${MERGE_REV2}] [-j ${MERGE_REV}]] [] ${FORCE_HEAD_MATCH} ${RCS_KFLAG}  ${RECURSIVE} $[? DIR] [${QPATHS}] [$[? FILE] [${QPATHS}] []] ${NUR}</value>          
	</property>
	<property name="data.regex">
	  <value>^([UPARMC]) (.*$)|^(.*) (already contains the differences)(.*)$</value>
	</property>
	<property name="error.regex">
	  <value>^.* warning: (.*) (is not \(any longer\).*)$|^.*: (.*) (is no longer.*)$|^.*: Updating (.*)$</value>
	</property>
        <property name="concurrentExec">
          <value>10</value>
        </property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.update.CvsUpdateVisualizer</value>
        </property>        
      </command>
      <command name="UPDATE" displayName="ResourceMsg1(CVS_UPDATE)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_UPDATE_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>update</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>vcs.commands.CvsUpdate.class $[? DISK_CHANGE] [-n ] []MODDIR UPDATE_CMD</value>
        </property>
        <property name="inputDescriptor">
          <value>LABEL(ResourceMsg1(COMMAND_UPDATE_Label),
                    ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_Label)))
                 ASK_FOR_EXPERT(PRUNE_EMPTY, ResourceMsg1(COMMAND_UPDATE_PruneEmpty), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_PruneEmpty);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_PruneEmpty_mnc)),"-P", "")                   
                 ASK_FOR_EXPERT(CREATE_DIRS, ResourceMsg1(COMMAND_UPDATE_CreateDirs), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_CreateDirs);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_CreateDirs_mnc)), "-d", "")
                 ASK_FOR_EXPERT(RESET_STICKY, ResourceMsg1(COMMAND_UPDATE_RemoveSticky), "false", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_RemoveSticky);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_RemoveSticky_mnc)), "-A", "", DISABLE(TAG, DATE))
                 ASK_FOR_EXPERT(GET_CLEAN_COPY, ResourceMsg1(COMMAND_UPDATE_GetCleanCopy), "false", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_GetCleanCopy);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_GetCleanCopy_mnc)), "-C", "")
                 ASK_FOR_EXPERT(FORCE_HEAD_MATCH, ResourceMsg1(COMMAND_Force_Head_Match), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Force_Head_Match);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_Force_Head_Match_mnc)), "-f", "")
                 ASK_FOR_EXPERT(SEND_TO_STDOUT, ResourceMsg1(COMMAND_UPDATE_Send_To_Stdout), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_Send_To_Stdout);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_Send_To_Stdout_mnc)),"-p", "")
                 PROMPT_FOR_EXPERT(TAG, ResourceMsg1(COMMAND_UPDATE_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_Tag_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)        
                 PROMPT_FOR_EXPERT(DATE, ResourceMsg1(COMMAND_UPDATE_Date), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_Date);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_Date_mnc)),SELECTOR_DATE_CVS)   
                 SELECT_RADIO_EXPERT(MERGE_SELECTION, "", "",
                  [ResourceMsg1(COMMAND_UPDATE_NoMerge), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_NoMerge);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_NoMerge_mnc))]
                  [ResourceMsg1(COMMAND_UPDATE_MergeRevCurr), "1", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_MergeRevCurr);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_MergeRevCurr_mnc)),
                   PROMPT_FOR_EXPERT(MERGE_REV, "")],
                  [ResourceMsg1(COMMAND_UPDATE_Merge2Rev), "2", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_Merge2Rev);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_Merge2Rev_mnc)),
                   PROMPT_FOR_EXPERT(MERGE_REV1, ResourceMsg1(COMMAND_UPDATE_MergeRev1), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_MergeRev1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_MergeRev1_mnc)))
                   PROMPT_FOR_EXPERT(MERGE_REV2, ResourceMsg1(COMMAND_UPDATE_MergeRev2), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UPDATE_MergeRev2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UPDATE_MergeRev2_mnc)))])
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)),["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)),"-R", "-l")
          </value>
	</property>
	<property name="data.fileName.index">
	  <value>0</value>
	</property>
	<property name="data.status.index">
	  <value>1</value>
	</property>
        <property name="data.revision.index">
	  <value>2</value>
	</property>
	<property name="data.time.index">
	  <value>3</value>
	</property>
	<property name="data.date.index">
	  <value>4</value>
	</property>
        <property name="data.sticky.index">
	  <value>5</value>
	</property>
	<property name="data.size.index">
	  <value>-1</value>
	</property>
	<property name="data.locker.index">
	  <value>6</value>
	</property>
        <property name="data.removedFileName.index">
          <value>7</value>
        </property>
	<property name="onRoot">
	  <value>true</value>
	</property>
	<property name="checkForModifications">
	  <value>true</value>
	</property>
        <property name="changingNumRevisions">
          <value>true</value>
        </property>
        <property name="concurrentExec">
          <value>-1</value>
        </property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.actions.UpdateCommandAction</value>
        </property>
        <property name="generalCommandActionDisplayName">
          <value>ResourceMsg1(CVS_GENERAL_ACTION_UPDATE)</value>
        </property>
      </command>
      <command name="ADD_DIR_RECURSIVE" displayName="ResourceMsg1(CVS_ADD)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_ADD_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>add</value>
	</property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.add.CvsAddVisualizer</value>
        </property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>$[? FOLDER_CONTENTS] [vcs.commands.RecursiveFolderCommand.class ${RUN_RECURSIVELY} ADD_CMD] []</value>
	  <!-- If the folder content is not to be added, only ADD_CMD command is executed as a post-command.
               This is necessary due to concurrentExec being -1 -->
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_ADD_Label),
                    ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_Label)))
                 SELECT_RADIO(FOLDER_CONTENTS, "", "", [ResourceMsg1(COMMAND_ADD_JustFolder), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_JustFolder);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_JustFolder_mnc))],
                                                       [ResourceMsg1(COMMAND_ADD_FolderContents), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_FolderContents);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_FolderContents_mnc)),
                                                        PROMPT_FOR(DESCRIPTION, ResourceMsg1(COMMAND_ADD_Description), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_Description);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_Description_mnc)))
                                                        ASK_FOR(RUN_RECURSIVELY, ResourceMsg1(COMMAND_ADD_Recursively), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_Recursively);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_Recursively_mnc)) ,"", "-l")
                                                        ASK_FOR(DO_COMMIT, ResourceMsg1(COMMAND_ADD_DoCommit),, ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACS_COMMAND_ADD_DoCommit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_DoCommit_mnc)))])
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)),["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
          </value>
	</property>        
	<property name="onDir">
	  <value>true</value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="concurrentExec">
          <value>-1</value>  <!-- INERT -->
        </property>
        <property name="runOnMultipleFilesInFolder">
          <value>true</value>
        </property>
        <property name="needsHierarchicalOrder">
          <value>true</value>
        </property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.actions.AddCommandAction</value>
        </property>
        <property name="generalCommandActionDisplayName">
          <value>ResourceMsg1(CVS_GENERAL_ACTION_ADD)</value>
        </property>
        <property name="commandsAfterSuccess">
          <value>$[? FOLDER_CONTENTS] [$[? DO_COMMIT] [COMMIT][]] [ADD_CMD]</value>
        </property>
      </command>
      <!--
      <command name="ADD_DIR" displayName="ResourceMsg1(CVS_ADD)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_ADD_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>add</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${RUNCDW} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} add ${QFILES} ${NUR}</value>
	</property>
	<property name="onDir">
	  <value>true</value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
        <property name="disabledOnStatus">
          <value>""</value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="refreshParentFolder">
          <value>true</value>
        </property>
        <property name="concurrentExec">
          <value>12</value>
        </property>
        <property name="runOnMultipleFilesInFolder">
          <value>true</value>
        </property>
        <property name="needsHierarchicalOrder">
          <value>true</value>
        </property>
        <property name="notificationSuccessMsg">
          <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_ADD_DIRs_Success, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_ADD_DIR_Success, ${FILE})]</value>
        </property>
        <property name="notificationFailMsg">
          <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_ADD_DIRs_Fail, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_ADD_DIR_Fail, ${FILE})]</value>
        </property>
      </command>
      -->
      <command name="ADD" displayName="ResourceMsg1(CVS_ADD)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_ADD_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>add</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${CDW_EXECUTE} ${USER_GLOBAL_PARAM} add $[? PROCESSING_BINARY_FILES] [-kb] [${RCS_KFLAG}] $[? DESCRIPTION] [-m ${QUOTE}${DESCRIPTION}${QUOTE}] [$[? message] [-m ${QUOTE}${message}${QUOTE}] []] ${QFILES} ${NUR}</value>
	</property>
	<property name="inputDescriptor">
	  <value>
            LABEL(ResourceMsg1(COMMAND_ADD_Label),
                ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_Label))) 
            PROMPT_FOR(DESCRIPTION, ResourceMsg1(COMMAND_ADD_Description), "",
                ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_Description);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_Description_mnc))) 
            ASK_FOR(DO_COMMIT, ResourceMsg1(COMMAND_ADD_DoCommit),, ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACS_COMMAND_ADD_DoCommit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_DoCommit_mnc)))
            SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
          </value>          
	</property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.add.CvsAddVisualizer</value>
        </property>
	<property name="distinguishBinaryFiles">
	  <value>true</value>
	</property>
	<property name="onDir">
	  <value>false</value>
	</property>
	<property name="onFile">
	  <value>true</value>
	</property>
	<property name="onRoot">
	  <value>false</value>
	</property>
        <property name="disabledOnStatus">
          <value>"Up-to-date", "Locally Added", "Locally Modified", "Needs Checkout", "Needs Patch", "Needs Merge", "File had conflicts on merge"</value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
          <value>^.*scheduling file `(.*)&apos; for (addition)$|^.*scheduling file `(.*)&apos; for (addition) on( )branch `(.*)'$|^.* [a-z]*: (.*), (version) (.*), resurrected$|^.*re-adding file (.*) \(in place of (dead) revision (.*)\)$|^.*file `(.*)' will be (added) on branch `.*' from version (.*)$</value>
	</property>
        <property name="concurrentExec">
          <value>42</value>  <!-- SERIAL_ON_PACKAGE && SERIAL_OF_COMMAND + SERIAL_WITH_PENDING -->
        </property>
        <property name="concurrentExecWith">
          <value>"ADD_CMD 6", "ADD_DIR_RECURSIVE 4"</value>
        </property>
        <property name="runOnMultipleFilesInFolder">
          <value>true</value>
        </property>
        <property name="refreshInfoFromBothDataOuts">
          <value>true</value>
        </property>
        <property name="refreshFileStatusSubstitutions">
          <value>&quot;addition&quot;, &quot;Locally Added&quot;, &quot;added&quot;, &quot;Locally Added&quot;, &quot;version&quot;, &quot;Up-to-date&quot;, &quot;dead&quot;, &quot;Locally Added&quot;</value>
        </property>
        <property name="data.fileName.index">
          <value>0</value>
        </property>
        <property name="data.status.index">
          <value>1</value>
        </property>
        <property name="data.revision.index">
           <value>2</value>
        </property>
        <property name="data.sticky.index">
	  <value>3</value>
	</property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.actions.AddCommandAction</value>
        </property>
        <property name="generalCommandActionDisplayName">
          <value>ResourceMsg1(CVS_GENERAL_ACTION_ADD)</value>
        </property>
        <property name="associatedCommandInterfaceName">
          <value>org.netbeans.api.vcs.commands.AddCommand</value>
        </property>
        <property name="commandsAfterSuccess">
          <value>$[? DO_COMMIT] [COMMIT][]</value>
        </property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.add.CvsAddVisualizer</value>
        </property>
      </command>
      <command name="ADD_CMD">
	<property name="exec">
	  <value>${CDW_EXECUTE} ${USER_GLOBAL_PARAM} add $[? PROCESSING_BINARY_FILES] [-kb] [${RCS_KFLAG}] $[? DESCRIPTION] [-m ${QUOTE}${DESCRIPTION}${QUOTE}] [] ${QFILES} ${NUR}</value>
	</property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.add.CvsAddVisualizer</value>
        </property>
	<property name="distinguishBinaryFiles">
	  <value>true</value>
	</property>
	<property name="onDir">
	  <value>true</value>
	</property>
	<property name="onFile">
	  <value>true</value>
	</property>
	<property name="onRoot">
	  <value>false</value>
	</property>
        <property name="disabledOnStatus">
          <value>"", "Up-to-date", "Locally Added", "Locally Modified", "Needs Checkout", "Needs Patch", "Needs Merge", "File had conflicts on merge"</value>
	</property>
	<property name="data.regex">
	  <value>^Directory .*/([^/]*) (add)ed .*$|^.*Using per-directory( )sticky( )tag( )`(.*)'$</value>
	</property>
	<property name="error.regex">
          <value>^.*scheduling file `(.*)&apos; for (addition)$|^.*scheduling file `(.*)&apos; for (addition) on( )branch `(.*)'$|^.* [a-z]*: (.*), (version) (.*), resurrected$|^.*re-adding file (.*) \(in place of (dead) revision (.*)\)$|^.*file `(.*)' will be (added) on branch `.*' from version (.*)$</value>
	</property>
        <property name="concurrentExec">
          <value>38</value>  <!-- (SERIAL_ON_PACKAGE || SERIAL_WITH_PARENT) + SERIAL_WITH_PENDING -->
        </property>
        <property name="runOnMultipleFilesInFolder">
          <value>true</value>
        </property>
        <property name="refreshInfoFromBothDataOuts">
          <value>true</value>
        </property>
        <property name="refreshFileStatusSubstitutions">
          <value>&quot;addition&quot;, &quot;Locally Added&quot;, &quot;added&quot;, &quot;Locally Added&quot;, &quot;add&quot;, &quot;&quot;, &quot;version&quot;, &quot;Up-to-date&quot;, &quot;dead&quot;, &quot;Locally Added&quot;</value>
        </property>
        <property name="data.fileName.index">
          <value>0</value>
        </property>
        <property name="data.status.index">
          <value>1</value>
        </property>
        <property name="data.revision.index">
           <value>2</value>
        </property>
        <property name="data.sticky.index">
	  <value>3</value>
	</property>
        <property name="commandsAfterSuccess">
          <value>$[? DO_COMMIT] [$[? FOLDER_CONTENTS] [] [COMMIT]][]</value>
        </property>
      </command>

      <command name="SCHEDULE_ADD">
	<property name="exec">
	  <value>vcs.commands.CvsScheduledAdd.class SCHEDULE_ADD_CMD</value>
	</property>
      </command>
      <command name="SCHEDULE_ADD_CMD">
	<property name="exec">
	  <value>${RUNCDW} ${CVS_DEF_EXE} -f add $[? PROCESSING_BINARY_FILES] [-kb] [] ${QFILE} ${NUR}</value>
	</property>
	<property name="distinguishBinaryFiles">
	  <value>true</value>
	</property>
      </command>

      <command name="REMOVE" displayName="ResourceMsg1(CVS_REMOVE)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_REMOVE_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>remove</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${CDM_EXECUTE} ${USER_GLOBAL_PARAM} remove -f  ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_REMOVE_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_REMOVE_Label)))
                 ASK_FOR(DO_COMMIT, ResourceMsg1(COMMAND_REMOVE_DoCommit),, ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACS_COMMAND_REMOVE_DoCommit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_REMOVE_DoCommit_mnc)))
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
          </value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="confirmationMsg">
	  <value>$[? MULTIPLE_FILES] [ResourceMsg1(CONFIRMATION_REMOVEs, ${NUM_IMPORTANT_FILES})] [ResourceMsg1(CONFIRMATION_REMOVE, ${FILE})]</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="refreshCurrentFolder">
          <value>true</value>
        </property>
        <property name="refreshRecursivelyPatternUnmatched">
          <value>  -l </value>
        </property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="cleanUnimportantFilesOnSuccess">
          <value>true</value>
        </property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.actions.RemoveCommandAction</value>
        </property>
        <property name="generalCommandActionDisplayName">
          <value>ResourceMsg1(CVS_GENERAL_ACTION_REMOVE)</value>
        </property>
        <property name="commandsAfterSuccess">
          <value>$[? DO_COMMIT] [COMMIT][]</value>
        </property>
      </command>

      <command name="SCHEDULE_REMOVE">
	<property name="exec">
	  <value>${RUNCDW} ${CVS_DEF_EXE} -f remove -f ${QFILE} ${NUR}</value>
	</property>
      </command>

      <command name="RELEASE" displayName="ResourceMsg1(CVS_RELEASE)" unless="BUILT-IN">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_RELEASE_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>release</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${RUNCDW} echo y | ${CVS_DEF_EXE} -f release -d $[? FILE] [${QFILE}] [.]</value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
	<property name="onDir">
	  <value>true</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
        <property name="refreshParentFolder">
          <value>true</value>
        </property>
        <property name="refreshRecursivelyPatternMatched">
          <value> </value>
        </property>
	<property name="confirmationMsg">
	  <value>{INSERT_OUTPUT_OF_PRE_RELEASE(0, true, 10, 2)}</value>
	</property>
        <property name="commandsAfterSuccess">
          <value>DELETE_DIR</value>
        </property>
      </command>
      <command name="PRE_RELEASE">
	<property name="exec">
	  <value>${RUNCDW} echo n | ${CVS_DEF_EXE} -f release -d $[? FILE] [${QFILE}] [.]</value>
	</property>
	<property name="data.regex">
	  <value>^(.*)$</value>
	</property>
	<property name="error.regex">
	  <value>(.*$)</value>
	</property>
      </command>
      <separator />
      <command name="STATUS" displayName="ResourceMsg1(CVS_STATUS)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_STATUS_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>status</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${CDM_EXECUTE} ${USER_GLOBAL_PARAM} status ${VERBOSE} ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>         
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_STATUS_Label), ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_STATUS_Label)))
                 ASK_FOR_EXPERT(VERBOSE, ResourceMsg1(COMMAND_STATUS_Verbose), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_STATUS_Verbose);;MNEMONIC_ResourceMsg1(ACS_COMMAND_STATUS_Verbose_mnc)) ,"-v", "")
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)) ,"-R", "-l")</value>
	</property>
	<property name="display">
	  <value>true</value>
	</property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.status.CvsStatusVisualizer</value>
        </property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
      </command>
      <command name="STATUS_GET_TAGS">        
	<property name="exec">
	  <value>${CDM_EXECUTE} ${USER_GLOBAL_PARAM} status -v $[? PATHS] [${QPATHS}] [] ${NUR}</value>          
	</property>	
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>        
      </command>
      <command name="SUBMENU_HISTORY" displayName="ResourceMsg1(CVS_SECTION_HISTORY)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_SECTION_HISTORY_Mnemonic)</value>
        </property>
      <command name="LOG" displayName="ResourceMsg1(CVS_LOG)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_LOG_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>log</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${CDM_EXECUTE} ${USER_GLOBAL_PARAM} log ${ONLY_PRINT} ${NO_TAGS} $[? REVISIONS] [-r${QUOTE}${REVISIONS}${QUOTE}] [] $[? DATES] [-d ${QUOTE}${DATES}${QUOTE}] [] $[? STATES] [-s ${QUOTE}${STATES}${QUOTE}] [] $[? USERS] [-w${USERS}] [] ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>                    
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_LOG_Label), ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Label)))
                 SELECT_RADIO_EXPERT(ONLY_PRINT, "", "", [ResourceMsg1(COMMAND_LOG_Do_Not_Restrict_Output), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Do_Not_Restrict_Output);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Do_Not_Restrict_Output_mnc))],
                  [ResourceMsg1(COMMAND_LOG_Only_Print_Name_Of_RCS_File), "-R",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Only_Print_Name_Of_RCS_File);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Only_Print_Name_Of_RCS_File_mnc))],
                  [ResourceMsg1(COMMAND_LOG_Only_Print_Header), "-h",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Only_Print_Header);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Only_Print_Header_mnc))],
                  [ResourceMsg1(COMMAND_LOG_Only_Print_Header_And_Descr_Text), "-t",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Only_Print_Header_And_Descr_Text);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Only_Print_Header_And_Descr_Text_mnc))],
                  [ResourceMsg1(COMMAND_LOG_Only_Rev_On_Branch), "-b",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Only_Rev_On_Branch);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Only_Rev_On_Branch_mnc))])
                 ASK_FOR_EXPERT(NO_TAGS, ResourceMsg1(COMMAND_LOG_Do_Not_List_Tags), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Do_Not_List_Tags);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Do_Not_List_Tags_mnc)), "-N", "")
                 PROMPT_FOR_EXPERT(REVISIONS, ResourceMsg1(COMMAND_LOG_Revisions), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Revisions);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Revisions_mnc)))
                 PROMPT_FOR_EXPERT(DATES, ResourceMsg1(COMMAND_LOG_Dates), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Dates);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Dates_mnc)))
                 PROMPT_FOR_EXPERT(STATES, ResourceMsg1(COMMAND_LOG_States), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_States);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_States_mnc)))
                 PROMPT_FOR_EXPERT(USERS, ResourceMsg1(COMMAND_LOG_Users), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOG_Users);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOG_Users_mnc)))
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "", "-l")
          </value>
	</property>
	<property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.log.CvsLogVisualizer</value>
        </property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.actions.HistoryCommandAction</value>
        </property>
        <property name="generalCommandActionDisplayName">
          <value>ResourceMsg1(CVS_GENERAL_ACTION_HISTORY)</value>
        </property>
      </command>
      <command name="HISTORY" displayName="ResourceMsg1(CVS_HISTORY)" unless="BUILT-IN" >
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_HISTORY_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>history</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${RUNCDM} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} history ${REPORT} ${SPEC_MODULE} ${RECORD_TYPE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
        </property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_HISTORY_Label), ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_HISTORY_Label)))
                 SELECT_RADIO(REPORT, ResourceMsg1(COMMAND_HISTORY_Report), "-o",
                  [ResourceMsg1(COMMAND_HISTORY_Report_On_Tags), "-T", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_HISTORY_Report_On_Tags);;MNEMONIC_ResourceMsg1(ACS_COMMAND_HISTORY_Report_On_Tags_mnc))],
                  [ResourceMsg1(COMMAND_HISTORY_Report_On_Commited), "-c",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_HISTORY_Report_On_Commited);;MNEMONIC_ResourceMsg1(ACS_COMMAND_HISTORY_Report_On_Commited_mnc))],
                  [ResourceMsg1(COMMAND_HISTORY_Report_On_Checked_Mods), "-o",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_HISTORY_Report_On_Checked_Mods);;MNEMONIC_ResourceMsg1(ACS_COMMAND_HISTORY_Report_On_Checked_Mods_mnc))],
                  [ResourceMsg1(COMMAND_HISTORY_Report_On_Module), "-m", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_HISTORY_Report_On_Module);;MNEMONIC_ResourceMsg1(ACS_COMMAND_HISTORY_Report_On_Module_mnc)),
                   PROMPT_FOR(SPEC_MODULE, ResourceMsg1(COMMAND_HISTORY_Report_Module_Name), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_HISTORY_Report_Module_Name);;MNEMONIC_ResourceMsg1(ACS_COMMAND_HISTORY_Report_Module_Name_mnc)) ,SELECTOR_CMD_SELECTOR_MODULES)],
                  [ResourceMsg1(COMMAND_HISTORY_Report_On_Record_Type), "-x",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_HISTORY_Report_On_Record_Type);;MNEMONIC_ResourceMsg1(ACS_COMMAND_HISTORY_Report_On_Record_Type_mnc)),
                   SELECT_COMBO(RECORD_TYPE, ResourceMsg1(COMMAND_HISTORY_Report_Record_Type),"",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_HISTORY_Report_Record_Type);;MNEMONIC_ResourceMsg1(ACS_COMMAND_HISTORY_Report_Record_Type_mnc)),
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Release), "F"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Checkout), "O"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Tag), "T"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Merge_Coll), "C"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Merge_Succ), "G"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Update), "U"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_WDel), "W"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Add), "A"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Modified), "M"],
                    [ResourceMsg1(COMMAND_HISTORY_Report_Record_Removed), "R"])])
          </value>
	</property>
	<property name="display">
	  <value>true</value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
      </command>
      <command name="ANNOTATE" displayName="ResourceMsg1(CVS_ANNOTATE)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_ANNOTATE_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>annotate</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">	  
          <value>${CDW_EXECUTE} ${USER_GLOBAL_PARAM} annotate $[? SPEC_REVISION] [-r ${SPEC_REVISION}] [] $[? SPEC_DATE] [-D ${QUOTE}${SPEC_DATE}${QUOTE}] [] ${USE_HEAD} ${QFILE} ${NUR}</value>          
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_ANNOTATE_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ANNOTATE_Label)))
                 PROMPT_FOR_EXPERT(SPEC_REVISION, ResourceMsg1(COMMAND_ANNOTATE_Spec_Revision), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ANNOTATE_Spec_Revision);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ANNOTATE_Spec_Revision_mnc)))
                 PROMPT_FOR_EXPERT(SPEC_DATE, ResourceMsg1(COMMAND_ANNOTATE_Spec_Date), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ANNOTATE_Spec_Date);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ANNOTATE_Spec_Date_mnc)))
                 ASK_FOR_EXPERT(USE_HEAD, ResourceMsg1(COMMAND_ANNOTATE_Use_Head), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ANNOTATE_Use_Head);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ANNOTATE_Use_Head_mnc)) ,"-f", "")
          </value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
          <value>false</value>	
	</property>
        <property name="onDir">
          <value>false</value>	  
	</property>
        <property name="runOnMultipleFiles">
          <value>false</value>
        </property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.annotate.CvsAnnotateVisualizer</value>
        </property>
      </command>
      <command name="ANNOTATE_CMD">
	<property name="exec">
	  <value>${RUNCDW} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} annotate $[? SPEC_REVISION] [-r ${SPEC_REVISION}] [] $[? SPEC_DATE] [-D ${QUOTE}${SPEC_DATE}${QUOTE}] [] ${USE_HEAD} ${QFILE} ${NUR}</value>
	</property>
	<property name="data.regex">
	  <value>^([0-9\.]+) +\((.*) (.*)\): (.*)$</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
      </command>
      </command> <!-- End section History -->
      <separator />
      <command name="IMPORT_CMD">
        <property name="exec">
          <value if="BUILT-IN">org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${WORKDIR}$[? FILE] [${PS}${FILE}][]${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} ${USER_GLOBAL_PARAM} import ${MODIF_TIME} ${RCS_KFLAG} $[? IGNORE] [-I ${QUOTE}${IGNORE}${QUOTE}] [] $[? UNSHARABLE_IGNORE] [${UNSHARABLE_IGNORE}] [] $[? BRANCH_ID] [-b ${BRANCH_ID}] [] -m ${QUOTE}${DESCRIPTION}${QUOTE} ${QUOTE}$[? DIR] [$[? MODULE] [${MODULE_\/}/${DIR_\/}/${FILE}] [${DIR_\/}/${FILE}]] [$[? MODULE] [${MODULE_\/}/${FILE}] [${FILE}]]${QUOTE} ${VENDOR_TAG} ${RELEASE_TAG}</value>
	  <value>${RUNCDW} $[? FILE] [${CD} ${QFILE}&amp;&amp;] [] ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} import ${MODIF_TIME} ${RCS_KFLAG} $[? IGNORE] [-I ${QUOTE}${IGNORE}${QUOTE}] [] $[? UNSHARABLE_IGNORE] [${UNSHARABLE_IGNORE}] [] $[? BRANCH_ID] [-b ${BRANCH_ID}] [] -m ${QUOTE}${DESCRIPTION}${QUOTE} ${QUOTE}$[? DIR] [$[? MODULE] [${MODULE_\/}/${DIR_\/}/${FILE}] [${DIR_\/}/${FILE}]] [$[? MODULE] [${MODULE_\/}/${FILE}] [${FILE}]]${QUOTE} ${VENDOR_TAG} ${RELEASE_TAG} ${NUR}</value>
	</property>
      </command>
      <command name="IMPORT" displayName="ResourceMsg1(CVS_IMPORT)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_IMPORT_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>import</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.SharableImport.class IMPORT_CMD</value>
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_IMPORT_Label), ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Label)))
                 PROMPT_FOR(DESCRIPTION, ResourceMsg1(COMMAND_IMPORT_Logging_Message), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Logging_Message);;MNEMONIC_ResourceMsg1(ACS_COMMAND_IMPORT_Logging_Message_mnc)), VALIDATOR_NON_EMPTY)
                 PROMPT_FOR(VENDOR_TAG, ResourceMsg1(COMMAND_IMPORT_Vendor_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Vendor_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_IMPORT_Vendor_Tag_mnc)) ,VALIDATOR_NON_EMPTY)
                 PROMPT_FOR(RELEASE_TAG, ResourceMsg1(COMMAND_IMPORT_Release_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Release_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_IMPORT_Release_Tag_mnc)), VALIDATOR_NON_EMPTY)
                 ASK_FOR_EXPERT(MODIF_TIME, ResourceMsg1(COMMAND_IMPORT_Modif_Time), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Modif_Time);;MNEMONIC_ResourceMsg1(ACS_COMMAND_IMPORT_Modif_Time_mnc)), "-d", "")
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 PROMPT_FOR_EXPERT(IGNORE, ResourceMsg1(COMMAND_IMPORT_Ignore), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Ignore);;MNEMONIC_ResourceMsg1(ACS_COMMAND_IMPORT_Ignore_mnc)))
                 PROMPT_FOR_EXPERT(BRANCH_ID, ResourceMsg1(COMMAND_IMPORT_Branch_Id), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Branch_Id);;MNEMONIC_ResourceMsg1(ACS_COMMAND_IMPORT_Branch_Id_mnc)))
                 ASK_FOR(DO_CHECKOUT, ResourceMsg1(COMMAND_IMPORT_Do_Checkout), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Do_Checkout);;MNEMONIC_ResourceMsg1(ACS_COMMAND_IMPORT_Do_Checkout_mnc)), ENABLE(CHECKOUT_OPTIONS))
                 PROMPT_FOR_EXPERT(CHECKOUT_OPTIONS, ResourceMsg1(COMMAND_IMPORT_Checkout_Options), "-N -R",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_IMPORT_Checkout_Options);;MNEMONIC_ResourceMsg1(ACS_COMMAND_IMPORT_Checkout_Options_mnc)))
          </value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
	<property name="display">
	  <value>true</value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="notificationSuccessMsg">
          <value>$[? DO_CHECKOUT] [] [ResourceMsg1(NOTIFICATION_IMPORT_Success, ${FILE})]</value>
        </property>
        <property name="notificationFailMsg">
          <value>ResourceMsg1(NOTIFICATION_IMPORT_Fail, ${FILE})</value>
        </property>
        <property name="commandsAfterSuccess">
          <value>$[? DO_CHECKOUT] [MOVE_AND_CHECKOUT_IMPORTED][]</value>
        </property>
      </command>
      <command name="MOVE_AND_CHECKOUT_IMPORTED">
	<property name="exec">
          <value>${RUNCDW} $[? FILE] [] [${CD} ..&amp;&amp;] mv ${QUOTE}${FILE}${QUOTE} ${QUOTE}${FILE}_orig${QUOTE} ${NUR}</value>
          <value if="IS_WINNT">${RUNCDW} $[? FILE] [] [${CD} ..&amp;&amp;] rename ${QUOTE}${FILE}${QUOTE} ${QUOTE}${FILE}_orig${QUOTE} ${NUR}</value>
        </property>
        <property name="notificationFailMsg">
          <value>ResourceMsg1(NOTIFICATION_MOVE_IMPORTED_Fail, ${FILE})</value>
        </property>
        <property name="commandsAfterSuccess">
          <value>CHECKOUT_IMPORTED</value>
        </property>
      </command>
      <command name="PRE_CHECKOUT_CREATE_CVS_FOLDER">
	<property name="exec">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.CvsPreCheckoutFolder.class</value>
        </property>
      </command>
      <command name="CHECKOUT_IMPORTED">
	<property name="exec">
          <value>${EXECUTE} ${USER_GLOBAL_PARAM} checkout ${CHECKOUT_OPTIONS} ${QUOTE}${MODPATH}${QUOTE} ${NUR}</value>
        </property>
        <property name="preCommands">
          <value>PRE_CHECKOUT_CREATE_CVS_FOLDER</value>
        </property>
        <property name="refreshParentFolder">
          <value>true</value>
        </property>
        <property name="refreshRecursivelyPatternMatched">
          <value>checkout</value>
        </property>
        <property name="notificationSuccessMsg">
          <value>ResourceMsg1(NOTIFICATION_IMPORT_AND_CHECKOUT_Success, ${FILE})</value>
        </property>
        <property name="notificationFailMsg">
          <value>ResourceMsg1(NOTIFICATION_IMPORT_Success_AND_CHECKOUT_Fail, ${FILE})</value>
        </property>
      </command>
      <command name="CHECKOUT_COMMAND">
	<property name="exec">
	  <value>${EXECUTE} ${USER_GLOBAL_PARAM} checkout ${FORCE_HEAD_MATCH} ${DO_NOT_SHORTEN} ${SEND_TO_STDOUT} ${RCS_KFLAG} ${RUN_MODULE_PROGRAM} $[? DIRECTORY] [-d ${DIRECTORY}] [] $[? RESET_STICKY] [${RESET_STICKY}] [$[? TAG] [-r ${TAG}] [] $[? DATE] [-D ${QUOTE}${DATE}${QUOTE}] []] ${PRUNE_EMPTY}  ${RECURSIVE} ${CO_MODULE} ${CO_ALL} ${NUR}</value>
	</property>
	<property name="display">
	  <value>true</value>
	</property>
	<property name="data.regex">
	  <value>^([UPARMC]) (.*$)|^(.*) (already contains the differences)(.*)$</value>
	</property>
	<property name="error.regex">
	  <value>^.* warning: (.*) (is not \(any longer\).*)$|^.*: (.*) (is no longer.*)$|^.*: Updating (.*)$</value>
	</property>
        <property name="preCommands">
          <value>PRE_CHECKOUT_CREATE_CVS_FOLDER</value>
        </property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.update.CvsUpdateVisualizer</value>
        </property>
      </command>
      <command name="CHECKOUT" displayName="ResourceMsg1(CVS_CHECKOUT)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_CHECKOUT_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>checkout</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>vcs.commands.CvsUpdate.class $[? DISK_CHANGE] [-n ] []ROOTDIR CHECKOUT_COMMAND</value>          
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_CHECKOUT_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Label)))
                 PROMPT_FOR(CO_MODULE, ResourceMsg1(COMMAND_CHECKOUT_Module), ${MPATHS_\/},ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Module);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Module_mnc)) ,SELECTOR_CMD_SELECTOR_MODULES)
                 PROMPT_FOR(TAG, ResourceMsg1(COMMAND_CHECKOUT_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Tag_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR(DATE, ResourceMsg1(COMMAND_CHECKOUT_Date), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Date);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Date_mnc)) ,SELECTOR_DATE_CVS)
                 ASK_FOR(FORCE_HEAD_MATCH, ResourceMsg1(COMMAND_Force_Head_Match), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Force_Head_Match);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Force_Head_Match_mnc)) ,"-f", "")
                 ASK_FOR_EXPERT(RESET_STICKY, ResourceMsg1(COMMAND_CHECKOUT_RemoveSticky), "false", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_RemoveSticky);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_RemoveSticky_mnc)), "-A", "", DISABLE(TAG, DATE))
                 ASK_FOR_EXPERT(PRUNE_EMPTY, ResourceMsg1(COMMAND_CHECKOUT_Prune_Empty), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Prune_Empty);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Prune_Empty_mnc)), "-P", "")
                 ASK_FOR_EXPERT(SEND_TO_STDOUT, ResourceMsg1(COMMAND_CHECKOUT_Send_To_Stdout), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Send_To_Stdout);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Send_To_Stdout_mnc)) ,"-p", "")
                 ASK_FOR_EXPERT(RUN_MODULE_PROGRAM, ResourceMsg1(COMMAND_COMMIT_Run_Module_Program), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMIT_Run_Module_Program);;MNEMONIC_ResourceMsg1(ACS_COMMAND_COMMIT_Run_Module_Program_mnc)), "", "-n")
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 PROMPT_FOR_EXPERT(DIRECTORY, ResourceMsg1(COMMAND_CHECKOUT_Directory), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Directory);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Directory_Adv_mnc)))
                 ASK_FOR_EXPERT(DO_NOT_SHORTEN, ResourceMsg1(COMMAND_CHECKOUT_Do_Not_Shorten_Paths), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Do_Not_Shorten_Paths);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Do_Not_Shorten_Paths_mnc)),"-N", "")
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)) ,"-R", "-l")
          </value>
	</property>
	<property name="data.fileName.index">
	  <value>0</value>
	</property>
	<property name="data.status.index">
	  <value>1</value>
	</property>
        <property name="data.revision.index">
	  <value>2</value>
	</property>
	<property name="data.time.index">
	  <value>3</value>
	</property>
	<property name="data.date.index">
	  <value>4</value>
	</property>
        <property name="data.sticky.index">
	  <value>5</value>
	</property>
	<property name="data.size.index">
	  <value>-1</value>
	</property>
	<property name="data.locker.index">
	  <value>6</value>
	</property>
        <property name="data.removedFileName.index">
          <value>7</value>
        </property>
        <property name="refreshFileRelativePath">
          <value></value>
        </property>
	<property name="onRoot">
	  <value>true</value>
	</property>
	<property name="checkForModifications">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="concurrentExec">
          <value>-1</value>
        </property>
      </command>
      <command name="INITIAL_CHECKOUT_COMMAND" displayName="ResourceMsg1(CVS_CHECKOUT)">
        <property name="hidden">
          <value>true</value>
        </property>
	<property name="exec">
	  <value>${EXECUTE} ${USER_GLOBAL_PARAM} checkout ${INITIAL_CO_FORCE_HEAD_MATCH} ${INITIAL_CO_DO_NOT_SHORTEN} ${INITIAL_CO_RCS_KFLAG} ${INITIAL_CO_RUN_MODULE_PROGRAM} $[? INITIAL_CO_DIRECTORY] [-d ${INITIAL_CO_DIRECTORY}] [] $[? INITIAL_CO_TAG] [-r ${INITIAL_CO_TAG}] [] $[? INITIAL_CO_DATE] [-D ${QUOTE}${INITIAL_CO_DATE}${QUOTE}] [] ${INITIAL_CO_PRUNE_EMPTY}  ${INITIAL_CO_RECURSIVE} $[? INITIAL_CO_MODULE] [${INITIAL_CO_MODULE}] [${INITIAL_CO_MODULES}] ${NUR}</value>
	</property>
	<property name="display">
	  <value>true</value>
	</property>
	<property name="data.regex">
	  <value>^([UPARMC]) (.*$)|^(.*) (already contains the differences)(.*)$</value>
	</property>
	<property name="error.regex">
	  <value>^.* warning: (.*) (is not \(any longer\).*)$|^.*: (.*) (is no longer.*)$|^.*: Updating (.*)$</value>
	</property>
        <property name="preCommands">
          <value>PRE_CHECKOUT_CREATE_CVS_FOLDER</value>
        </property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="visualizer">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.visualizers.update.CvsUpdateVisualizer</value>
        </property>
      </command>
      <command name="INITIAL_CHECKOUT">
	<property name="exec">
	  <value>vcs.commands.CvsUpdate.class $[? DISK_CHANGE] [-n ] []ROOTDIR INITIAL_CHECKOUT_COMMAND</value>          
	</property>
	<property name="data.fileName.index">
	  <value>0</value>
	</property>
	<property name="data.status.index">
	  <value>1</value>
	</property>
        <property name="data.revision.index">
	  <value>2</value>
	</property>
	<property name="data.time.index">
	  <value>3</value>
	</property>
	<property name="data.date.index">
	  <value>4</value>
	</property>
        <property name="data.sticky.index">
	  <value>5</value>
	</property>
	<property name="data.size.index">
	  <value>-1</value>
	</property>
	<property name="data.locker.index">
	  <value>6</value>
	</property>
        <property name="data.removedFileName.index">
          <value>7</value>
        </property>
        <property name="refreshFileRelativePath">
          <value></value>
        </property>
	<property name="onRoot">
	  <value>true</value>
	</property>
	<property name="checkForModifications">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="concurrentExec">
          <value>-1</value>
        </property>
      </command>
      <command name="EXPORT" displayName="ResourceMsg1(CVS_EXPORT)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_EXPORT_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>export</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${RUN} ${CD} ${QUOTE}${DIRECTORY}${QUOTE}&amp;&amp; ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} export $[? TAG] [-r ${TAG}] [] $[? DATE] [-D ${QUOTE}${DATE}${QUOTE}] [] ${FORCE_HEAD_MATCH} ${DO_NOT_SHORTEN} ${RUN_MODULE_PROGRAM} ${RCS_KFLAG} ${RECURSIVE} ${EXPORT_MODULE} ${NUR}</value>
	  <value if="BUILT-IN">org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${DIRECTORY}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} ${USER_GLOBAL_PARAM} export $[? TAG] [-r ${TAG}] [] $[? DATE] [-D ${QUOTE}${DATE}${QUOTE}] [] ${FORCE_HEAD_MATCH} ${DO_NOT_SHORTEN} ${RUN_MODULE_PROGRAM} ${RCS_KFLAG} ${RECURSIVE} ${EXPORT_MODULE} ${NUR}</value>
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg1(COMMAND_EXPORT_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Label)))
                 PROMPT_FOR(DIRECTORY, ResourceMsg1(COMMAND_EXPORT_Directory), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Directory);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_Directory_mnc)),SELECTOR_DIR)
                 PROMPT_FOR(EXPORT_MODULE, ResourceMsg1(COMMAND_EXPORT_Module), ${QMPATHS},ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Module);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_Module_mnc)), SELECTOR_CMD_SELECTOR_MODULES)
                 PROMPT_FOR(TAG, ResourceMsg1(COMMAND_EXPORT_Tag), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_Tag_mnc)),IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR(DATE, ResourceMsg1(COMMAND_EXPORT_Date), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Date);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_Date_mnc)) ,SELECTOR_DATE_CVS)
                 ASK_FOR(FORCE_HEAD_MATCH, ResourceMsg1(COMMAND_Force_Head_Match), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Force_Head_Match);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Force_Head_Match_mnc)), "-f", "")
                 ASK_FOR_EXPERT(RUN_MODULE_PROGRAM, ResourceMsg1(COMMAND_COMMIT_Run_Module_Program), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMIT_Run_Module_Program);;MNEMONIC_ResourceMsg1(ACS_COMMAND_COMMIT_Run_Module_Program_mnc)), "", "-n")
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 PROMPT_FOR_EXPERT(MODULEDIR, ResourceMsg1(COMMAND_EXPORT_ModuleDirectory), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_ModuleDirectory);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_ModuleDirectory_mnc)))
                 ASK_FOR_EXPERT(DO_NOT_SHORTEN, ResourceMsg1(COMMAND_CHECKOUT_Do_Not_Shorten_Paths), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_CHECKOUT_Do_Not_Shorten_Paths);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Do_Not_Shorten_Paths_mnc)), "-N", "")
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
          </value>
	  <value if="IS_WINNT">LABEL(ResourceMsg1(COMMAND_EXPORT_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Label)))
                 PROMPT_FOR(DIRECTORY, ResourceMsg1(COMMAND_EXPORT_Directory), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Directory);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_Directory_mnc)),SELECTOR_DIR)
                 PROMPT_FOR(EXPORT_MODULE, ResourceMsg1(COMMAND_EXPORT_Module), ${MPATHS_\/},ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Module);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_Module_mnc)), SELECTOR_CMD_SELECTOR_MODULES)
                 PROMPT_FOR(TAG, ResourceMsg1(COMMAND_EXPORT_Tag), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_Tag_mnc)),IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR(DATE, ResourceMsg1(COMMAND_EXPORT_Date), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Date);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_Date_mnc)) ,SELECTOR_DATE_CVS)
                 ASK_FOR(FORCE_HEAD_MATCH, ResourceMsg1(COMMAND_Force_Head_Match), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Force_Head_Match);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Force_Head_Match_mnc)), "-f", "")
                 ASK_FOR_EXPERT(RUN_MODULE_PROGRAM, ResourceMsg1(COMMAND_COMMIT_Run_Module_Program), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMIT_Run_Module_Program);;MNEMONIC_ResourceMsg1(ACS_COMMAND_COMMIT_Run_Module_Program_mnc)), "", "-n")
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 PROMPT_FOR_EXPERT(MODULEDIR, ResourceMsg1(COMMAND_EXPORT_ModuleDirectory), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_ModuleDirectory);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EXPORT_ModuleDirectory_mnc)))
                 ASK_FOR_EXPERT(DO_NOT_SHORTEN, ResourceMsg1(COMMAND_CHECKOUT_Do_Not_Shorten_Paths), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EXPORT_Do_Not_Shorten_Paths);;MNEMONIC_ResourceMsg1(ACS_COMMAND_CHECKOUT_Do_Not_Shorten_Paths_mnc)), "-N", "")
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
          </value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
      </command>
      <separator />
      <command name="SUBMENU_EDITING" displayName="ResourceMsg1(CVS_SECTION_EDITING)" unless="BUILT-IN">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_SECTION_EDITING_Mnemonic)</value>
        </property>
	<command name="EDIT" displayName="ResourceMsg1(CVS_EDIT)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_EDIT_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>edit</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
	    <value>${RUNCDM} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} edit $[? IS_TEMP_WATCH] [-a ${TEMP_WATCH} ] []${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
	    <value>LABEL(ResourceMsg1(COMMAND_EDIT_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EDIT_Label)))
                   ASK_FOR_EXPERT(IS_TEMP_WATCH, ResourceMsg1(COMMAND_EDIT_IsTemporaryWatch), "false", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EDIT_IsTemporaryWatch);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EDIT_IsTemporaryWatch_mnc)), ENABLE(TEMP_WATCH))
                   SELECT_COMBO_EXPERT(TEMP_WATCH, ResourceMsg1(COMMAND_EDIT_TemporaryWatch), "edit", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EDIT_TemporaryWatch);;MNEMONIC_ResourceMsg1(ACS_COMMAND_EDIT_TemporaryWatch_mnc)),
                    [ResourceMsg1(COMMAND_EDIT_TemporaryWatch_edit), "edit"],
                    [ResourceMsg1(COMMAND_EDIT_TemporaryWatch_unedit), "unedit"],
                    [ResourceMsg1(COMMAND_EDIT_TemporaryWatch_commit), "commit"],
                    [ResourceMsg1(COMMAND_EDIT_TemporaryWatch_all), "all"],
                    [ResourceMsg1(COMMAND_EDIT_TemporaryWatch_none), "none"])
                   IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
            </value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
          <property name="notificationSuccessMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_EDITs_Success, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_EDIT_Success, ${FILE})]</value>
          </property>
          <property name="notificationFailMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_EDITs_Fail, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_EDIT_Fail, ${FILE})]</value>
          </property>
	</command>
	<command name="UNEDIT" displayName="ResourceMsg1(CVS_UNEDIT)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_UNEDIT_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>unedit</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
            <value>vcs.commands.CvsUnedit.class UNEDIT_TEST UNEDIT_CMD</value>
	    <value if="IS_WINDOWS">vcs.commands.CvsUnedit.class -fi UNEDIT_TEST UNEDIT_CMD</value>
	  </property>
  	  <property name="inputDescriptor">
	    <value>LABEL(ResourceMsg1(COMMAND_UNEDIT_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UNEDIT_Label)))
                   IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
            </value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
	</command>
	<command name="UNEDIT_TEST">
	  <property name="exec">
	    <value>${RUNCDM} echo n | ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} unedit ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
	</command>
	<command name="UNEDIT_CMD">
	  <property name="exec">
	    <value>${RUNCDM} echo ${CMD_INPUT} | ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} unedit ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	    <value if="IS_WINDOWS">${RUNCDM} type ${CMD_INPUT_FILE} | ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} unedit ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
          <property name="refreshCurrentFolder">
            <value>true</value>
          </property>
 	  <property name="checkForModifications">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
          <property name="notificationSuccessMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_UNEDITs_Success, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_UNEDIT_Success, ${FILE})]</value>
          </property>
          <property name="notificationFailMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_UNEDITs_Fail, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_UNEDIT_Fail, ${FILE})]</value>
          </property>
	</command>
	<command name="EDITORS" displayName="ResourceMsg1(CVS_EDITORS)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_EDITORS_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>editors</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
	    <value>${RUNCDM} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} editors ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
	    <value>LABEL(ResourceMsg1(COMMAND_EDITORS_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_EDITORS_Label)))
                   IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
            </value>
	  </property>
	  <property name="display">
	    <value>true</value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
	</command>
      </command>
      <command name="SUBMENU_WATCHES" displayName="ResourceMsg1(CVS_SECTION_WATCHES)" unless="BUILT-IN">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_SECTION_WATCHES_Mnemonic)</value>
        </property>
	<command name="WATCH_ON" displayName="ResourceMsg1(CVS_WATCH_ON)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_WATCH_ON_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>watch on</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
	    <value>${RUNCDM} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} watch on ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
	    <value>LABEL(ResourceMsg1(COMMAND_WATCH_ON_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_ON_Label)))
                   IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
            </value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
          <property name="notificationSuccessMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_WATCH_ONs_Success, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_WATCH_ON_Success, ${FILE})]</value>
          </property>
          <property name="notificationFailMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_WATCH_ONs_Fail, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_WATCH_ON_Fail, ${FILE})]</value>
          </property>
	</command>
	<command name="WATCH_OFF" displayName="ResourceMsg1(CVS_WATCH_OFF)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_WATCH_OFF_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>watch off</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
	    <value>${RUNCDM} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} watch off ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
	    <value>LABEL(ResourceMsg1(COMMAND_WATCH_OFF_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_OFF_Label)))
                   IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
            </value>
	  </property>
	  <property name="input">
	    <value></value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
          <property name="notificationSuccessMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_WATCH_OFFs_Success, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_WATCH_OFF_Success, ${FILE})]</value>
          </property>
          <property name="notificationFailMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_WATCH_OFFs_Fail, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_WATCH_OFF_Fail, ${FILE})]</value>
          </property>
	</command>
	<command name="WATCH_ADD" displayName="ResourceMsg1(CVS_WATCH_SET)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_WATCH_SET_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>watch add</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
            <value>${RUNCDW} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} watch remove -a all $[? FILE] [${QFILE}] []&amp;&amp; ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} watch add -a none $[? IS_EDIT] [-a edit] [] $[? IS_UNEDIT] [-a unedit] [] $[? IS_COMMIT] [-a commit] [] $[? FILE] [${QFILE}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
 	    <value>LABEL(ResourceMsg1(COMMAND_WATCH_SET_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_SET_Label)))
                   ASK_FOR(IS_EDIT, ResourceMsg1(COMMAND_WATCH_SET_edit), {INSERT_OUTPUT_OF_WATCH_ACTION_STATUS(0)},ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_SET_edit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_WATCH_SET_edit_mnc)))
                   ASK_FOR(IS_UNEDIT, ResourceMsg1(COMMAND_WATCH_SET_unedit), {INSERT_OUTPUT_OF_WATCH_ACTION_STATUS(1)},ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_SET_unedit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_WATCH_SET_unedit_mnc)))
                   ASK_FOR(IS_COMMIT, ResourceMsg1(COMMAND_WATCH_SET_commit), {INSERT_OUTPUT_OF_WATCH_ACTION_STATUS(2)},ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_SET_commit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_WATCH_SET_commit_mnc)))</value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onDir">
	    <value>false</value>
	  </property>
	  <property name="onRoot">
	    <value>false</value>
	  </property>
          <property name="concurrentExec">
            <value>2</value>
          </property>
	</command>
	<command name="WATCH_ADD_DIR" displayName="ResourceMsg1(CVS_WATCH_SET)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_WATCH_SET_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>watch add</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
            <value>${RUNCDW} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} watch remove -a all ${RECURSION} $[? FILE] [${QFILE}] []&amp;&amp; ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} watch add -a none $[? IS_EDIT] [-a edit] [] $[? IS_UNEDIT] [-a unedit] [] $[? IS_COMMIT] [-a commit] [] ${RECURSION} $[? FILE] [${QFILE}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
 	    <value>LABEL(ResourceMsg1(COMMAND_WATCH_SET_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_SET_Label)))
                    ASK_FOR(IS_EDIT, ResourceMsg1(COMMAND_WATCH_SET_edit), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_SET_edit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_WATCH_SET_edit_mnc))) 
                    ASK_FOR(IS_UNEDIT, ResourceMsg1(COMMAND_WATCH_SET_unedit), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_SET_unedit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_WATCH_SET_unedit_mnc)))
                    ASK_FOR(IS_COMMIT, ResourceMsg1(COMMAND_WATCH_SET_commit), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCH_SET_commit);;MNEMONIC_ResourceMsg1(ACS_COMMAND_WATCH_SET_commit_mnc)))
                    ASK_FOR(RECURSION, ResourceMsg1(COMMAND_Recursive), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
            </value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onFile">
	    <value>false</value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
	</command>
	<command name="WATCHERS" displayName="ResourceMsg1(CVS_WATCHERS)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_WATCHERS_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>watchers</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
	    <value>${RUNCDM} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} watchers ${RECURSIVE} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
	    <value>LABEL(ResourceMsg1(COMMAND_WATCHERS_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_WATCHERS_Label)))
                   IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
            </value>
	  </property>
	  <property name="display">
	    <value>true</value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
	</command>
      </command>
      <separator/>
      <command name="SUBMENU_LOCKING" displayName="ResourceMsg1(CVS_SECTION_LOCKING)" unless="BUILT-IN">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_SECTION_LOCKING_Mnemonic)</value>
        </property>
        <command name="LOCK1" displayName="ResourceMsg1(CVS_LOCK)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_LOCK_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>admin -l</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
          <property name="exec">
	    <value>${RUNCDM} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} admin -l${REVISION} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
 	    <value>LABEL(ResourceMsg1(COMMAND_LOCK_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOCK_Label)))
                    PROMPT_FOR_EXPERT(REVISION, ResourceMsg1(COMMAND_LOCK_Revision), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_LOCK_Revision);;MNEMONIC_ResourceMsg1(ACS_COMMAND_LOCK_Revision_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)</value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
          <property name="notificationSuccessMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_LOCKs_Success, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_LOCK_Success, ${FILE})]</value>
          </property>
          <property name="notificationFailMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_LOCKs_Fail, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_LOCK_Fail, ${FILE})]</value>
          </property>
        </command>
        <command name="UNLOCK1" displayName="ResourceMsg1(CVS_UNLOCK)">
          <property name="labelMnemonic">
            <value>ResourceMsg1(CVS_UNLOCK_Mnemonic)</value>
          </property>
  	  <property name="advancedName">
	    <value>admin -u</value>
	  </property>
	  <property name="supportsAdvancedMode">
	    <value>true</value>
	  </property>
	  <property name="exec">
	    <value>${RUNCDM} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} admin -u${REVISION} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	  </property>
  	  <property name="inputDescriptor">
 	    <value>LABEL(ResourceMsg1(COMMAND_UNLOCK_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UNLOCK_Label)))
                    PROMPT_FOR_EXPERT(REVISION, ResourceMsg1(COMMAND_UNLOCK_Revision), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_UNLOCK_Revision);;MNEMONIC_ResourceMsg1(ACS_COMMAND_UNLOCK_Revision_mnc)), IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)</value>
	  </property>
	  <property name="data.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="error.regex">
	    <value>$ ^</value>
	  </property>
	  <property name="onRoot">
	    <value>true</value>
	  </property>
          <property name="runOnMultipleFiles">
            <value>true</value>
          </property>
          <property name="notificationSuccessMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_UNLOCKs_Success, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_UNLOCK_Success, ${FILE})]</value>
          </property>
          <property name="notificationFailMsg">
            <value>$[? MULTIPLE_FILES] [ResourceMsg1(NOTIFICATION_UNLOCKs_Fail, ${NUM_FILES})] [ResourceMsg1(NOTIFICATION_UNLOCK_Fail, ${FILE})]</value>
          </property>
        </command>
      </command>
      <separator/>
      <command name="SUBMENU_TAGGING" displayName="ResourceMsg1(CVS_SECTION_BRANCHING_AND_TAGGING)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_SECTION_BRANCHING_AND_TAGGING_Mnemonic)</value>
        </property>
      <command name="TAGS" displayName="ResourceMsg1(CVS_ADD_TAG)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_ADD_TAG_Mnemonic)</value>
        </property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
          <value>${EXECUTE} ${USER_GLOBAL_PARAM} ${TAG_TYPE} ${BRANCH_TAG} $[? DATE] [-D ${DATE}] [] $[? REVISION] [-r ${REVISION}] [] ${FORCE_HEAD} ${MOVE_IF_EXISTS} ${CHECK_FOR_MODIFIED} ${CLEAR_REMOVED} ${NO_TAG_PRG} ${RECURSIVE} ${TAG_NAME} ${QUOTE}${MODPATH}${QUOTE} ${NUR}</value>
	</property>
  	<property name="inputDescriptor">
 	  <value>LABEL(ResourceMsg1(COMMAND_ADD_TAG_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_Label)))
                 PROMPT_FOR(TAG_NAME, ResourceMsg1(COMMAND_ADD_TAG_Tag_Name), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_Tag_Name);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_Tag_Name_mnc)))
                 ASK_FOR(TAG_TYPE, ResourceMsg1(COMMAND_ADD_TAG_Repository_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_Repository_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_Repository_Tag_mnc)), "rtag", "tag", ENABLE(CLEAR_REMOVED, NO_TAG_PRG), DISABLE(CHECK_FOR_MODIFIED))
                 ASK_FOR(BRANCH_TAG, ResourceMsg1(COMMAND_ADD_TAG_Branch_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_Branch_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_Branch_Tag_mnc)) ,"-b", "")
                 PROMPT_FOR(DATE, ResourceMsg1(COMMAND_ADD_TAG_Date), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMAND_ADD_TAG_Date);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_Date_mnc)))
                 PROMPT_FOR(REVISION, ResourceMsg1(COMMAND_ADD_TAG_On_Revision), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_COMMAND_ADD_TAG_On_Revision);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_On_Revision_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS) 
                 ASK_FOR_EXPERT(FORCE_HEAD, ResourceMsg1(COMMAND_ADD_TAG_ForceHead), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Force_Head_Match);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_ForceHead_mnc)), "-f", "")
                 ASK_FOR_EXPERT(MOVE_IF_EXISTS, ResourceMsg1(COMMAND_ADD_TAG_MoveIfExists), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_MoveIfExists);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_MoveIfExists_mnc)), "-F", "")
                 ASK_FOR_EXPERT(CHECK_FOR_MODIFIED, ResourceMsg1(COMMAND_ADD_TAG_CheckForModified), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_CheckForModified);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_CheckForModified_mnc)), "-c", "")
                 ASK_FOR_EXPERT(CLEAR_REMOVED, ResourceMsg1(COMMAND_ADD_TAG_ClearRemoved), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_ClearRemoved);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_ClearRemoved_mnc)), "-a", "")
                 ASK_FOR_EXPERT(NO_TAG_PRG, ResourceMsg1(COMMAND_ADD_TAG_NoTagPrg), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_NoTagPrg);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_NoTagPrg_mnc)), "-n", "")
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR_EXPERT(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)), "-R", "-l")
          </value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="changingNumRevisions">
	  <value>true</value>
	</property>
        <property name="concurrentExec">
          <value>10</value>
        </property>
        <property name="notificationSuccessMsg">
          <value>$[? BRANCH_TAG] [ResourceMsg1(NOTIFICATION_ADD_BRANCH_Success, ${TAG_NAME})] [ResourceMsg1(NOTIFICATION_ADD_TAG_Success, ${TAG_NAME})]</value>
	</property>
        <property name="notificationFailMsg">
          <value>$[? BRANCH_TAG] [ResourceMsg1(NOTIFICATION_ADD_BRANCH_Fail, ${TAG_NAME})] [ResourceMsg1(NOTIFICATION_ADD_TAG_Fail, ${TAG_NAME})]</value>
	</property>
      </command>
      <command name="REMOVE_TAG" displayName="ResourceMsg1(CVS_REMOVE_TAG)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_REMOVE_TAG_Mnemonic)</value>
        </property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
          <value>${EXECUTE} ${USER_GLOBAL_PARAM} ${TAG_TYPE} -d ${TAG_NAME} ${QUOTE}${MODPATH}${QUOTE} ${NUR}</value>
	</property>
  	<property name="inputDescriptor">
 	  <value>LABEL(ResourceMsg1(COMMAND_REMOVE_TAG_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_REMOVE_TAG_Label)))
                 ASK_FOR(TAG_TYPE, ResourceMsg1(COMMAND_ADD_TAG_Repository_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_Repository_Tag);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_Repository_Tag_mnc)), "rtag", "tag")
                 PROMPT_FOR(TAG_NAME, ResourceMsg1(COMMAND_ADD_TAG_Tag_Name), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_ADD_TAG_Tag_Name);;MNEMONIC_ResourceMsg1(ACS_COMMAND_ADD_TAG_Tag_Name_mnc)),IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
          </value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="changingNumRevisions">
	  <value>true</value>
	</property>
        <property name="concurrentExec">
          <value>10</value>
        </property>
        <property name="notificationSuccessMsg">
          <value>ResourceMsg1(NOTIFICATION_REMOVE_TAG_Success, ${TAG_NAME})</value>
	</property>
        <property name="notificationFailMsg">
          <value>ResourceMsg1(NOTIFICATION_REMOVE_TAG_Fail, ${TAG_NAME})</value>
	</property>
      </command>
      <command name="BRANCHES" displayName="ResourceMsg1(CVS_VIEW_BRANCHES)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_VIEW_BRANCHES_Mnemonic)</value>
        </property>
	<property name="exec">
	  <value>vcs.commands.CvsBranches.class LOG_INFO_CMD CHECKOUT_CMD DIFF_CMD</value>
	</property>
	<property name="onDir">
	  <value>false</value>
	</property>
	<property name="onRoot">
	  <value>false</value>
	</property>
	<property name="data.regex">
	  <!-- <value>(^[0-9]+(,[0-9]+|)[d][0-9]+$)|(^[0-9]+(,[0-9]+|)[c][0-9]+(,[0-9]+|)$)|(^[0-9]+[a][0-9]+(,[0-9]+|)$)</value> -->
	  <value>^(.*$)</value>
	</property>
      </command>
      </command>
      <separator />
      <command name="DIFF" displayName="ResourceMsg1(CVS_DIFF_GRAPHICAL)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_DIFF_GRAPHICAL_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>diff</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>vcs.commands.Diff.class 0 CHECKOUT_CMD DIFF_USR_CMD</value>
	</property>
  	<property name="inputDescriptor">
 	  <value>LABEL(ResourceMsg1(COMMAND_DIFF_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Label)))
                 PROMPT_FOR_EXPERT(TAG1, ResourceMsg1(COMMAND_DIFF_Tag1), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Tag1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Tag1_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR_EXPERT(TAG2, ResourceMsg1(COMMAND_DIFF_Tag2), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Tag2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Tag2_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR_EXPERT(DATE1, ResourceMsg1(COMMAND_DIFF_Date1), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Date1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Date1_mnc)), SELECTOR_DATE_CVS)
                 PROMPT_FOR_EXPERT(DATE2, ResourceMsg1(COMMAND_DIFF_Date2), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Date2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Date2_mnc)), SELECTOR_DATE_CVS)
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 ASK_FOR_EXPERT(IGNORE_WHITE, ResourceMsg1(COMMAND_DIFF_IgnoreWhite), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreWhite);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreWhite_mnc)) ,"-w", "")
                 ASK_FOR_EXPERT(IGNORE_SPACE, ResourceMsg1(COMMAND_DIFF_IgnoreSpace), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreSpace);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreSpace_mnc)) ,"-b", "")
                 ASK_FOR_EXPERT(IGNORE_CASE, ResourceMsg1(COMMAND_DIFF_IgnoreCase), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreCase);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreCase_mnc)) ,"-i", "")
                 PROMPT_FOR_EXPERT(ADDITIONAL_OPTIONS, ResourceMsg1(COMMAND_DIFF_AdditionalOptions), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_AdditionalOptions);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_AdditionalOptions_mnc)), VALIDATOR_REGEXP_UNMATCH(^.*-c.*$|^.*-u.*$))
          </value>
	</property>
	<property name="onDir">
	  <value>false</value>
	</property>
	<property name="onRoot">
	  <value>false</value>
	</property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.actions.DiffCommandAction</value>
        </property>
        <property name="generalCommandActionDisplayName">
          <value>ResourceMsg1(CVS_GENERAL_ACTION_DIFF)</value>
        </property>
      </command>
      <command name="DIFF_TEXT" displayName="ResourceMsg1(CVS_DIFF_TEXTUAL)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_DIFF_TEXTUAL_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>diff</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${CDM_EXECUTE} ${USER_GLOBAL_PARAM} diff $[? DATE1] [-D ${QUOTE}${DATE1}${QUOTE}] [] $[? DATE2] [-D ${QUOTE}${DATE2}${QUOTE}] [] $[? TAG1] [-r ${TAG1}] [] $[? TAG2] [-r ${TAG2}] [] ${RCS_KFLAG} ${IGNORE_WHITE} ${IGNORE_SPACE} ${IGNORE_CASE} ${ADDITIONAL_OPTIONS} ${OUTPUT_FORMAT} $[? PATHS] [${QPATHS}] [] ${NUR}</value>
	</property>
  	<property name="inputDescriptor">
 	  <value>LABEL(ResourceMsg1(COMMAND_DIFF_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Label)))
                 PROMPT_FOR_EXPERT(TAG1, ResourceMsg1(COMMAND_DIFF_Tag1), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Tag1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Tag1_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR_EXPERT(TAG2, ResourceMsg1(COMMAND_DIFF_Tag2), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Tag2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Tag2_mnc)),IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR_EXPERT(DATE1, ResourceMsg1(COMMAND_DIFF_Date1), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Date1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Date1_mnc)) ,SELECTOR_DATE_CVS)
                 PROMPT_FOR_EXPERT(DATE2, ResourceMsg1(COMMAND_DIFF_Date2), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Date2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Date2_mnc)), SELECTOR_DATE_CVS)
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 ASK_FOR_EXPERT(IGNORE_WHITE, ResourceMsg1(COMMAND_DIFF_IgnoreWhite), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreWhite);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreWhite_mnc)), "-w", "")
                 ASK_FOR_EXPERT(IGNORE_SPACE, ResourceMsg1(COMMAND_DIFF_IgnoreSpace), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreSpace);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreSpace_mnc)), "-b", "")
                 ASK_FOR_EXPERT(IGNORE_CASE, ResourceMsg1(COMMAND_DIFF_IgnoreCase), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreCase);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreCase_mnc)), "-i", "")
                 PROMPT_FOR_EXPERT(ADDITIONAL_OPTIONS, ResourceMsg1(COMMAND_DIFF_AdditionalOptions), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_AdditionalOptions);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_AdditionalOptions_mnc)))
                 SELECT_RADIO_EXPERT(OUTPUT_FORMAT, "", "", [ResourceMsg1(COMMAND_DIFF_Default), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Default);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Default_mnc))], [ResourceMsg1(COMMAND_PATCH_Context), "-c",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Context);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Context_mnc))], [ResourceMsg1(COMMAND_PATCH_Unidiff), "-u",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Unidiff);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Unidiff_mnc))])
          </value>
	</property>
        <property name="display">
	  <value>true</value>
	</property>
        <property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
	<property name="ignoreFail">
	  <value>true</value>
	</property>
      </command>
      <command name="DIFF_TEXT_FOLDER_ACTION">
	<property name="advancedName">
	  <value>diff</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${RUNCDW} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} diff $[? DATE1] [-D ${QUOTE}${DATE1}${QUOTE}] [] $[? DATE2] [-D ${QUOTE}${DATE2}${QUOTE}] [] $[? TAG1] [-r ${TAG1}] [] $[? TAG2] [-r ${TAG2}] [] ${RCS_KFLAG} ${IGNORE_WHITE} ${IGNORE_SPACE} ${IGNORE_CASE} ${ADDITIONAL_OPTIONS} ${OUTPUT_FORMAT} ${QFILE} ${NUR}</value>
	</property>
  	<property name="inputDescriptor">
 	  <value>LABEL(ResourceMsg1(COMMAND_DIFF_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Label)))
                 PROMPT_FOR_EXPERT(TAG1, ResourceMsg1(COMMAND_DIFF_Tag1), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Tag1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Tag1_mnc)) ,IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR_EXPERT(TAG2, ResourceMsg1(COMMAND_DIFF_Tag2), "", ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Tag2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Tag2_mnc)),IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)
                 PROMPT_FOR_EXPERT(DATE1, ResourceMsg1(COMMAND_DIFF_Date1), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Date1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Date1_mnc)) ,SELECTOR_DATE_CVS)
                 PROMPT_FOR_EXPERT(DATE2, ResourceMsg1(COMMAND_DIFF_Date2), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Date2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Date2_mnc)), SELECTOR_DATE_CVS)
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg1(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg1(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg1(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg1(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg1(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 ASK_FOR_EXPERT(IGNORE_WHITE, ResourceMsg1(COMMAND_DIFF_IgnoreWhite), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreWhite);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreWhite_mnc)), "-w", "")
                 ASK_FOR_EXPERT(IGNORE_SPACE, ResourceMsg1(COMMAND_DIFF_IgnoreSpace), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreSpace);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreSpace_mnc)), "-b", "")
                 ASK_FOR_EXPERT(IGNORE_CASE, ResourceMsg1(COMMAND_DIFF_IgnoreCase), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_IgnoreCase);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_IgnoreCase_mnc)), "-i", "")
                 PROMPT_FOR_EXPERT(ADDITIONAL_OPTIONS, ResourceMsg1(COMMAND_DIFF_AdditionalOptions), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_AdditionalOptions);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_AdditionalOptions_mnc)))
                 SELECT_RADIO_EXPERT(OUTPUT_FORMAT, "", "", [ResourceMsg1(COMMAND_DIFF_Default), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_DIFF_Default);;MNEMONIC_ResourceMsg1(ACS_COMMAND_DIFF_Default_mnc))], [ResourceMsg1(COMMAND_PATCH_Context), "-c",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Context);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Context_mnc))], [ResourceMsg1(COMMAND_PATCH_Unidiff), "-u",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Unidiff);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Unidiff_mnc))])
          </value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
        <property name="display">
	  <value>true</value>
	</property>
        <property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="ignoreFail">
	  <value>true</value>
	</property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.actions.DiffCommandAction</value>
        </property>
        <property name="generalCommandActionDisplayName">
          <value>ResourceMsg1(CVS_GENERAL_ACTION_DIFF)</value>
        </property>
      </command>
      <command name="PATCH" displayName="ResourceMsg1(CVS_PATCH)" unless="BUILT-IN">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_PATCH_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>rdiff</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>${RUN} ${CVS_DEF_EXE} ${USER_GLOBAL_PARAM} patch ${OUTPUT_FORMAT} $[? REV1_DATE1] [$[? REV1_DATE1 - REVISION_OPERATION_IDENT] [${REV1_DATE1}] [$[? REVISION1] [-r ${REVISION1}] [] $[? REV2_DATE2] [$[? REV2_DATE2 - REVISION_OPERATION_IDENT] [-r HEAD] [$[? REVISION2] [-r ${REVISION2}] []]] [$[? DATE2] [-D ${QUOTE}${DATE2}${QUOTE}] []]]] [$[? DATE1] [-D ${QUOTE}${DATE1}${QUOTE}] [] $[? REV2_DATE2] [$[? REV2_DATE2 - REVISION_OPERATION_IDENT] [-r HEAD] [$[? REVISION2] [-r ${REVISION2}] []]] [$[? DATE2] [-D ${QUOTE}${DATE2}${QUOTE}] []]] ${FORCE_HEAD_MATCH} ${RECURSIVE} ${QUOTE}${MODPATH}${QUOTE} ${NUR}</value>
	</property>
  	<property name="inputDescriptor">
 	  <value>LABEL(ResourceMsg1(COMMAND_PATCH_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Label)))
                 SELECT_RADIO(OUTPUT_FORMAT, ResourceMsg1(COMMAND_PATCH_Output_Format), "-c",
                  [ResourceMsg1(COMMAND_PATCH_Context), "-c",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Context);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Context_mnc))],
                  [ResourceMsg1(COMMAND_PATCH_Unidiff), "-u",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Unidiff);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Unidiff_mnc))],
                  [ResourceMsg1(COMMAND_PATCH_Short), "-s",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Short);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Short_mnc))])
                 SELECT_RADIO(REV1_DATE1, "ResourceMsg1(COMMAND_PATCH_WhichRevisions)", "-t",
                  [ResourceMsg1(COMMAND_PATCH_Top_Two), "-t",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Top_Two);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Top_Two_mnc)), DISABLE(REV2_DATE2)],
                  [ResourceMsg1(COMMAND_PATCH_Revision1), "R",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Revision1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Revision1_mnc)),  PROMPT_FOR(REVISION1, "", "", IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)],
                  [ResourceMsg1(COMMAND_PATCH_Date1), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Date1);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Date1_mnc)) , PROMPT_FOR(DATE1, "", "", SELECTOR_DATE_CVS)])
                 SELECT_RADIO(REV2_DATE2, ResourceMsg1(COMMAND_PATCH_Rev2_Date2), "H",
                  [ResourceMsg1(COMMAND_PATCH_With_HEAD), "H",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_With_HEAD);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_With_HEAD_mnc))],
                  [ResourceMsg1(COMMAND_PATCH_Revision2), "R",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Revision2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Revision2_mnc)) , PROMPT_FOR(REVISION2, "", "", IF_VAR_EMPTY"FILES_IS_FOLDER"_SELECTOR_CMD_SELECTOR_REVISIONS)],
                  [ResourceMsg1(COMMAND_PATCH_Date2), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_PATCH_Date2);;MNEMONIC_ResourceMsg1(ACS_COMMAND_PATCH_Date2_mnc)),  PROMPT_FOR(DATE2, "", "", SELECTOR_DATE_CVS)])
                 ASK_FOR(FORCE_HEAD_MATCH, ResourceMsg1(COMMAND_Force_Head_Match), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Force_Head_Match);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Force_Head_Match_mnc)) ,"-f", "") 
                 IF_VAR_NON_EMPTY"FILES_IS_FOLDER"_ASK_FOR(RECURSIVE, ResourceMsg1(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg1(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg1(ACS_COMMAND_Recursive_mnc)) ,"-R", "-l")
          </value>
	</property>
        <property name="display">
	  <value>true</value>
	</property>
        <property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="ignoreFail">
	  <value>true</value>
	</property>
      </command>
      <separator />
      <command name="LIST_MODULES" displayName="ResourceMsg1(CVS_LIST_MODULES)" if="BUILT-IN">
        <property name="exec">
          <value>vcs.commands.CvsModuleSelector.class CHECKOUT_MODULES_S_CMD CHECKOUT_MODULES_C_CMD</value>
          </property>
        <property name="executionPriority">
          <value>1</value> <!-- HIGH PRIORITY -->
        </property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
      </command>
      <separator />
      <command name="LOGIN" displayName="ResourceMsg1(CVS_LOGIN, ${CVS_SERVER})" >
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_LOGIN_Mnemonic)</value>
        </property>
	<property name="exec">
	  <value>vcs.commands.CvsLogin.class</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="hiddenTestExpression">
          <value>$[? SERVERTYPE-PSERVER_VALUE] [Hide Me] [$[? CVS_SERVER] [] [Hide Me]]</value>
        </property>
      </command>
      <command name="DO_LOGIN">
	<property name="exec">
	  <value>vcs.commands.CvsLoginCheck.class</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
      </command>
      <command name="LOGOUT_INT" displayName="ResourceMsg1(CVS_LOGOUT, ${CVS_SERVER})" if="BUILT-IN">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_LOGOUT_Mnemonic)</value>
        </property>
	<property name="exec">
	  <value>vcs.commands.CvsLogout.class</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="hiddenTestExpression">
          <value>$[? SERVERTYPE-PSERVER_VALUE] [Hide Me] [$[? CVS_SERVER] [] [Hide Me]]</value>
        </property>
      </command>           
      <command name="LOGOUT" displayName="ResourceMsg1(CVS_LOGOUT, ${CVS_SERVER})" unless="BUILT-IN">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_LOGOUT_Mnemonic)</value>
        </property>
	<property name="exec">
	  <value>${EXECUTE} logout ${NUR}</value>      
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="hiddenTestExpression">
          <value>$[? SERVERTYPE-PSERVER_VALUE] [Hide Me] [$[? CVS_SERVER] [] [Hide Me]]</value>
        </property>
      </command>      
      <command name="CHECKOUT_CMD">
	<property name="exec">
          <value>${CDW_EXECUTE} -f update ${RCS_KFLAG} -p $[? REVISION] [-r ${REVISION}] [] ${QFILE} &gt; ${QUOTE}${TEMPDIR}${PS}${FILE}${QUOTE} ${NUR}</value>
	</property>
      </command>
      <command name="DIFF_USR_CMD">
	<property name="exec">
          <value>${CDW_EXECUTE} ${USER_GLOBAL_PARAM} diff $[? DATE1] [-D ${QUOTE}${DATE1}${QUOTE}] [] $[? DATE2] [-D ${QUOTE}${DATE2}${QUOTE}] [] $[? TAG1] [-r ${TAG1}] [] $[? TAG2] [-r ${TAG2}] [] ${RCS_KFLAG} ${IGNORE_WHITE} ${IGNORE_SPACE} ${IGNORE_CASE} ${ADDITIONAL_OPTIONS} ${QFILE} ${NUR}</value>
	</property>
	<property name="data.regex">
          <value>(^[0-9]+(,[0-9]+|)[d][0-9]+$)|(^[0-9]+(,[0-9]+|)[c][0-9]+(,[0-9]+|)$)|(^[0-9]+[a][0-9]+(,[0-9]+|)$)|(^&lt; .*$)|(^&gt; .*$)|(^---$)|(^retrieving revision.*)</value>
	</property>
	<property name="error.regex">
	  <value>(.*$)</value>
	</property>
	<property name="ignoreFail">
	  <value>true</value>
	</property>
      </command>
      <command name="DIFF_CMD">
	<property name="exec">
          <value>${CDW_EXECUTE} -f diff $[? REVISION1] [-r ${REVISION1}] [] $[? REVISION2] [-r ${REVISION2}] [] ${QFILE} ${NUR}</value>
	</property>
	<property name="data.regex">
	  <value>(^[0-9]+(,[0-9]+|)[d][0-9]+$)|(^[0-9]+(,[0-9]+|)[c][0-9]+(,[0-9]+|)$)|(^[0-9]+[a][0-9]+(,[0-9]+|)$)|(^&lt; .*$)|(^&gt; .*$)|(^---$)</value>
	</property>
	<property name="error.regex">
	  <value>(.*$)</value>
	</property>
	<property name="ignoreFail">
	  <value>true</value>
	</property>
      </command>
      <command name="LOG_INFO_CMD">
	<property name="exec">
          <value>${CDW_EXECUTE} -f log $[? FILE] [${QFILE}] [] ${NUR}</value>
	</property>
      </command>
      <command name="SELECTOR_REVISIONS">
        <property name="exec">
          <value>vcs.commands.CvsRevisionSelector.class "getBundle(org/netbeans/modules/vcs/profiles/cvsprofiles/config/Bundle).getString(TITLE_CVS_SELECTOR_REVISION)" LOG_INFO_CMD</value>
	</property>
        <property name="executionPriority">
          <value>1</value> <!-- HIGH PRIORITY -->
        </property>
      </command>
      <command name="SELECTOR_BRANCHES">
        <property name="exec">
          <value>vcs.commands.CvsRevisionSelector.class -b "getBundle(org/netbeans/modules/vcs/profiles/cvsprofiles/config/Bundle).getString(TITLE_CVS_SELECTOR_BRANCH)" LOG_INFO_CMD</value>
	</property>
        <property name="executionPriority">
          <value>1</value> <!-- HIGH PRIORITY -->
        </property>
      </command>
      <command name="SELECTOR_MODULES">
        <property name="exec">
          <value>vcs.commands.CvsModuleSelector.class CHECKOUT_MODULES_S_CMD CHECKOUT_MODULES_C_CMD</value>
	</property>
        <property name="executionPriority">
          <value>1</value> <!-- HIGH PRIORITY -->
        </property>
      </command>
      <command name="CHECKOUT_MODULES_S_CMD">
        <property name="exec">
          <value>${EXECUTE} -f checkout -s ${NUR}</value>          
	</property>
      </command>
      <command name="CHECKOUT_MODULES_C_CMD">
        <property name="exec">
          <value>${EXECUTE} -f checkout -c ${NUR}</value>          
	</property>
      </command>
      <command name="WATCH_ACTION_STATUS">
        <property name="exec">
          <value>vcs.commands.CvsWatchStatus.class WATCHERS_LIST</value>
	</property>
      </command>
      <command name="WATCHERS_LIST">
        <property name="exec">
	    <value>${RUNCDW} ${CVS_DEF_EXE} -f watchers $[? FILE] [${QFILE}] [] ${NUR}</value>
	</property>
      </command>

    </command> <!-- CVS popup -->

    <command name="RESOLVE_CONFLICTS" displayName="ResourceMsg1(CVS_RESOLVE_CONFLICTS)">
        <property name="labelMnemonic">
          <value>ResourceMsg1(CVS_RESOLVE_CONFLICTS_Mnemonic)</value>
        </property>
        <property name="exec">
            <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.CvsResolveConflicts.class</value>
	</property>
        <property name="onFile">
            <value>true</value>
        </property>
        <property name="onDir">
            <value>false</value>
        </property>
        <property name="onRoot">
            <value>false</value>
        </property>
        <property name="disabledOnStatus">
            <value>"Up-to-date", "Local", "Locally Added", "Locally Modified", "Locally Removed", "Needs Checkout", "Needs Patch", "Needs Merge", "Ignored", "Dead"</value>
	</property>
    </command>

    <!--
    <command name="REVISION_VIEW" displayName="ResourceMsg1(CVS_REVISION_EXPLORER)">
      <property name="exec">
        <value>vcs.commands.CvsRevisionExplorer.class REVISION_GETTER</value>
      </property>
      <property name="onFile">
	<value>true</value>
      </property>
      <property name="onDir">
	<value>false</value>
      </property>
      <property name="onRoot">
	<value>false</value>
      </property>
    </command>
    -->
    <command name="REVISION_GETTER">
      <property name="exec">
        <value>${CDW_EXECUTE} -f log $[? FILE] [${QFILE}] [] ${NUR}</value>
      </property>
    </command>
    <command name="REVISION_UPDATE" displayName="ResourceMsg1(CVS_UPDATE)">
      <property name="labelMnemonic">
        <value>ResourceMsg1(CVS_UPDATE_Mnemonic)</value>
      </property>
      <property name="exec">
        <value>${CDW_EXECUTE} ${USER_GLOBAL_PARAM} update -r $[? BRANCH] [${BRANCH}] [${REVISION}] ${UPDATE_OPTIONS} $[? FILE] [${QFILE}] [] ${NUR}</value>
      </property>
      <property name="inputDescriptor">
 	<value>LABEL(ResourceMsg1(COMMAND_REVISION_UPDATE_Label))
               PROMPT_FOR_EXPERT(UPDATE_OPTIONS, ResourceMsg1(COMMAND_REVISION_UPDATE_Options), "")
        </value>
      </property>
      <property name="refreshCurrentFolder">
        <value>true</value>
      </property>
      <property name="checkForModifications">
	<value>true</value>
      </property>
      <property name="numRevisions">
	<value>1</value>
      </property>
    </command>
    <command name="REVISION_MERGE" displayName="ResourceMsg1(CVS_MERGE_WITH_REVISION)">
      <property name="labelMnemonic">
        <value>ResourceMsg1(CVS_MERGE_WITH_REVISION_Mnemonic)</value>
      </property>
      <property name="exec">
        <value>${CDW_EXECUTE} ${USER_GLOBAL_PARAM} update -j ${REVISION1} $[? REVISION2] [-j ${REVISION2}] [] ${MERGE_OPTIONS} $[? FILE] [${QFILE}] [] ${NUR}</value>
      </property>
      <property name="inputDescriptor">
 	<value>LABEL(ResourceMsg1(COMMAND_REVISION_MERGE_Label))
               PROMPT_FOR_EXPERT(MERGE_OPTIONS, ResourceMsg1(COMMAND_REVISION_MERGE_Options), "")
        </value>
      </property>
      <property name="refreshCurrentFolder">
        <value>true</value>
      </property>
      <property name="checkForModifications">
	<value>true</value>
      </property>
      <property name="numRevisions">
	<value>1</value>
      </property>
    </command>
    <command name="REVISION_MERGE2" displayName="ResourceMsg1(CVS_MERGE_WITH_REVISION_DIFF)">
      <property name="labelMnemonic">
        <value>ResourceMsg1(CVS_MERGE_WITH_REVISION_DIFF_Mnemonic)</value>
      </property>
      <property name="exec">
        <value>${CDW_EXECUTE} ${USER_GLOBAL_PARAM} update -j ${REVISION1} $[? REVISION2] [-j ${REVISION2}] [] ${MERGE_OPTIONS} $[? FILE] [${QFILE}] [] ${NUR}</value>
      </property>
      <property name="inputDescriptor">
 	<value>LABEL(ResourceMsg1(COMMAND_REVISION_MERGE_Label))
               PROMPT_FOR_EXPERT(MERGE_OPTIONS, ResourceMsg1(COMMAND_REVISION_MERGE_Options), "")
        </value>
      </property>
      <property name="refreshCurrentFolder">
        <value>true</value>
      </property>
      <property name="checkForModifications">
	<value>true</value>
      </property>
      <property name="numRevisions">
	<value>2</value>
      </property>
    </command>
    <command name="REVISION_DIFF" displayName="ResourceMsg1(CVS_DIFF_GRAPHICAL)">
      <property name="labelMnemonic">
        <value>ResourceMsg1(CVS_DIFF_GRAPHICAL_Mnemonic)</value>
      </property>
      <property name="exec">
        <value>vcs.commands.Diff.class ${REVISION1} 0 CHECKOUT_CMD DIFF_CMD</value>
      </property>
      <property name="numRevisions">
	<value>1</value>
      </property>
    </command>
    <command name="REVISION_DIFF2" displayName="ResourceMsg1(CVS_DIFF_GRAPHICAL)">
      <property name="labelMnemonic">
        <value>ResourceMsg1(CVS_DIFF_GRAPHICAL_Mnemonic)</value>
      </property>
      <property name="exec">
        <value>vcs.commands.Diff.class ${REVISION1} ${REVISION2} 0 CHECKOUT_CMD DIFF_CMD</value>
      </property>
      <property name="numRevisions">
	<value>2</value>
      </property>
    </command>
    <command name="REVISION_OPEN">
      <property name="exec">
        <value>${CDW_EXECUTE} -f update -p $[? REVISION] [-r ${REVISION}] [] ${QFILE} ${NUR}</value>
      </property>
      <property name="numRevisions">
	<value>1</value>
      </property>
    </command>
    <command name="REVISION_LIST">
      <property name="exec">
        <value>vcs.commands.CvsRevisionListGetter.class REVISION_GETTER</value>
      </property>
      <property name="ignoreFail">
	<value>true</value>
      </property>
    </command>

    <command name="CREATE_INITIAL_IGNORE_LIST">
        <property name="exec">
            <value>vcs.commands.CvsCreateInitialIgnoreList.class CHECKOUT_IGNORE_LIST_CMD</value>
        </property>
        <property name="ignoreFail">
            <value>true</value>
        </property>
    </command>

    <command name="CHECKOUT_IGNORE_LIST_CMD">
        <property name="exec">
            <value>${CDW_EXECUTE} -f checkout -p CVSROOT/cvsignore</value>
        </property>
        <property name="ignoreFail">
            <value>true</value>
        </property>
    </command>

    <command name="CREATE_FOLDER_IGNORE_LIST">
        <property name="exec">
            <value>vcs.commands.CvsCreateFolderIgnoreList.class</value>
        </property>
        <property name="ignoreFail">
            <value>true</value>
        </property>
    </command>

    <command name="VERIFY_ACTION">
        <property name="exec">
            <value>vcs.commands.CvsVerifyAction.class LIST_FILE</value>
        </property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="generalCommandActionClassName">
          <value>org.netbeans.modules.vcscore.grouping.VerifyGroupAction</value>
        </property>
        <property name="executionPriority">
          <value>1</value> <!-- HIGH PRIORITY -->
        </property>
    </command>

    <command name="DELETE_DIR">
        <property name="exec">
            <value>vcs.commands.CvsDeleteFolder.class</value>
        </property>
        <property name="runOnMultipleFiles">
            <value>true</value>
        </property>
    </command>

    <!--
    <command name="CUSTOMIZER_LAUNCH" displayName="CVS Settings">
      <property name="exec">
        <value>vcs.commands.VCSCustomizerCommand.class</value>
      </property>
      <property name="onFile">
	<value>false</value>
      </property>
      <property name="onDir">
	<value>false</value>
      </property>
      <property name="onRoot">
	<value>true</value>
      </property>
    </command>
    -->

    
    <command name="AUTO_FILL_CONFIG">
      <property name="exec">
        <value>vcs.commands.CvsAutoFillConfig.class</value>
      </property>
      <property name="executionPriority">
        <value>1</value> <!-- HIGH PRIORITY -->
      </property>
      <property name="ignoreFail">
        <value>true</value>
      </property>
    </command>
    <command name="AUTO_FILL_CHECKOUT">
      <property name="exec">
        <value>vcs.commands.CvsAutoFillOffline.class</value>
      </property>
      <property name="executionPriority">
        <value>1</value> <!-- HIGH PRIORITY -->
      </property>
      <property name="ignoreFail">
        <value>true</value>
      </property>
    </command>
    <command name="SET_LOGIN_STATE">
      <property name="exec">
        <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.CvsLoggedInCVSpass.class</value>
      </property>
      <property name="executionPriority">
        <value>1</value> <!-- HIGH PRIORITY -->
      </property>
      <property name="ignoreFail">
        <value>true</value>
      </property>
    </command>
    <command name="LOGIN_CHECK">
      <property name="exec">        
        <value>${EXECUTE} -d ${QUOTE}${CVSROOT}${QUOTE} -f checkout -c ${NUR}</value>
      </property>
    </command>
    <command name="CONNECTION_LOGIN">
      <property name="exec">
        <value>vcs.commands.CvsLoginCheck.class -gui "${CVSROOT}" "${PASSWORD}"</value>
      </property>
      <property name="ignoreFail">
        <value>true</value>
      </property>
    </command>

  </commands>
  
  <globalCommands>
    <command name="ROOT" displayName="ResourceMsg(CVS)">
      <property name="labelMnemonic">
        <value>ResourceMsg(CVS_Mnemonic)</value>
      </property>
      <command name="INIT" displayName="ResourceMsg(CVS_GLOBAL_INIT)">
        <property name="labelMnemonic">
          <value>ResourceMsg(CVS_INIT_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>init</value>
	</property>
	<property name="exec">
	  <value>/bin/sh -c "${QUOTE}${CVS_EXE}${QUOTE} -d ${QUOTE}:local:${CVS_REPOSITORY}${QUOTE} init"</value>
	  <value if="IS_WINNT">cmd /X /C "echo . >nul &amp;&amp; ${QUOTE}${CVS_EXE}${QUOTE} -d ${QUOTE}:local:${CVS_REPOSITORY}${QUOTE} init"</value>
	  <value if="IS_WIN9X">"${CVS_EXE}" -d ":local:${CVS_REPOSITORY}" init</value>
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg(COMMAND_INIT_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_INIT_Label)))
                 
                 PROMPT_FOR(CVS_REPOSITORY, "ResourceMsg(VAR_Repository):", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_Repository);;MNEMONIC_ResourceMsg(INIT_VAR_Repository_Mnemonic)),
                            VALIDATOR_FOLDER, SELECTOR_DIR)
                 PROMPT_FOR(CVS_EXE, "ResourceMsg(VAR_EXE):", "${CVS_EXE}",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_EXE);;MNEMONIC_ResourceMsg(VAR_EXE_Mnemonic)),
                            VALIDATOR_NON_EMPTY, SELECTOR_FILE)
          </value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
        <property name="notificationSuccessMsg">
          <value>ResourceMsg(NOTIFICATION_INIT_Success)</value>
        </property>
        <property name="notificationFailMsg">
          <value>ResourceMsg(NOTIFICATION_INIT_Fail)</value>
        </property>
      </command>
      <command name="PRE_CHECKOUT_CREATE_CVS_FOLDER">
	<property name="exec">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.CvsPreCheckoutFolder.class</value>
        </property>
      </command>
      <command name="CHECKOUT" displayName="ResourceMsg(CVS_GLOBAL_CHECKOUT)">
        <property name="labelMnemonic">
          <value>ResourceMsg(CVS_CHECKOUT_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>checkout</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
	  <value>$[? BUILT-IN][org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${ROOTDIR}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} checkout ${FORCE_HEAD_MATCH} ${DO_NOT_SHORTEN} ${SEND_TO_STDOUT} ${RCS_KFLAG} ${RUN_MODULE_PROGRAM} $[? DIRECTORY] [-d ${DIRECTORY}] [] $[? TAG] [-r ${TAG}] [] $[? DATE] [-D ${QUOTE}${DATE}${QUOTE}] [] ${PRUNE_EMPTY}  ${RECURSIVE} $[? CO_ALL] [${CO_ALL}] [${CO_MODULE}] ${NUR}]
                                 [$[? IS_WIN9X] [${RUN} ${QUOTE}${CVS_EXE_\/}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} ${USER_GLOBAL_PARAM} checkout ${FORCE_HEAD_MATCH} ${DO_NOT_SHORTEN} ${SEND_TO_STDOUT} ${RCS_KFLAG} ${RUN_MODULE_PROGRAM} $[? DIRECTORY] [-d ${DIRECTORY}] [] $[? TAG] [-r ${TAG}] [] $[? DATE] [-D ${QUOTE}${DATE}${QUOTE}] [] ${PRUNE_EMPTY}  ${RECURSIVE} ${CO_MODULE} $[? CO_ALL] [${CO_ALL}] [${CO_MODULE}] ${NUR}] 
                                 [${RUN} ${QUOTE}${CVS_EXE}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} ${USER_GLOBAL_PARAM} checkout ${FORCE_HEAD_MATCH} ${DO_NOT_SHORTEN} ${SEND_TO_STDOUT} ${RCS_KFLAG} ${RUN_MODULE_PROGRAM} $[? DIRECTORY] [-d ${DIRECTORY}] [] $[? TAG] [-r ${TAG}] [] $[? DATE] [-D ${QUOTE}${DATE}${QUOTE}] [] ${PRUNE_EMPTY}  ${RECURSIVE} ${CO_MODULE} $[? CO_ALL] [${CO_ALL}] [${CO_MODULE}] ${NUR}]]
          </value>
	</property>
	<property name="display">
	  <value>true</value>
	</property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg(COMMAND_CHECKOUT_Label),ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Label)))
                 AUTO_FILL_VARS("ROOTDIR, AUTO_FILL_GLOBAL_CONFIG, SERVERTYPE, SET_GLOBAL_LOGIN_STATE, CVS_SERVER, SET_GLOBAL_LOGIN_STATE, CVS_USERNAME, SET_GLOBAL_LOGIN_STATE, CVS_REPOSITORY, SET_GLOBAL_LOGIN_STATE, ENVIRONMENT_VAR_CVS_CLIENT_PORT, SET_GLOBAL_LOGIN_STATE")
                 
                 PROMPT_FOR(ROOTDIR, "ResourceMsg(INPUT_WORKING_DIR)", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_INPUT_WORKING_DIR);;MNEMONIC_ResourceMsg(INPUT_WORKING_DIR_Mnemonic)),
                            VALIDATOR_FOLDER, SELECTOR_DIR)
                 <!--PROMPT_FOR(CVS_ROOT, "ResourceMsg(VAR_CVSRoot):", "$[? CVS_ROOT] [${CVS_ROOT}] [${ENVIRONMENT_VAR_CVSROOT}]",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_CVSRoot);;MNEMONIC_ResourceMsg(VAR_CVSRoot_Mnemonic)))                 -->
                 SELECT_COMBO_EDITABLE(SERVERTYPE, "ResourceMsg(VAR_SERVER_Type):", "pserver",
                                   ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Type);;MNEMONIC_ResourceMsg(VAR_SERVER_Type_Mnemonic)),
                                   [local, local, DISABLE(CVS_SERVER, ENVIRONMENT_VAR_CVS_CLIENT_PORT, CVS_USERNAME, ENVIRONMENT_VAR_CVS_RSH, BUILT-IN/true, FILESYSTEM_PROPERTY_offLine)],
                                   [server, server, DISABLE(ENVIRONMENT_VAR_CVS_RSH, FILESYSTEM_PROPERTY_offLine)],
                                   [pserver, pserver, ENABLE(ENVIRONMENT_VAR_CVS_CLIENT_PORT, FILESYSTEM_PROPERTY_offLine), DISABLE(ENVIRONMENT_VAR_CVS_RSH)],
                                   [ext, ext, ENABLE(ENVIRONMENT_VAR_CVS_RSH), DISABLE(ENVIRONMENT_VAR_CVS_CLIENT_PORT, BUILT-IN/true, FILESYSTEM_PROPERTY_offLine)])
             PROMPT_FOR(CVS_SERVER, "ResourceMsg(VAR_SERVER_Name):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Name);;MNEMONIC_ResourceMsg(VAR_SERVER_Name_Mnemonic)))
             PROMPT_FOR(ENVIRONMENT_VAR_CVS_CLIENT_PORT, "ResourceMsg(VAR_SERVER_Port):", "2401",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_SERVER_Port);;MNEMONIC_ResourceMsg(VAR_SERVER_Port_Mnemonic)))
             PROMPT_FOR(CVS_USERNAME, "ResourceMsg(VAR_User):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_User);;MNEMONIC_ResourceMsg(VAR_User_Mnemonic)))
             PROMPT_FOR(CVS_REPOSITORY, "ResourceMsg(VAR_Repository):", "",
                        ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_Repository);;MNEMONIC_ResourceMsg(VAR_Repository_Mnemonic)),
                        VALIDATOR_NON_EMPTY, SELECTOR_DIR)
                        
                 SELECT_RADIO(BUILT-IN, "", "true", ["ResourceMsg(VAR_BuiltIn_true)", "true", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_BuiltIn_true);;MNEMONIC_ResourceMsg(VAR_BuiltIn_true_Mnemonic))"],
                                            ["ResourceMsg(VAR_BuiltIn_false)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_BuiltIn_false);;MNEMONIC_ResourceMsg(VAR_BuiltIn_false_Mnemonic))",
                 PROMPT_FOR(CVS_EXE, "ResourceMsg(VAR_EXE):", "${CVS_EXE}",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_EXE);;MNEMONIC_ResourceMsg(GL_VAR_EXE_Mnemonic)),
                            SELECTOR_FILE)
                 PROMPT_FOR(ENVIRONMENT_VAR_CVS_RSH, "ResourceMsg(VAR_CVS_RSH):", "ssh",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_CVS_RSH);;MNEMONIC_ResourceMsg(GL_VAR_CVS_RSH_Mnemonic)))
                 IF_VAR_NON_EMPTY"IS_WIN9X"_PROMPT_FOR(SHELL, "ResourceMsg(Unix_Shell):", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_Unix_Shell);;MNEMONIC_ResourceMsg(Unix_Shell_Mnemonic)),
                            SELECTOR_FILE)])
                 PROMPT_FOR_PASSWORD(PASSWORD, "ResourceMsg(VAR_Password)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_Password);;MNEMONIC_ResourceMsg(VAR_Password_Mnemonic))", SELECTOR_CMD_(ResourceMsg(LOGIN_Button))CONNECTION_LOGIN)
                                                                TEXT(LOGGED_IN_TEXT, 1, 1, LINE_SINGLE)
                 SELECT_RADIO(CO_ALL, "", ".", ["ResourceMsg(COMMAND_CHECKOUT_All)", ".", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_All);;MNEMONIC_ResourceMsg(COMMAND_CHECKOUT_All_Mnemonic))"],
                                            ["ResourceMsg(COMMAND_CHECKOUT_Module)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Module);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Module_mnc))",PROMPT_FOR(CO_MODULE, "", "",SELECTOR_CMD_SELECTOR_MODULES)])
                 PROMPT_FOR(TAG, ResourceMsg(COMMAND_CHECKOUT_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Tag);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Tag_mnc)))
                 PROMPT_FOR(DATE, ResourceMsg(COMMAND_CHECKOUT_Date), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Date);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Date_mnc)) ,SELECTOR_DATE_CVS)
                 ASK_FOR(FORCE_HEAD_MATCH, ResourceMsg(COMMAND_Force_Head_Match), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_Force_Head_Match);;MNEMONIC_ResourceMsg(ACS_GL_COMMAND_Force_Head_Match_mnc)) ,"-f", "")
                 ASK_FOR_EXPERT(PRUNE_EMPTY, ResourceMsg(COMMAND_CHECKOUT_Prune_Empty), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Prune_Empty);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Prune_Empty_mnc)), "-P", "")
                 ASK_FOR_EXPERT(RUN_MODULE_PROGRAM, ResourceMsg(COMMAND_COMMIT_Run_Module_Program), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_COMMIT_Run_Module_Program);;MNEMONIC_ResourceMsg(ACS_COMMAND_COMMIT_Run_Module_Program_mnc)), "", "-n")
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 PROMPT_FOR_EXPERT(DIRECTORY, ResourceMsg(COMMAND_CHECKOUT_Directory), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Directory);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Directory_mnc)))
                 ASK_FOR_EXPERT(DO_NOT_SHORTEN, ResourceMsg(COMMAND_CHECKOUT_Do_Not_Shorten_Paths), "true", ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_CHECKOUT_Do_Not_Shorten_Paths);;MNEMONIC_ResourceMsg(ACS_COMMAND_CHECKOUT_Do_Not_Shorten_Paths_mnc)),"-N", "")
                 ASK_FOR_EXPERT(RECURSIVE, ResourceMsg(COMMAND_Recursive), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_Recursive);;MNEMONIC_ResourceMsg(ACS_COMMAND_Recursive_mnc)) ,"-R", "-l")
          </value>
	</property>
        <property name="preCommands">
          <value>PRE_CHECKOUT_CREATE_CVS_FOLDER</value>
        </property>
	<property name="checkForModifications">
	  <value>true</value>
	</property>
        <property name="runOnMultipleFiles">
          <value>true</value>
        </property>
        <property name="commandsAfterSuccess">
          <value>GLOBAL_REGISTER</value>
        </property>
      </command> 
      <command name="CONNECTION_LOGIN">
        <property name="exec">
          <value>vcs.commands.CvsLoginCheck.class -gui "${CVSROOT}" "${PASSWORD}"</value>
        </property>
        <property name="ignoreFail">
          <value>true</value>
        </property>
      </command>
      <command name="SET_GLOBAL_LOGIN_STATE">
      <property name="exec">
        <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.CvsLoggedInCVSpass.class</value>
      </property>
      <property name="executionPriority">
        <value>1</value> <!-- HIGH PRIORITY -->
      </property>
      <property name="ignoreFail">
        <value>true</value>
      </property>
    </command>   
      <command name="AUTO_FILL_GLOBAL_CONFIG">
        <property name="exec">
          <value>vcs.commands.CvsAutoFillConfig.class</value>
        </property>
        <property name="executionPriority">
          <value>1</value> <!-- HIGH PRIORITY -->
        </property>
        <property name="ignoreFail">
          <value>true</value>
        </property>
      </command>
      <command name="GLOBAL_REGISTER">
        <property name="exec">
          <value>vcs.commands.CvsGlobalRegister.class</value>
        </property>
        <property name="executionPriority">
          <value>1</value> <!-- HIGH PRIORITY -->
        </property>
        <property name="ignoreFail">
          <value>true</value>
        </property>
      </command>      
      <command name="SELECTOR_MODULES">
        <property name="exec">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.CvsModuleSelector.class CHECKOUT_MODULES_S_CMD CHECKOUT_MODULES_C_CMD</value>
	</property>
        <property name="executionPriority">
          <value>1</value> <!-- HIGH PRIORITY -->
        </property>
      </command>
      <command name="CHECKOUT_MODULES_S_CMD">
        <property name="exec">
          <value>$[? BUILT-IN][org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${ROOTDIR}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} -f checkout -s ${NUR}]
                                  [$[? IS_WIN9X][${RUN} ${QUOTE}${CVS_EXE_\/}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} -f checkout -s ${NUR}]
                                  [${RUN} ${QUOTE}${CVS_EXE}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} -f checkout -s ${NUR}]] 
          </value>
	</property>
      </command>
      <command name="CHECKOUT_MODULES_C_CMD">
        <property name="exec">
          <value>$[? BUILT-IN][org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${ROOTDIR}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} -f checkout -c ${NUR}]
                                 [$[? IS_WIN9X][${RUN} ${QUOTE}${CVS_EXE_\/}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} -f checkout -c ${NUR}]
                                 [${RUN} ${QUOTE}${CVS_EXE}${QUOTE} -d ${QUOTE}${CVSROOT}${QUOTE} -f checkout -c ${NUR}]]
          </value>     
	</property>
      </command>
      <command name="IMPORT_CMD">
        <property name="exec">
          <value>$[? BUILT-IN-GLB][org.netbeans.modules.vcs.profiles.cvsprofiles.commands.JavaCvsCommand.class ${QUOTE}dir=${ROOTDIR}${QUOTE} -d ${QUOTE}${CVS_ROOT}${QUOTE} import ${MODIF_TIME} ${RCS_KFLAG} $[? IGNORE] [-I ${IGNORE}] [] $[? UNSHARABLE_IGNORE] [${UNSHARABLE_IGNORE}] [] $[? BRANCH_ID] [-b ${BRANCH_ID}] [] -m ${QUOTE}${DESCRIPTION}${QUOTE} ${QUOTE}${REPOS_DIR}${QUOTE} ${VENDOR_TAG} ${RELEASE_TAG} ${NUR}]
                                  [$[? IS_WINNT][${RUN} cd /D ${ROOTDIR} &amp;&amp; ${QUOTE}${CVS_EXE}${QUOTE} -d ${QUOTE}${CVS_ROOT}${QUOTE} ${USER_GLOBAL_PARAM} import ${MODIF_TIME} ${RCS_KFLAG} $[? IGNORE] [-I ${IGNORE}] [] $[? UNSHARABLE_IGNORE] [${UNSHARABLE_IGNORE}] [] $[? BRANCH_ID] [-b ${BRANCH_ID}] [] -m ${QUOTE}${DESCRIPTION}${QUOTE} ${QUOTE}${REPOS_DIR}${QUOTE} ${VENDOR_TAG} ${RELEASE_TAG} ${NUR}]
                                  [$[? IS_WIN9X][${RUN} cd ${ROOTDIR}; ${QUOTE}${CVS_EXE_\/}${QUOTE} -d ${QUOTE}${CVS_ROOT}${QUOTE} ${USER_GLOBAL_PARAM} import ${MODIF_TIME} ${RCS_KFLAG} $[? IGNORE] [-I ${IGNORE}] [] $[? UNSHARABLE_IGNORE] [${UNSHARABLE_IGNORE}] [] $[? BRANCH_ID] [-b ${BRANCH_ID}] [] -m ${QUOTE}${DESCRIPTION}${QUOTE} ${QUOTE}${REPOS_DIR}${QUOTE} ${VENDOR_TAG} ${RELEASE_TAG} ${NUR}]
                                  [${RUN} cd ${ROOTDIR}; ${QUOTE}${CVS_EXE}${QUOTE} -d ${QUOTE}${CVS_ROOT}${QUOTE} ${USER_GLOBAL_PARAM} import ${MODIF_TIME} ${RCS_KFLAG} $[? IGNORE] [-I ${IGNORE}] [] $[? UNSHARABLE_IGNORE] [${UNSHARABLE_IGNORE}] [] $[? BRANCH_ID] [-b ${BRANCH_ID}] [] -m ${QUOTE}${DESCRIPTION}${QUOTE} ${QUOTE}${REPOS_DIR}${QUOTE} ${VENDOR_TAG} ${RELEASE_TAG} ${NUR}]]]
          </value>
        </property>
      </command>
      <command name="IMPORT" displayName="ResourceMsg(CVS_GLOBAL_IMPORT)">
        <property name="labelMnemonic">
          <value>ResourceMsg(CVS_IMPORT_Mnemonic)</value>
        </property>
	<property name="advancedName">
	  <value>import</value>
	</property>
	<property name="supportsAdvancedMode">
	  <value>true</value>
	</property>
	<property name="exec">
          <value>org.netbeans.modules.vcs.profiles.cvsprofiles.commands.SharableImport.class IMPORT_CMD</value>
        </property>
	<property name="inputDescriptor">
	  <value>LABEL(ResourceMsg(COMMAND_IMPORT_Label), ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_Label)))
                 
                 PROMPT_FOR(ROOTDIR, "ResourceMsg(COMMAND_IMPORT_WORKING_DIR)", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_WORKING_DIR);;MNEMONIC_ResourceMsg(COMMAND_IMPORT_WORKING_DIR_Mnemonic)),
                            VALIDATOR_FOLDER, SELECTOR_DIR)
                 PROMPT_FOR(CVS_ROOT, "ResourceMsg(VAR_CVSRoot):", "$[? CVS_ROOT] [${CVS_ROOT}] [${ENVIRONMENT_VAR_CVSROOT}]",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_CVSRoot);;MNEMONIC_ResourceMsg(VAR_CVSRoot_Mnemonic)), VALIDATOR_NON_EMPTY)
                 PROMPT_FOR(REPOS_DIR, "ResourceMsg(COMMAND_IMPORT_ReposDir)", ".",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_ReposDir);;MNEMONIC_ResourceMsg(COMMAND_IMPORT_ReposDir_Mnemonic)), VALIDATOR_NON_EMPTY)
                 SELECT_RADIO(BUILT-IN-GLB, "", "true", ["ResourceMsg(VAR_BuiltIn_true)", "true", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_BuiltIn_true);;MNEMONIC_ResourceMsg(VAR_BuiltIn_true_Mnemonic))"],
                                            ["ResourceMsg(VAR_BuiltIn_false)", "", "ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_BuiltIn_false);;MNEMONIC_ResourceMsg(VAR_BuiltIn_GLB_false_Mnemonic))",
                 PROMPT_FOR(CVS_EXE, "ResourceMsg(VAR_EXE):", "${CVS_EXE}",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_EXE);;MNEMONIC_ResourceMsg(VAR_EXE_Mnemonic)),
                            SELECTOR_FILE)
                 PROMPT_FOR(ENVIRONMENT_VAR_CVS_RSH, "ResourceMsg(VAR_CVS_RSH):", "ssh",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_VAR_CVS_RSH);;MNEMONIC_ResourceMsg(VAR_CVS_RSH_Mnemonic)))
                 IF_VAR_NON_EMPTY"IS_WIN9X"_PROMPT_FOR(SHELL, "ResourceMsg(Unix_Shell):", "",
                            ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_Unix_Shell);;MNEMONIC_ResourceMsg(Unix_Shell_Mnemonic)),
                            SELECTOR_FILE)])                                  
                 PROMPT_FOR(DESCRIPTION, ResourceMsg(COMMAND_IMPORT_Logging_Message), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_Logging_Message);;MNEMONIC_ResourceMsg(ACS_COMMAND_IMPORT_Logging_Message_mnc)), VALIDATOR_NON_EMPTY)
                 PROMPT_FOR(VENDOR_TAG, ResourceMsg(COMMAND_IMPORT_Vendor_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_Vendor_Tag);;MNEMONIC_ResourceMsg(ACS_COMMAND_IMPORT_Vendor_Tag_mnc)) ,VALIDATOR_NON_EMPTY)
                 PROMPT_FOR(RELEASE_TAG, ResourceMsg(COMMAND_IMPORT_Release_Tag), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_Release_Tag);;MNEMONIC_ResourceMsg(ACS_COMMAND_IMPORT_Release_Tag_mnc)), VALIDATOR_NON_EMPTY)
                 ASK_FOR_EXPERT(MODIF_TIME, ResourceMsg(COMMAND_IMPORT_Modif_Time), "false",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_Modif_Time);;MNEMONIC_ResourceMsg(ACS_COMMAND_IMPORT_Modif_Time_mnc)), "-d", "")
                 SELECT_COMBO_EXPERT(RCS_KFLAG, ResourceMsg(COMMAND_Keyword_Substitution), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_Keyword_Substitution);;MNEMONIC_ResourceMsg(ACS_COMMAND_Keyword_Substitution_mnc)), ["ResourceMsg(COMMAND_Keyword_Substitution_None)", ""], ["ResourceMsg(COMMAND_Keyword_Substitution_Binary)", "-kb"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordValue)", "-kkv"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordValueLocker)", "-kkvl"], ["ResourceMsg(COMMAND_Keyword_Substitution_KeywordOnly)", "-kk"], ["ResourceMsg(COMMAND_Keyword_Substitution_ValueOnly)", "-kv"], ["ResourceMsg(COMMAND_Keyword_Substitution_ReuseOld)", "-ko"])
                 PROMPT_FOR_EXPERT(IGNORE, ResourceMsg(COMMAND_IMPORT_Ignore), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_Ignore);;MNEMONIC_ResourceMsg(ACS_COMMAND_IMPORT_Ignore_mnc)))
                 PROMPT_FOR_EXPERT(BRANCH_ID, ResourceMsg(COMMAND_IMPORT_Branch_Id), "",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_Branch_Id);;MNEMONIC_ResourceMsg(ACS_COMMAND_IMPORT_Branch_Id_mnc)))
                 ASK_FOR(DO_CHECKOUT, ResourceMsg(COMMAND_IMPORT_Do_Checkout), "true",ACCESSIBILITY(DESCRIPTION_ResourceMsg(ACSD_COMMAND_IMPORT_Do_Checkout);;MNEMONIC_ResourceMsg(ACS_COMMAND_IMPORT_Do_Checkout_mnc)))
          </value>
	</property>
	<property name="onFile">
	  <value>false</value>
	</property>
	<property name="display">
	  <value>true</value>
	</property>
	<property name="data.regex">
	  <value>$ ^</value>
	</property>
	<property name="error.regex">
	  <value>$ ^</value>
	</property>
	<property name="onRoot">
	  <value>true</value>
	</property>
        <property name="notificationSuccessMsg">
          <value>$[? DO_CHECKOUT] [] [ResourceMsg(NOTIFICATION_IMPORT_Success, ${ROOTDIR})]</value>
        </property>
        <property name="notificationFailMsg">
          <value>ResourceMsg(NOTIFICATION_IMPORT_Fail, ${ROOTDIR})</value>
        </property>
        <property name="commandsAfterSuccess">
          <value>$[? DO_CHECKOUT] [CHECKOUT][]</value>
        </property>
      </command>
    </command>
  </globalCommands>
  
</configuration>

