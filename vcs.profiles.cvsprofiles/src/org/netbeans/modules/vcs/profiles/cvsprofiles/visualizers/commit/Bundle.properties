# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#--------------------------------------------------------------------
# Sample ResourceBundle properties file


CvsCommit.dialogTitle=Commit
CvsCommit.dialogDirTitle=Commit
CvsCommit.name=Commit
CvsCommit.error=Error\:
CvsCommit.BeanName=Commit
CommitParamInput.btnIndividualMessage.text=Create individ. messages
PROP_recursive=Recursive
HINT_recursive=If true, works recursively (-R). Otherwise works locally (-l).
PROP_message=Message
HINT_message=Commit message. (-m)
PROP_forceCommit=Force Commit
HINT_forceCommit=Force commit even if no changes were made. (-f)
PROP_logMessageFromFile=Message From File
HINT_logMessageFromFile=Use file's content as message describing the change. (-F)
PROP_noModuleProgram=No Module Program
HINT_noModuleProgram=Doesn't run module program. (-n)
PROP_toRevisionOrBranch=Commit to Revision/Branch
HINT_toRevisionOrBranch=Commit to a specific revision/branch. (-r)

CommitMessageChooser.title=Append Individual Logs to Changed Files
CommitMessageChooser.clearPanel.text=No file selected.
CommitMessageChooser.lblMessage.text=File(s) Log Message\:
CommitMessageChooser.loadingPanel.text=Examining target files/directories. 
CommitMessageChooser.loadingPanel.text2=Please wait while the server is being contacted.


CommitTableInfoModel.fileName=Filename
CommitTableInfoModel.path=Path
CommitTableInfoModel.type=Type
CommitTableInfoModel.revision=Revision

CommitParamInput.dialogTitle=Enter commit parameters
CommitParamInput.cbRevision.text=\ Revision/Branch
CommitParamInput.cbRevision.mnemonic=B
CommitParamInput.cbLocal.text=\ Run Locally (Not Recursively)
CommitParamInput.cbLocal.mnemonic=L
CommitParamInput.cbForceUpdate.text=\ Force Commit (Even If No Changes)
CommitParamInput.cbForceCommit.mnemonic=F
CommitParamInput.cbNoModule.text=\ Don't Run Module Program
CommitParamInput.cbNoModule.mnemonic=R
CommitParamInput.cbFileMessage.text=\ Use File For Log Messaging
CommitParamInput.cbFileMessage.mnemonic=U
CommitParamInput.btnFileMessage.text=Select File
CommitParamInput.btnFileMessage.mnemonic=S
CommitParamInput.cbMessage.text=\ Use This Message
CommitParamInput.cbMessage.mnemonic=T
CommitParamInput.lblMessage.text=Log Message\:
CommitParamInput.lblMessage.mnemonic=M

CommitInfoPanel.btnEdit.text=Edit File
CommitInfoPanel.dialogTitle=Commit File(s)
CommitInfoPanel.stopButton=Stop
CommitInfoPanel.stopButton.mnemonic=S
CommitInfoPanel.closeButton=Close
CommitInfoPanel.closeButton.mnemonic=C
CommitInfoPanel.logButton=View log
CommitInfoPanel.logButton.mnemonic=V
CommitInfoPanel.stopping=Stopping...
CommitInfoPanel.All_Requests_Sent=Request sent to server. Awaiting reply...
CommitInfoPanel.lblSending.text=Sending file information for update in directory: {0}
CommitInfoPanel.lblSending.mnemonic=F

CommitParamInput.btnClearIndividual.text=Clear Individ.
CommitMessageChooser.lblGeneral.text=General Message\:

ACSD_CommitParamInput=Parameters for commit command.
ACSN_CommitParamInput.taMessage=Checkin Log Message
ACSD_CommitParamInput.taMessage=Enter log message:
ACSD_CommitParamInput.txRevision=Revision/Branch:
ACSD_CommitParamInput.txFileMessage=Enter path and filename to use for log message.
ACSD_CommitParamInput.cbLocal.=n/a
ACSD_CommitParamInput.cbForceUpdate=n/a
ACSD_CommitParamInput.cbNoModule=n/a
ACSD_CommitParamInput.cbRevision=n/a
ACSD_CommitParamInput.cbFileMessage=n/a
ACSD_CommitParamInput.btnFileMessage=n/a
ACSD_CommitParamInput.cbMessage=n/a
ACSD_CommitParamInput.btnIndividualMessage=n/a
ACSD_CommitParamInput.btnClearIndividual=n/a
CommitInfoPanel.tblUpdates=List of updated files.
ACSD_CommitInfoPanel.tblUpdates=n/a
ACSD_CommitInfoPanel.btnViewLog=n/a
ACSD_CommitInfoPanel.btnStop=n/a
ACSD_CommitInfoPanel=Enter parameters for CVS Commit command.

CvsCommitVisualizer.title_one={0} - {1}

CvsCommitVisualizer.title_many={0} - {1} Objects

ACS_CommitInfoPanel=Commit Output Panel

ACS_CommitInfoPanel.errOutput=Error Output

ACSD_CommitInfoPanel.errOutput=Error Output of command

CommitInfoPanel.table=Commit Table

ACSD_CommitInfoPanel.table=Table containing output of command
