<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE api-answers [
  <!ENTITY api-questions SYSTEM "api-questions.xml">
]>

<api-answers
  version="$Revision$" date="$date$"
  question-version="1.8"
  module="vcscore"
  author="mentlicher@netbeans.org"
>

  &api-questions;


<!-- Question: arch-what

     <question id="arch-what">
            What is this project good for?
            <hint>
            Please provide here few lines describing the the project, 
            what problem it should solve, provide links to documentation, 
            specifications, etc.
            </hint>
        </question>
-->
<answer id="arch-what">
The VCS Core module provides basic structure and libraries on which support modules
for various version control systems can be based. The modules, that integrate concrete
version control systems into NetBeans IDE, depend on the VCS Core module.
See <a href="http://vcscore.netbeans.org/">vcscore.netbeans.org</a>
for more information.<p>List of the main features:</p>
<ul>
  <li>Simple VCS API (See <a href="http://vcscore.netbeans.org/doc/VCSAPI.html">
      http://vcscore.netbeans.org/doc/VCSAPI.html</a> for details).</li>
  <li>Versioning main menu.</li>
  <li>Generic mount action for VCS integrations.</li>
  <li>Provides VcsFileSystem, that can be used as a base for VCS integration.</li>
  <li>Mechanism for VCS commands execution including threads management and mutual
      commands synchronization.</li>
  <li>Nodes on Runtime tab representing running and finished commands.</li>
  <li>Component for displaying raw text output of commands with high throughoutput.</li>
  <li>Generic action with a popup menu of VCS commands with a tree-like structure.</li>
  <li>Versioning toolbar with pre-defined six generic actions.</li>
  <li>Caching infrastructure for persistent storage of VCS-related information about files.</li>
  <li>Vcs Groups with ability to group related files that the developer work on.</li>
  <li>Ability to seach the VCS filesystem by file status information.</li>
  <li>Versioning Explorer, that allows to browse individual file revisions and
      run commands on individual revision(s).</li>
  <li>Common VCS settings.</li>
  <li>Mounting wizard for CVS filesystem, that can mount built-in or command-line
      CVS client (which are in separate modules).</li>
</ul>
</answer>



<!-- Question: compat-i18n

     <question id="compat-i18n">
            Is your module correctly internationalized?
            <hint>
            Correct internationalization means that it obeys instuctions 
            at <a href="http://www.netbeans.org/devhome/docs/i18n/index.html">
            NetBeans I18N pages</a>.
            </hint>
        </question>
-->
<answer id="compat-i18n">
    Yes.
</answer>



<!-- Question: compat-standards

     <question id="compat-standards">
            Does the module implements or defines any standards? Is the 
            implementation exact or it deviates somehow?
        </question>
-->
<answer id="compat-standards">
    None defined or implemented.
</answer>



<!-- Question: compat-version

     <question id="compat-version">
            Does your module properly coexists with earlier and future
            versions? Can you correctly read settings? Will future
            versions be able to read settings?
            
            <hint>
            Very helpful for reading settings is to store version number
            there, so future versions can decide whether how to read/convert
            the settings and older versions can ignore the new ones.
            </hint>
        </question>
-->
<answer id="compat-version">
    Only one version of the module can be installed at a time. 
    The settings are shared across different versions, stored
    and read by Java serialization and will be read in future as well.
</answer>



<!-- Question: dep-jre

     <question id="dep-jre">
            Which version of JRE you need (1.2, 1.3, 1.4, etc.)?
            <hint>
            It is expected that if your module runs on 1.x that it will run 
            on 1.x+1 if no, state that please. Also describe here cases where
            you run different code on different versions of JRE and why.
            </hint>
        </question>
-->
<answer id="dep-jre">
    Needs at least JRE 1.3. Different code is executed in
    org.netbeans.modules.cmdline.RelativeMountPanel on JRE 1.3.x and when Windows
    look and feel is used. This is a workaround for Windows look and feel bug.
    See issue #29753 for details.
</answer>



<!-- Question: dep-jrejdk

     <question id="dep-jrejdk">
            Do you require JDK or is JRE enough?
        </question>
-->
<answer id="dep-jrejdk">
    JRE is enough.
</answer>



<!-- Question: dep-nb

     <question id="dep-nb">
            What other NetBeans projects this one depends on?
            <hint>
            If you want, describe such projects as imported API using
            the <code>&lt;api name="identification" type="import or export" category="stable" url="where is the description" /&gt;</code>
            </hint>
        </question>
-->
<answer id="dep-nb">
    <api name="Open APIs" type="import" category="official" url="http://openide.netbeans.org"/> 
    <api name="Open APIs Extensions" type="import" category="under development" url="http://openidex.netbeans.org"/>
</answer>



<!-- Question: dep-non-nb

     <question id="dep-non-nb">
            What other non-NetBeans projects this one depends on?
            
            <hint>
            Some non-NetBeans projects are packaged as NetBeans modules
            (see <a href="http://libs.netbeans.org">libraries</a>) and
            it is prefered to use this approach when more modules may
            depend on such third-party library.
            </hint>
        </question>
-->
<answer id="dep-non-nb">
    <api name="Jakarta-Regexp 1.2 API" type="import" category="standard" url="http://jakarta.apache.org/regexp/apidocs/"/> 
    Regular expressions API - distributed with the IDE (in lib/ext/regexp-1.2.jar).
</answer>



<!-- Question: dep-platform

     <question id="dep-platform">
            On which platforms your module run? Any? Does it run in the same
            way?
            <hint>
            If your module is using JNI or deals with special differences of
            OSes like filesystems, etc. please describe here what they are.
            </hint>
        </question>
-->
<answer id="dep-platform">
    The module is 100% pure Java and runs on any platform, although it contains
    a generic infrastructure for execution of system commands (via Runtime.exec()),
    that are system-dependent.
</answer>



<!-- Question: deploy-jar

     <question id="deploy-jar">
            Do you deploy just module JAR file(s) or some other files?
            <hint>
            If your module consist just from one module JAR file, just confirm that.
            If it uses more than one JAR, describe where there are located, how
            they refer to each other. 
            If it consist of module JAR(s) and other files, please describe
            what is their purpose, why other files are necessary. Please 
            make sure that installation/deinstallation leaves the system 
            in state as it was before installation.
            </hint>
        </question>
-->
<answer id="deploy-jar">
<ul>
    <li>vcscore.jar - standard module jar file</li>
</ul>
</answer>



<!-- Question: deploy-nbm

     <question id="deploy-nbm">
            Can you deploy NBM via AutoUpdate center?
            <hint>
            If not why?
            </hint>
        </question>
-->
<answer id="deploy-nbm">
    Yes.
</answer>



<!-- Question: deploy-packages

     <question id="deploy-packages">
            Are packages of your module made inaccessible by not declaring them
            public?
            
            <hint>
            NetBeans module system allows restriction of access rights to
            public classes of your module from other modules. This prevents
            unwanted dependencies of others on your code and should be used
            whenever possible (<a href="http://www.netbeans.org/download/apis/org/openide/doc-files/upgrade.html#3.4-public-packages">
            public packages
            </a>). 
            </hint>
        </question>
-->
<answer id="deploy-packages">
    All public packages are accessible, no restriction applied.
</answer>



<!-- Question: deploy-shared

     <question id="deploy-shared">
            Do you need to be installed in shared location or only in user directory?
            <hint>
            Installation location shall not matter, if it does explain why.
            </hint>
        </question>
-->
<answer id="deploy-shared">
    Module can be installed anywhere.
</answer>



<!-- Question: exec-classloader

     <question id="exec-classloader">
            Does your code uses own classloader?
            <hint>
            A bit unusual. Please explain why and what for.
            </hint>
        </question>
-->
<answer id="exec-classloader">
    No.
</answer>



<!-- Question: exec-component

     <question id="exec-component">
            Is execution of your code influenced by (string) property
            of any of your components?
            
            <hint>
            Often <code>JComponent.getClientProperty</code>, <code>Action.getValue</code>
            or <code>PropertyDescriptor.getValue</code>, etc. are used to influence
            a behaviour of some code. This of course forms an interface that should
            be documented. Also if one depends on some interface that an object
            implements (<code>component instanceof Runnable</code>) that forms an
            API as well.
            </hint>
        </question>
-->
<answer id="exec-component">
    Yes, but only internally.
    org.netbeans.modules.vcscore.actions.ClusteringAction uses client property of
    the menu items to store the action object, that is retrieved in the action performer
    and org.netbeans.modules.vcscore.actions.CommandMenu uses ActionEvent.getActionCommand()
    to retrieve the name of the command to execute. Both actions set and retrieve
    the property by themselves.
</answer>



<!-- Question: exec-privateaccess

     <question id="exec-privateaccess">
            Are you aware of any other part of the system calling some of 
            your methods by reflection?
            <hint>
            If so, describe the "contract" as an API. Likely private or friend one, but
            still API and consider rewrite of it.
            </hint>
        </question>
-->
<answer id="exec-privateaccess">
    No.
</answer>



<!-- Question: exec-property

     <question id="exec-property">
            Is execution of your code influenced by any environment of
            system (<code>System.getProperty</code>) property?
            
            <hint>
            If there is a property that can change the behaviour of your 
            code, somebody will likely use it. You should describe what it does 
            and the stability category of this API. You may use
            <PRE>
                &lt;property name="id" category="private" &gt;
                    description of the property, where it is used, what it influence, etc.
                &lt;/property&gt;            
            </PRE>
            </hint>
        </question>
-->
<answer id="exec-property">
    <property name="user.home" category="private">
        To get the default initial directory in file choosers and the default
        mount point of VcsFileSystem.
    </property>
    <property name="netbeans.user" category="private">
        To determine the location of status cache persistent storage and storage
        of output of VCS commands to prevent OutOfMemoryErrors when commands
        produce a huge amount of output.
    </property>
    <property name="user.name" category="private">
        To be able to compare the user name with a file locker name to determine
        whether the file was locked by the current user or not.
    </property>
    <property name="Env-HOME" category="under development">
        This property is provided by core from the set of properties of the underlying
        operation system. It's used to determine the user's home directory for
        the purpose of location of .cvspass file and other CVS configuartion files.
    </property>
    <property name="Env-HOMEPATH" category="under development">
        This property is provided by core from the set of properties of the underlying
        operation system. It's used to determine the user's home directory for
        the purpose of location of .cvspass file and other CVS configuartion files
        on Windows operating system. It's used in conjunction with Env-HOMEDRIVE
        property.
    </property>
    <property name="Env-HOMEDRIVE" category="under development">
        This property is provided by core from the set of properties of the underlying
        operation system. It's used to determine the user's home directory for
        the purpose of location of .cvspass file and other CVS configuartion files
        on Windows operating system. It's used in conjunction with Env-HOMEPATH
        property.
    </property>
    <property name="env-cvs_rsh" category="under development">
        This property is provided by core from the set of properties of the underlying
        operation system. It's used to determine the default value of CVS_RSH
        environment variable for :ext: cvs connection method.
    </property>
    <property name="env-cvsroot" category="under development">
        This property is provided by core from the set of properties of the underlying
        operation system. It's used to determine the default value of CVSROOT
        environment variable to be able to preset the CVS configuration.
    </property>
    <property name="netbeans.vcsdebug" category="private">
        If this is true, some internal debug messages are printed.
        For testing purposes only.
    </property>
</answer>



<!-- Question: exec-reflection

     <question id="exec-reflection">
            Does your code uses java.lang.reflect to execute some other code?
            <hint>
            This usually indicates a missing or unsufficient API in the other
            part of the system. If the other side is not aware of your dependency
            this contract can be easily broken.
            </hint>
        </question>
-->
<answer id="exec-reflection">
    Yes.
    Reflection is used for:
    <ul>
    <li>In some UI components to be able to retrieve the displayed data</li>
    <li>To pass the VcsFileSystem instance to VCS commands written in Java
        so that they can run other commands and do other work that is necessary.</li>
    <li>In VCS APIs to be able to create instance of Command, that implements
        various interfaces.</li>
    <li>In joined CVS wizard to be able to mount filesystems of other modules.</li>
    <li>In some communication between VCS filesystem and versioning filesystem.</li>
    </ul>
</answer>



<!-- Question: format-clipboard

     <question id="format-clipboard">
            Which protocols your code reads/inserts when communicating with
            clipboard?
        </question>
-->
<answer id="format-clipboard">
    None.
</answer>



<!-- Question: format-dnd

     <question id="format-dnd">
            Which protocols your code understands during drag-n-drop?
        </question>
-->
<answer id="format-dnd">
    None.
</answer>



<!-- Question: format-types

     <question id="format-types">
            Which file formats your code reads or writes on disk?
        </question>
-->
<answer id="format-types">
    Only text formats:
    <ul>
    <li>File status cached information</li>
    <li>Ouptut of VCS commands into temporary files to keep low memory requirements</li>
    <li>Temporary files with user messages for VCS commands, that take messages
        from files.</li>
    </ul>
</answer>



<!-- Question: lookup-lookup

     <question id="lookup-lookup">
            Does your module uses <code>org.openide.util.Lookup</code>
            to find any components to communicate to? Which ones?
            
            <hint>
            Please describe the interfaces you are searching for, where 
            are defined, whether you are searching for just one or more of them,
            if the order is important, etc. Also clasify the stability of such
            API contract.
            </hint>
        </question>
-->
<answer id="lookup-lookup">
    Yes. To get system classloader, ErrorManager, installed modules (for CVS mount wizard).
</answer>



<!-- Question: lookup-register

     <question id="lookup-register">
            Do you register anything into the lookup for other to find? 
            <hint>
            Do you register using layer file or using <code>META-INF/services</code>?
            Who is supposed to find your component?
            </hint>
        </question>
-->
<answer id="lookup-register">
    No.
</answer>



<!-- Question: lookup-remove

     <question id="lookup-remove">
            Are removing entries of other modules from the lookup? 
            <hint>
            Why? Of course, that is possible, but it can be dangerous. Is the module
            your are masking resource from aware of what you are doing?
            </hint>
        </question>
-->
<answer id="lookup-remove">
    No.
</answer>



<!-- Question: perf-exit

     <question id="perf-exit">
            Does your module executes anything on exit?
        </question>
-->
<answer id="perf-exit">
    No, only temporary files are deleted through java.io.File.deleteOnExit()
</answer>



<!-- Question: perf-huge_dialogs

     <question id="perf-huge_dialogs">
            Does your module contain any dialogs or wizards with huge
            amount of GUI controls like combo boxes, lists, trees, text
            areas?
        </question>
-->
<answer id="perf-huge_dialogs">
    There's just a joined CVS mount wizard and an infrastructure for automatic
    creation of simple dialogs as VCS command customizers.
</answer>



<!-- Question: perf-limit

     <question id="perf-limit">
            Are there any limits in number/size of elements your code
            can handle?
        </question>
-->
<answer id="perf-limit">
    No explicit limits. Technically, the available memory size is the limit...
</answer>



<!-- Question: perf-mem

     <question id="perf-mem">
            What is the amount of memory your component occupies? Estimate
            with a relaction to the number of windows, etc.
        </question>
-->
<answer id="perf-mem">
    TBD.
</answer>



<!-- Question: perf-menus

     <question id="perf-menus">
            Does your module use dynamically changing context menus or
            context sensitive actions with complicated logic for enable/disable?
        </question>
-->
<answer id="perf-menus">
    Yes. The VCS commands popup menu can have an arbitrary tree structure,
    various commands can be present on various files.
    There's also an infrastructure for automatic creation of simple dialogs
    as VCS command customizers.
</answer>



<!-- Question: perf-progress

     <question id="perf-progress">
            Does your module executes some long running task?
            <hint>Typically they are tasks like connecting over
            network, computing huge amount of data, compilation.
            Such communication should be done asynchronously (for example
            using <code>RequestProcessor</code>), definitively it should 
            not block AWT thread.
            </hint>
        </question>
-->
<answer id="perf-progress">
    Yes, VCS commands are long running in general. They are executed asynchronously
    with a hardcoded limit of the number concurrently running commands.
</answer>



<!-- Question: perf-scale

     <question id="perf-scale">
            Which external criteria influence the performance of your
            program (size of file in editor, number of files in menu, 
            in source directory, etc.) and how well your code scales?
            Please include some estimates.
        </question>
-->
<answer id="perf-scale">
    The number of files during file status refreshing.
</answer>



<!-- Question: perf-startup

     <question id="perf-startup">
            Does your module executes anything on startup?
        </question>
-->
<answer id="perf-startup">
    No.
</answer>



<!-- Question: perf-wakeup

     <question id="perf-wakeup">
            Is any piece of your code waking up periodically?
        </question>
-->
<answer id="perf-wakeup">
    No.
</answer>



<!-- Question: resources-file

     <question id="resources-file">
            Does your module use <code>java.io.File</code> directly?
            
            <hint>
            NetBeans provide a logical wrapper over plain files called 
            <code>org.openide.filesystems.FileObject</code> that
            provides uniform access to such resources and is the prefered
            way that should be used. But of course there can be situations when
            this is not suitable.
            </hint>
        </question>
-->
<answer id="resources-file">
    Yes, for work associated with VCS commands execution, for temporary files
    and for file status cache storage.
</answer>



<!-- Question: resources-layer

     <question id="resources-layer">
            Does your module provide own layer? Does it create some files or
            folders on it? What it is trying to communicate by that and with which 
            component?
            
            <hint>
            NetBeans allows automatic and declarative installation of resources 
            by module layers. Module register files into appropriate places
            and other components use that information to perform their task
            (build menu, toolbar, window layout, list of templates, set of
            options, etc.). 
            </hint>
        </question>
-->
<answer id="resources-layer">
    Yes, files are created for menus, actions, templates, toolbars,
    settings storage - these are all in standard Open APIs.
</answer>



<!-- Question: resources-mask

     <question id="resources-mask">
            Does your module mask/hide/override any resource provided by another one in
            module layer? 
            
            <hint>
            If you mask a file provided by another module, you probably depend
            on that and do not want the other module to (for example) change
            the file's name. That module shall thus make that file available as an API
            of some stability category.
            </hint>
        </question>
-->
<answer id="resources-mask">
    No.
</answer>



<!-- Question: resources-read

     <question id="resources-read">
            Does your module read any resources from layers? For what purpose?
            
            <hint>
            As this is some kind of intermodule dependency, it is a kind of API.
            Please describe it and clasify according to 
            <a href="http://openide.netbeans.org/tutorial/api-design.html#categories">
            common stability categories</a>.
            </hint>
        </question>
-->
<answer id="resources-read">
    VCS commands written in Java are loaded from DefaultFileSystem.
</answer>

</api-answers>
