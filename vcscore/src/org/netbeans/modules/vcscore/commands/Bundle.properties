# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.


# CommandsPool:
MSG_Command_name_running=Command {0} is running ...
MSG_Command_name_finished=Command {0} finished.
MSG_Command_name_failed=Command {0} failed.
MSG_Command_name_interrupted=Command {0} was interrupted.
MSG_Check_whole_output=Check the full output of the command on the Runtime tab in Explorer. The error output follows:

MSG_Command_preprocessing=Preprocessing {0}, exec = {1}
MSG_Command_canceled=Command {0} was canceled.
MSG_Command_started=Command {0} started, exec = {1}

CMD_Copy=Copy
CMD_Clear=Clear
CMD_Save=Save To File

CommandExitStatus.running=Running
CommandExitStatus.success=Succeeded
CommandExitStatus.finished=Finished
CommandExitStatus.failed=Failed
CommandExitStatus.interrupted=Interrupted
CommandExitStatus.unknown=Unknown

# CommandExecutorSupport:
DLG_DoNotNotify=Do not show the notification next time.
DLG_CanBeEnabled=You can enable the notification again in the filesystem's settings.
DLG_DoNotNotify_mnc=N
DLG_DoNotNotify_acsd=Do not show the notification next time.
DLG_Notification_acsd=Notification of finished VCS command.
MSG_Password=Password:
TITL_Password=Password

# {0} is the name of the command
CommandOutputVisualizer.name={0}
# {0} = file name
# {1} = command name
CommandOutputVisualizer.title_one={1} - {0}
# {0} = number of files
# {1} = command name
CommandOutputVisualizer.title_many={1} - {0} Objects
CommandOutputVisualizer.modeName=Output of VCS Commands
CommandOutputPanel.execStringLabel.text=Execution String:
CommandOutputPanel.execStringLabel.mnemonic=E
CommandOutputPanel.killButton.text=Kill
CommandOutputPanel.killButton.mnemonic=K
ACSD_CommandOutputPanel.killButton=N/A
CommandOutputPanel.killButton.close.text=Close
CommandOutputPanel.statusLabel.text=Status:
CommandOutputPanel.statusLabel.mnemonic=t
CommandOutputPanel.tab.stdOut=Standard Output
CommandOutputPanel.tab.errOut=Standard Error
CommandOutputPanel.tab.stdDataOut=Data Output
CommandOutputPanel.tab.errDataOut=Data Error
CommandOutputPanel.label.noOutput.text=No Output Available
ACSN_CommandOutputPanel.tab.stdOut=Standard Output
ACSD_CommandOutputPanel.tab.stdOut=The command's standard output
ACSN_CommandOutputPanel.tab.errOut=Standard Error
ACSD_CommandOutputPanel.tab.errOut=The command's error output
ACSN_CommandOutputPanel.tab.stdDataOut=Data Output
ACSD_CommandOutputPanel.tab.stdDataOut=The command's data output (usually processed standard output)
ACSN_CommandOutputPanel.tab.errDataOut=Data Error
ACSD_CommandOutputPanel.tab.errDataOut=The command's data error output (usually processed error output)
InteractiveCommandOutputPanel.Input.label=Input:
InteractiveCommandOutputPanel.Input.mnemonic=I
InteractiveCommandOutputPanel.Input.acsd=The input text, that will be sent to the standard input of the command.

SaveToFilePanel.cbDataErr=Include Data Error
SaveToFilePanel.cbDataOut=Include Data Output
SaveToFilePanel.cbStdErr=Include Standard Error
SaveToFilePanel.cbStdOut=Include Standard Output
SaveToFilePanel.btnFile.text=Browse...
SaveToFilePanel.lblFile.text=Save To File\:
SaveToFilePanel.lblFile.mnemonic=S
SaveToFilePanel.btnFile.mnemonic=B
SaveToFilePanel.cbStdOut.mnemonic=O
SaveToFilePanel.cbStdErr.mnemonic=E
SaveToFilePanel.cbDataOut.mnemonic=D
SaveToFilePanel.cbDataErr.mnemonic=r
ACSD_SaveToFilePanel.dialog=Save command output to a file.
ACSN_SaveToFilePanel.lblFile=File Name
ACSD_SaveToFilePanel.lblFile=The name of the file to save the command's output into.
ACSD_SaveToFilePanel.btnFile=Choose the file to save the output into.
ACSD_SaveToFilePanel.cbStdOut=Include the command's standard output into the file.
ACSD_SaveToFilePanel.cbStdErr=Include the command's error output into the file.
ACSD_SaveToFilePanel.cbDataOut=Include the command's data output into the file.
ACSD_SaveToFilePanel.cbDataErr=Include the command's data error output into the file.

SaveToFile.title=Save Command Output To File
SaveToFile.fileExistsQuestion=File {0} already exists. Overwrite?
SaveToFile.errorWhileWriting=Error while writing output of command to file.
CommandOutputVisualizer.killCommand=Are you sure you want to kill the ''{0}'' command?
CommandOutputVisualizer.QuestionTitle=Question
ACSD_CommandOutputPanel.dialog=Command output dialog for various usage of CVS status
ACSN_CommandOutputPanel.tabs=Outputs and errors
ACSD_CommandOutputPanel.tabs=N/A
ACSD_CommandOutputPanel.execStringTextField=N/A
ACSD_CommandOutputPanel.statusValueLabel=N/A
ACSN_CommandOutputVisualizer=Output of VCS Commands
ACSD_CommandOutputVisualizer=This component contains output of VCS commands.


CommandOutputVisualizer.topName=VCS Output


# DialogVisualizerWrapper
DialogVisualizerWrapper.msgCmdRunning=Command {0} is running...
DialogVisualizerWrapper.msgCmdFinished=Command {0} finished.
DialogVisualizerWrapper.btnCancel=Cancel
DialogVisualizerWrapper.btnClose=Close



ACSN_CommandOutputVisualizer.tabPane=Vcs Command Output Pane

ACSD_CommandOutputVisualizer.tabPane=Pane for VCS Commands Output

EMPTY_OUTPUT=<No VCS Output>
