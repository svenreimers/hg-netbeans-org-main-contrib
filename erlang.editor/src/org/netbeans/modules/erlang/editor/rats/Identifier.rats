/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 * 
 * Contributor(s):
 * 
 * Portions Copyrighted 2009 Sun Microsystems, Inc.
 */

/*
 * Definition of Erlang lexical tokens.
 * 
 * @author Caoyuan Deng
 */
module org.netbeans.modules.erlang.editor.rats.Identifier;

import org.netbeans.modules.erlang.editor.rats.Character;
import org.netbeans.modules.erlang.editor.rats.Keyword;
import org.netbeans.modules.erlang.editor.rats.Literal;
import org.netbeans.modules.erlang.editor.rats.Spacing;
import org.netbeans.modules.erlang.editor.rats.Symbol;

transient generic MacroId = SKIP &'?' void:( Separator ( Ws / Nl )* ) ( atomIdentifier / varIdentifier ) ;
transient generic AtomId  = SKIP Atom ;
transient generic VarId   = SKIP Var ;

// ----- Token

transient generic Identifier =
  Macro
/ Atom
/ Var
;

/* &'?' will include '?' to production, we can just add a "Separator" to consume this '?' and get a "Separator" production */
transient generic Macro = &'?' Separator ( Ws / Nl )* ( atomIdentifier / varIdentifier ) ;
transient generic Atom  = atomIdentifier ;
transient generic Var   = varIdentifier ;

transient String atomIdentifier = plainAtomIdentifier / quoteAtomIdentifier ;

transient String varIdentifier       = v:( ( upper / supplementUpper / '_' ) idrest? ) &{ !contains(ERLANG_KEYWORDS, toText(v)) } ;
transient String plainAtomIdentifier = v:( ( lower / supplementLower )       idrest? ) &{ !contains(ERLANG_KEYWORDS, toText(v)) } ;
// should be: ['] ( !['] characterChar )+ ['] , following is for error recover
transient String quoteAtomIdentifier = ['] ( !['] characterChar )* ['] ;

transient String idrest =
  ( letter / [@_] / digit / supplementUpper / supplementLower )+
;
