/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 * 
 * Contributor(s):
 * 
 * Portions Copyrighted 2009 Sun Microsystems, Inc.
 */

/*
 * Definition of Erlang lexical tokens.
 * 
 * @author Caoyuan Deng
 */
module org.netbeans.modules.erlang.editor.rats.Keyword;

import org.netbeans.modules.erlang.editor.rats.Identifier;
import org.netbeans.modules.erlang.editor.rats.Spacing;

body {
  static {
    add(ERLANG_KEYWORDS, new String[] {
      "andalso",
      "after",
      "and",
      "band",
      "begin",
      "bnot",
      "bor",
      "bsl",
      "bsr",
      "bxor",
      "case",
      "catch",
      "cond",
      "div",
      "end",
      "fun",
      "if",
      "not",
      "of",
      "orelse",
      "or",
      "query",
      "receive",
      "rem",
      "try",
      "when",
      "xor"
    });
  }
}

option setOfString(ERLANG_KEYWORDS);

String k = SKIP keyword SKIP_TILL_N ;

// ----- For lexer token

generic Keyword =
    "andalso"   :keyword @Andalso
  / "after"     :keyword @After
  / "and"       :keyword @And
  / "band"      :keyword @Band
  / "begin"     :keyword @Begin
  / "bnot"      :keyword @Bnot
  / "bor"       :keyword @Bor
  / "bsl"       :keyword @Bsl
  / "bsr"       :keyword @Bsr
  / "bxor"      :keyword @Bxor
  / "case"      :keyword @Case
  / "catch"     :keyword @Catch
  / "cond"      :keyword @Cond
  / "div"       :keyword @Div
  / "end"       :keyword @End
  / "fun"       :keyword @Fun
  / "if"        :keyword @If
  / "not"       :keyword @Not
  / "of"        :keyword @Of
  / "orelse"    :keyword @Orelse
  / "or"        :keyword @Or
  / "query"     :keyword @Query
  / "receive"   :keyword @Receive
  / "rem"       :keyword @Rem
  / "try"       :keyword @Try
  / "when"      :keyword @When
  / "xor"       :keyword @Xor
;

String keyword =
  !( ['] )
  ( "andalso"   !( idrest )
  / "after"     !( idrest )
  / "and"       !( idrest )
  / "band"      !( idrest )
  / "begin"     !( idrest )
  / "bnot"      !( idrest )
  / "bor"       !( idrest )
  / "bsl"       !( idrest )
  / "bsr"       !( idrest )
  / "bxor"      !( idrest )
  / "case"      !( idrest )
  / "catch"     !( idrest )
  / "cond"      !( idrest )
  / "div"       !( idrest )
  / "end"       !( idrest )
  / "fun"       !( idrest )
  / "if"        !( idrest )
  / "not"       !( idrest )
  / "of"        !( idrest )
  / "orelse"    !( idrest )
  / "or"        !( idrest )
  / "query"     !( idrest )
  / "receive"   !( idrest )
  / "rem"       !( idrest )
  / "try"       !( idrest )
  / "when"      !( idrest )
  / "xor"       !( idrest )
  )
;

