/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 * 
 * Contributor(s):
 * 
 * Portions Copyrighted 2008 Sun Microsystems, Inc.
 */
package org.netbeans.modules.portalpack.websynergy.servicebuilder.design.view.ui;

import java.awt.Color;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.netbeans.modules.portalpack.portlets.genericportlets.core.util.CoreUtil;
import org.netbeans.modules.portalpack.websynergy.servicebuilder.beans.Column;
import org.netbeans.modules.portalpack.websynergy.servicebuilder.helper.TypeHelper;
import org.openide.util.NbBundle;

/**
 *
 * @author  satyaranjan
 */
public class AddColumnUI extends javax.swing.JDialog implements DocumentListener, ChangeListener{

    private String[] dataTypes = TypeHelper.getDataTypes();
    private String name;
    private String dbName;
    private String type;
    private boolean primaryKey;
    private boolean addMode;

    /** Creates new form AddColumnUI */
    public AddColumnUI(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        setLocation(parent.getX() + (parent.getWidth() - getWidth()) / 2, parent.getY() + (parent.getHeight() - getHeight()) / 2);
        setTitle(NbBundle.getMessage(AddServiceUI.class, "AddColumnUI.title"));
        changeButton.setEnabled(false);
        getRootPane().setDefaultButton(addButton);
        nameTf.getDocument().addDocumentListener(this);
        dbNameTf.getDocument().addDocumentListener(this);
        addMode = true;
        addButton.setEnabled(false);
    //setVisible(true);
    }

    public AddColumnUI(java.awt.Frame parent, Column col) {
        this(parent);
        getRootPane().setDefaultButton(changeButton);
        if (col != null) {

            name = col.getName();
            dbName = col.getDbName();
            type = col.getType();
            String pKey = col.getPrimary();

            nameTf.setText(name);
            nameTf.setEnabled(false);

            if (dbName != null && dbName.length() != 0) {
                dbNameTf.setText(dbName);
            }

            if (type != null && type.length() != 0) {

                typesCB.setSelectedItem(type);
            }

            if (pKey != null && pKey.length() != 0) {
                boolean pk = Boolean.parseBoolean(pKey);
                primaryKeyCB.setSelected(pk);
            }
            addMode = false;
            addButton.setEnabled(false);
            changeButton.setEnabled(true);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameTf = new javax.swing.JTextField();
        dbColNameLabel = new javax.swing.JLabel();
        dbNameTf = new javax.swing.JTextField();
        colType = new javax.swing.JLabel();
        typesCB = new javax.swing.JComboBox(dataTypes);
        jLabel1 = new javax.swing.JLabel();
        primaryKeyCB = new javax.swing.JCheckBox();
        errorLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        changeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Column Details"));

        nameLabel.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.nameLabel.text")); // NOI18N

        nameTf.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.nameTf.text")); // NOI18N

        dbColNameLabel.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.dbColNameLabel.text")); // NOI18N

        dbNameTf.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.dbNameTf.text")); // NOI18N

        colType.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.colType.text")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.jLabel1.text")); // NOI18N

        primaryKeyCB.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.primaryKeyCB.text")); // NOI18N

        errorLabel.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.errorLabel.text")); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(nameLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                                        .add(35, 35, 35))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(dbColNameLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                        .add(1, 1, 1))
                                    .add(colType, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                                .add(24, 24, 24))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel1)
                                .add(63, 63, 63)))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(typesCB, 0, 198, Short.MAX_VALUE)
                                    .add(dbNameTf, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                    .add(nameTf, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                                .add(68, 68, 68))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(primaryKeyCB)
                                .addContainerGap(245, Short.MAX_VALUE))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(errorLabel)
                        .addContainerGap(393, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(nameTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(nameLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(dbColNameLabel)
                    .add(dbNameTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(colType)
                    .add(typesCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(primaryKeyCB))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 26, Short.MAX_VALUE)
                .add(errorLabel))
        );

        addButton.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.addButton.text")); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        changeButton.setText(org.openide.util.NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.changeButton.text")); // NOI18N
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(200, 200, 200)
                        .add(addButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(changeButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(addButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(cancelButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(changeButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
// TODO add your handling code here:
    name = nameTf.getText();
    dbName = dbNameTf.getText();
    primaryKey = primaryKeyCB.isSelected();
    type = (String) typesCB.getSelectedItem();
    dispose();
}//GEN-LAST:event_addButtonActionPerformed

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
// TODO add your handling code here:
    name = null;
    dbName = null;
    type = null;

    dispose();
}//GEN-LAST:event_cancelButtonActionPerformed

private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
// TODO add your handling code here:
    name = nameTf.getText();
    dbName = dbNameTf.getText();
    primaryKey = primaryKeyCB.isSelected();
    type = (String) typesCB.getSelectedItem();
    dispose();
}//GEN-LAST:event_changeButtonActionPerformed

    public String getName() {
        return name;
    }

    public String getDbName() {
        return dbName;
    }

    public boolean isPrimaryKey() {
        return primaryKey;
    }

    public String getType() {
        return type;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                AddColumnUI dialog = new AddColumnUI(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton changeButton;
    private javax.swing.JLabel colType;
    private javax.swing.JLabel dbColNameLabel;
    private javax.swing.JTextField dbNameTf;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTf;
    private javax.swing.JCheckBox primaryKeyCB;
    private javax.swing.JComboBox typesCB;
    // End of variables declaration//GEN-END:variables

    private void setErrorMessage(String msg) {
        errorLabel.setForeground(Color.RED);
        errorLabel.setText(msg);
    }

    public void insertUpdate(DocumentEvent e) {
        updateText(e);
    }

    public void removeUpdate(DocumentEvent e) {
        updateText(e);
    }

    public void changedUpdate(DocumentEvent e) {
        updateText(e);
    }

    private void updateText(DocumentEvent e) {
        if(addMode && !valid()) {
            addButton.setEnabled(false);
        } else if (!addMode && !valid()){
            //setErroMessage("");
            changeButton.setEnabled(false);
        } else if (!addMode && valid()){
            setErrorMessage("");
            changeButton.setEnabled(true);
        } else if (addMode && valid()){
            // Add mode and Valid
            setErrorMessage("");
            addButton.setEnabled(true);
        }
    }
    public void stateChanged(ChangeEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
     public boolean valid() {
        String columnName = nameTf.getText();
        String dbColumnName = dbNameTf.getText();
        if ((columnName == null || columnName.trim().length() == 0) || !CoreUtil.validateJavaTypeName(columnName)) {
            setErrorMessage(NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.errorLabel.columnname"));
            return false;
        } 
        if (dbColumnName.trim().length() != 0 && !CoreUtil.validateString(dbColumnName, false)) {
                setErrorMessage(NbBundle.getMessage(AddColumnUI.class, "AddColumnUI.errorLabel.dbcolumnname"));
                return false;
        }
        return true;
     }
}
