/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

abstract interface A {
    void opA ();
};

interface B : A {
    void opB ();
};

valuetype D {
    void opD ();
};

valuetype E : D supports B {
    readonly attribute A aa;
    private boolean bo;
    factory init (in B bb);
    factory init2 (in long x, in char acd);
};

exception Exc {
    string message;
};

module M {
    abstract
	interface B {};
    interface A : B {
        ::M::B op (in ::M::B aa, inout ::M::B bb, out ::M::B cc) raises (Exc) context ("a*");
    };
};

struct S {
    long LL;
    struct S2 {
        boolean bb;
        char cc;
    } sss;
};

union U switch (long) {
    case 0: long L1;
    case 1: string<20> S1;
    default: boolean B1;
};

typedef ::M::B C;
typedef B CR;

valuetype VT {
    attribute long PA;
};
valuetype VT2 : VT {
    public long PL;
    private long ax;
};

valuetype VT3 : VT supports A, B {
};

valuetype VT4 {
    private long ax;
};


custom valuetype VT5 {
};

valuetype VT6 : truncatable VT4 {
};

const string STR = "\"A\"\n";
const char CH = '\n';
const long LO = 10;
const float FL = 0.45;

typedef VT4 VT410[10];
typedef sequence<sequence<string,1> > SEQSEQ;
