/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

#ifndef __TEST1_IDL__
#define __TEST1_IDL__

//1typedef string blabol;

enum colors {RED, GREEN, BLUE};

typedef struct struct1 {
  struct structin {
    string value;
  } he;
  long long1;
  string string1;
} member_struct1;

struct strx1 {
  member_struct1 member_of_struct1;
  long ha;
};

typedef sequence<member_struct1> struct1_sequence, asdbf12;

const string MSG = "Hello World!!!";

interface test1 {
  void operace1 ();
  readonly attribute string at1, at2,at3;
  attribute string name2, namex;
  struct struct2 {
    long long2;
    string string2;
  };

  string operace2 ();
  string <10> operace3 ();
  member_struct1 operace4 (in member_struct1 value);
};


const long MAX = 100 * 10;


typedef octet Bytes[64];

struct S { long len; };

interface foo;

union U switch (long) {
  case 1: long x;
  case 2: Bytes y;
  case 3: string z;
  case 4:
  case 5: S w;
  case 6: long array[ 10 ][ 20 ];
  case 7: sequence<long> seq;
 default: foo obj;
};

typedef union UT switch (long) {
  case 1: long x;
  case 2: Bytes y;
  case 3: string z;
  case 4:
  case 5: S w;
  case 6: long array[ 10 ][ 20 ];
  case 7: sequence<long> seq;
 default: foo obj;
} test_union1;


exception UnknownState {
  string reason;
  long value;
};

interface test2 : test1 {
  exception BadList {
    string reason;
  }; 
  typedef sequence <string> list_of_string;
  //struct2 operace4 (in struct1 value);
  string <10> tone1 (in list_of_string plist, inout member_struct1 arg2,
                              out string name) raises (BadList)
                              context ("xc1", "kc2");
  void op3 (in member_struct1 val1, inout list_of_string args)
            raises (BadList);
};


interface test3 : test2, test1 {
  struct nested {
    struct child {
      long l1;
      string str1;
    } ch1, ch2;
  };
};

interface foo : test3 {};

//interface test4 : test3, test2, test1 {
//};
#endif