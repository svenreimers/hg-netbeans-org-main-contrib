/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

module TestWOBTN {

	typedef string MyString;
	typedef string<8> ShortString;
	typedef MyString StringArray [16];
	typedef sequence <MyString> UnboundedArray;
	typedef sequence <sequence <MyString> > DoubleUnboundedArray;
	typedef sequence <MyString, 8> UpperBoundedArray;

	struct Simple {
		short a;
		long b;
		octet c;
	};

//	struct BTreeNode {
//		sequence <BTreeNode,1> left;
//		sequence <BTreeNode,1> right;
//		Simple value;
//	};

	struct Harder {
		string a;
		long arr [10];
		sequence <double> xx;
	};

	exception Failure {
	};

	exception HardFailure {
		string reason;
		long major;
		long minor;
	};

	enum State {Good, Bad, Medium};

	union RetValue switch (State) {
		case Good:
			long a;
		case Bad:
			short b;
		case Medium:
			double c;
	};


	union XVal switch (short) {
		case 1:
			long a;
		case 2:
			short b;
		case 3:
			double c;
		default:
			float d;
	};


	interface DObject {
		void addRef();
		void release();
		Object query_interface (in string irid);
	};


	interface Left : DObject {
		void perform (in string value) raises (Failure, HardFailure) context ("os.version");
		oneway void addListener (in Object obj);
		oneway void removeListener (in Object obj);
	};

	interface Right : DObject {
		typedef sequence <octet> CoreDump;
		CoreDump core ();
	};

	
	interface DObjectPP : Left, Right {

		exception Killed {
		};
		
		readonly attribute State inner_state;
		attribute string name;

		void push (inout any value);
	};
	
	const long Const10 = 10;
	const string Str = "asd";
	const char Chr = 'a';
//	const wstring StrU = L"aa";
};

