Processing: Command: SETORB File: OB4X
Done
Processing: Command: SETSKEL File: INHER
Done
Processing: Command: SETDEL File: VIRTUAL
Done
Processing: Command: SETGEN File: EXCEPTION
Done
Processing: Command: SETSYNCCOUNT File: 0
Processing: Command: GEN File: data/synchro/b6/Empty.idl
GEN: Synchronizing: Count: 0 File: data/synchro/b6/Empty.idl
Done
Processing: Command: DUMP File: data/synchro/b6/CImpl.java
DUMP: File: data/synchro/b6/CImpl.java
---- beginning of file ----
public class CImpl extends data.synchro.b6.CPOA {
    private data.synchro.b6.AImpl _M_variable_of_type_A;
    
    public CImpl() {
        this._initialize_inheritance_tree();
    }
    
    public void _initialize_inheritance_tree() {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_A = new data.synchro.b6.AImpl();
        
    }
    
    public void _set_parent_of_type_A(data.synchro.b6.AImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_A = __value;
    }
    
    public void op1() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_A.op1();
    }
    
    public void op2b() {
        throw new UnsupportedOperationException();
    }
    
    
}
---- end of file ----
Done
Processing: Command: DUMP File: data/synchro/b6/DImpl.java
DUMP: File: data/synchro/b6/DImpl.java
---- beginning of file ----
public class DImpl extends data.synchro.b6.DPOA {
    private data.synchro.b6.AImpl _M_variable_of_type_A;
    
    private data.synchro.b6.BImpl _M_variable_of_type_B;
    
    private data.synchro.b6.CImpl _M_variable_of_type_C;
    
    public DImpl() {
        this._initialize_inheritance_tree();
    }
    
    public void _initialize_inheritance_tree() {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_A = new data.synchro.b6.AImpl();
        
        _M_variable_of_type_B = new data.synchro.b6.BImpl();
        // set parents for IDL:B:1.0
        _M_variable_of_type_B._set_parent_of_type_A(_M_variable_of_type_A);
        
        _M_variable_of_type_C = new data.synchro.b6.CImpl();
        // set parents for IDL:C:1.0
        _M_variable_of_type_C._set_parent_of_type_A(_M_variable_of_type_A);
        
    }
    
    public void _set_parent_of_type_A(data.synchro.b6.AImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_A = __value;
    }
    
    public void _set_parent_of_type_B(data.synchro.b6.BImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_B = __value;
    }
    
    public void _set_parent_of_type_C(data.synchro.b6.CImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_C = __value;
    }
    
    public void op1() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_B.op1();
    }
    
    public void op2a() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_B.op2a();
    }
    
    public void op2b() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_C.op2b();
    }
    
    public void op3() {
        throw new UnsupportedOperationException();
    }
    
    
}
---- end of file ----
Done
Processing: Command: DUMP File: data/synchro/b6/EImpl.java
DUMP: File: data/synchro/b6/EImpl.java
---- beginning of file ----
public class EImpl extends data.synchro.b6.EPOA {
    private data.synchro.b6.AImpl _M_variable_of_type_A;
    
    private data.synchro.b6.BImpl _M_variable_of_type_B;
    
    private data.synchro.b6.CImpl _M_variable_of_type_C;
    
    private data.synchro.b6.DImpl _M_variable_of_type_D;
    
    public EImpl() {
        this._initialize_inheritance_tree();
    }
    
    public void _initialize_inheritance_tree() {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_A = new data.synchro.b6.AImpl();
        
        _M_variable_of_type_B = new data.synchro.b6.BImpl();
        // set parents for IDL:B:1.0
        _M_variable_of_type_B._set_parent_of_type_A(_M_variable_of_type_A);
        
        _M_variable_of_type_C = new data.synchro.b6.CImpl();
        // set parents for IDL:C:1.0
        _M_variable_of_type_C._set_parent_of_type_A(_M_variable_of_type_A);
        
        _M_variable_of_type_D = new data.synchro.b6.DImpl();
        // set parents for IDL:D:1.0
        _M_variable_of_type_D._set_parent_of_type_B(_M_variable_of_type_B);
        _M_variable_of_type_D._set_parent_of_type_A(_M_variable_of_type_A);
        _M_variable_of_type_D._set_parent_of_type_C(_M_variable_of_type_C);
        
    }
    
    public void _set_parent_of_type_A(data.synchro.b6.AImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_A = __value;
    }
    
    public void _set_parent_of_type_B(data.synchro.b6.BImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_B = __value;
    }
    
    public void _set_parent_of_type_C(data.synchro.b6.CImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_C = __value;
    }
    
    public void _set_parent_of_type_D(data.synchro.b6.DImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_D = __value;
    }
    
    public void op1() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_D.op1();
    }
    
    public void op2a() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_D.op2a();
    }
    
    public void op2b() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_D.op2b();
    }
    
    public void op3() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_D.op3();
    }
    
    
}
---- end of file ----
Done
Processing: Command: SETSKEL File: INHER
Done
Processing: Command: SETDEL File: STATIC
Done
Processing: Command: SETGEN File: EXCEPTION
Done
Processing: Command: SETSYNCCOUNT File: 0
Processing: Command: GEN File: data/synchro/b6/Empty_1.idl
GEN: Synchronizing: Count: 0 File: data/synchro/b6/Empty_1.idl
Done
Processing: Command: DUMP File: data/synchro/b6/CImpl.java
DUMP: File: data/synchro/b6/CImpl.java
---- beginning of file ----
public class CImpl extends data.synchro.b6.CPOA {
    public CImpl() {
        this._initialize_inheritance_tree();
    }
    
    public void _initialize_inheritance_tree() {
        // Do not edit! This is a method which is necessary for using delegation.
    }
    
    public void op1() {
        throw new UnsupportedOperationException();
    }
    
    public void op2b() {
        throw new UnsupportedOperationException();
    }
    
    
}
---- end of file ----
Done
Processing: Command: DUMP File: data/synchro/b6/DImpl.java
DUMP: File: data/synchro/b6/DImpl.java
---- beginning of file ----
public class DImpl extends data.synchro.b6.DPOA {
    private data.synchro.b6.CImpl _M_variable_of_type_C;
    
    public DImpl() {
        this._initialize_inheritance_tree();
    }
    
    public void _initialize_inheritance_tree() {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_C = new data.synchro.b6.CImpl();
        
    }
    
    public void _set_parent_of_type_C(data.synchro.b6.CImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_C = __value;
    }
    
    public void op1() {
        throw new UnsupportedOperationException();
    }
    
    public void op2a() {
        throw new UnsupportedOperationException();
    }
    
    public void op2b() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_C.op2b();
    }
    
    public void op3() {
        throw new UnsupportedOperationException();
    }
    
    
}
---- end of file ----
Done
Processing: Command: DUMP File: data/synchro/b6/EImpl.java
DUMP: File: data/synchro/b6/EImpl.java
---- beginning of file ----
public class EImpl extends data.synchro.b6.EPOA {
    private data.synchro.b6.CImpl _M_variable_of_type_C;
    
    private data.synchro.b6.DImpl _M_variable_of_type_D;
    
    public EImpl() {
        this._initialize_inheritance_tree();
    }
    
    public void _initialize_inheritance_tree() {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_C = new data.synchro.b6.CImpl();
        
        _M_variable_of_type_D = new data.synchro.b6.DImpl();
        // set parents for IDL:D:1.0
        _M_variable_of_type_D._set_parent_of_type_C(_M_variable_of_type_C);
        
    }
    
    public void _set_parent_of_type_C(data.synchro.b6.CImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_C = __value;
    }
    
    public void _set_parent_of_type_D(data.synchro.b6.DImpl __value) {
        // Do not edit! This is a method which is necessary for using delegation.
        _M_variable_of_type_D = __value;
    }
    
    public void op1() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_D.op1();
    }
    
    public void op2a() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_D.op2a();
    }
    
    public void op2b() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_C.op2b();
    }
    
    public void op3() {
        // Do not edit! This is a delegation method.
        _M_variable_of_type_D.op3();
    }
    
    
}
---- end of file ----
Done
