#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2001 Sun
# Microsystems, Inc. All Rights Reserved.

### Bundle.properties -- Resource bundle for com.netbeans.enterprise.modules.corba


#CORBASupportSettings
  CTL_CORBASupport_options=CORBA Support


CTL_GenerateImpl=Generate Implementation  

#CORBASupport
  PROP_ORB=ORB Version
  HINT_ORB=ORB Version

## ORB Implementations
  CTL_Orbix=OrbixWeb 3.x
  CTL_Visibroker=VisiBroker for Java 3.x
  CTL_Orbacus=ORBacus for Java 3.1.x
  CTL_JavaORB=JavaORB 1.2.4

  PROP_SKELS=Generated skeletons
  HINT_SKELS=Generated skeletons - inheritance based / tie based

  CTL_Inher=inheritance based
  CTL_Tie=tie based

  PROP_IDL=External IDL compiler
  HINT_IDL=Path to external IDL compiler

PROP_PARAMS=Parameters for IDL compiler
HINT_PARAMS=Parameters for IDL compiler
PROP_PACKAGE_PARAM=Package specify parameter
HINT_PACKAGE_PARAM=Parameter for specify package for generated classes
PROP_DIR_PARAM=Directory specify parameter
HINT_DIR_PARAM=Parameter for specify directory for generated classes

# for idl
PROP_Name=Name
HINT_Name=Name of idl file object
PROP_Extensions=Extensions
HINT_Extensions=A set of possible extensions

PROP_IDLLoader_Name=IDL Objects

CTL_SERVER_NS=Naming Service
CTL_SERVER_IOR_TO_FILE=IOR to file
CTL_SERVER_IOR_TO_OUTPUT=IOR to standard output
CTL_SERVER_BINDER=Proprietary Binder

CTL_CLIENT_NS=Naming Service
CTL_CLIENT_IOR_FROM_FILE=IOR from file
CTL_CLIENT_IOR_FROM_INPUT=IOR from standard input
CTL_CLIENT_BINDER=Proprietary Binder

PROP_SERVER_BINDING=Server binding
HINT_SERVER_BINDING=Style of Server binding


PROP_CLIENT_BINDING=Client binding

HINT_CLIENT_BINDING=Style of Client binding

#CTL_ORBIX_IMPORT=import IE.Iona.OrbixWeb._OrbixWeb;\nimport IE.Iona.OrbixWeb._CORBA;\nimport org.omg.CORBA.*;\nimport java.io.*;\nimport java.util.*;\n
#CTL_ORBIX_SETTINGS_ORB_PROPERTIES=// settings system properties is necessary for use ORBIX for Java in Java 1.2\n    Properties props = System.getProperties ();\n    props.put ("org.omg.CORBA.ORBClass", "com.iona.ORBIX");\n    props.put ("org.omg.CORBA.ORBSingletonClass", "com.ooc.CORBA.ORBIXSingleton");\n
#CTL_ORBIX_ORB_SERVER_INIT=// create ORB and BOA\n    ORB orb = ORB.init (args, props);\n    BOA boa = ((com.iona.ORB)orb).BOA_init (args, props);\n\n    //\n    // add your creating of object implementation here\n
#CTL_ORBIX_ORB_CLIENT_INIT=// create ORB\n    ORB orb = ORB.init (args, props);\n    //\n

#CTL_ORBIX_SERVER_NS=//Orbix Server NS
#CTL_ORBIX_SERVER_IOR_TO_FILE=//Orbix IOR to file
#CTL_ORBIX_SERVER_IOR_TO_OUTPUT=//Orbix IOR to output
#CTL_ORBIX_SERVER_BINDER=//Orbix binder

#CTL_ORBIX_CLIENT_NS=//Orbix Client NS
#CTL_ORBIX_CLIENT_IOR_FROM_FILE=//Orbix IOR from file
#CTL_ORBIX_CLIENT_IOR_FROM_INPUT=//Orbix IOR from input
#CTL_ORBIX_CLIENT_BINDER=//Orbix Client binder

#CTL_ORBIX_DIR_PARAM=-jO 
#CTL_ORBIX_PACKAGE_PARAM=-jP 
#CTL_ORBIX_COMPILER=idl
#CTL_ORBIX_PACKAGE_DELIMITER=.
#CTL_ORBIX_ERROR_EXPRESSION=^([0-9]+):(.*): (.*)
#CTL_ORBIX_FILE_POSITION=-1
#CTL_ORBIX_LINE_POSITION=1
#CTL_ORBIX_COLUMN_POSITION=-1
#CTL_ORBIX_MESSAGE_POSITION=3


#CTL_VISIBROKER_IMPORT=import org.omg.CORBA.*;\nimport java.io.*;\nimport java.util.*;\n
#CTL_VISIBROKER_SETTINGS_ORB_PROPERTIES=// settings system properties is necessary for use VISIBROKER for Java in Java 1.2\n    Properties props = System.getProperties ();\n    props.put ("org.omg.CORBA.ORBClass", "com.visigenic.vbroker.orb.ORB");\n    props.put ("org.omg.CORBA.ORBSingletonClass", "com.visigenic.vbroker.orb.ORB");\n    System.setProperties (props);\n
#CTL_VISIBROKER_ORB_SERVER_INIT=// create ORB and BOA\n    ORB orb = ORB.init (args, props);\n    BOA boa = ((com.visigenic.vbroker.orb.ORB)orb).BOA_init (args, props);\n\n    //\n    // add your creating of object implementation here\n
#CTL_VISIBROKER_ORB_CLIENT_INIT=// create ORB\n    ORB orb = ORB.init (args, props);\n

#CTL_VISIBROKER_SERVER_NS=//Visibroker Server NS
#CTL_VISIBROKER_SERVER_IOR_TO_FILE=//Visibroker IOR to file
#CTL_VISIBROKER_SERVER_IOR_TO_OUTPUT=//Visibroker IOR to output
#CTL_VISIBROKER_SERVER_BINDER=//Visibroker binder

#CTL_VISIBROKER_CLIENT_NS=//Visibroker Client NS
#CTL_VISIBROKER_CLIENT_IOR_FROM_FILE=//Visibroker IOR from file
#CTL_VISIBROKER_CLIENT_IOR_FROM_INPUT=//Visibroker IOR from input
#CTL_VISIBROKER_CLIENT_BINDER=//Visibroker Client binder

#CTL_VISIBROKER_DIR_PARAM=-root_dir 
#CTL_VISIBROKER_PACKAGE_PARAM=-package 
#CTL_VISIBROKER_COMPILER=idl2java
#CTL_VISIBROKER_PACKAGE_DELIMITER=.
#CTL_VISIBROKER_ERROR_EXPRESSION=^"([^ ]+)":([0-9]+): (.*)
#CTL_VISIBROKER_FILE_POSITION=1
#CTL_VISIBROKER_LINE_POSITION=2
#CTL_VISIBROKER_COLUMN_POSITION=-1
#CTL_VISIBROKER_MESSAGE_POSITION=3

#CTL_ORBACUS_IMPORT=import org.omg.CORBA.*;\nimport java.io.*;\nimport java.util.*;\n
#CTL_ORBACUS_IMPORT_WITH_NS=import org.omg.CORBA.*;\nimport java.io.*;\nimport java.util.*;\nimport import org.omg.CosNaming.*;\nimport org.omg.CosNaming.NamingContextPackage.*;\n

#CTL_ORBACUS_SETTINGS_ORB_PROPERTIES=// settings system properties is necessary for use ORBacus for Java in Java 1.2\n    Properties props = System.getProperties ();\n    props.put ("org.omg.CORBA.ORBClass", "com.ooc.CORBA.ORB");\n    props.put ("org.omg.CORBA.ORBSingletonClass", "com.ooc.CORBA.ORBSingleton");\n    System.setProperties (props);\n
#CTL_ORBACUS_ORB_SERVER_INIT=// create ORB and BOA\n    ORB orb = ORB.init (args, props);\n    BOA boa = ((com.ooc.CORBA.ORB)orb).BOA_init (args, props);\n\n    //\n    // add your creating of object implementation here\n
#CTL_ORBACUS_ORB_CLIENT_INIT=// create ORB\n    ORB orb = ORB.init (args, props);\n

#CTL_ORBACUS_SERVER_NS=//Orbacus Server NS
#CTL_ORBACUS_SERVER_IOR_TO_FILE=//Orbacus IOR to file\n    // add your object implementation between parenthesis\n    String ior = orb.object_to_string ();\n    try {\n      FileOutputStream file = new java.io.FileOutputStream("ior.txt");\n      PrintStream pfile=new java.io.PrintStream(file);\n      pfile.println (ior);\n    } catch (IOException ex) {\n      System.out.println("file error");\n    }\n\n    boa.impl_is_ready (null);\n
#CTL_ORBACUS_SERVER_IOR_TO_OUTPUT=//Orbacus IOR to output\n    System.out.println (orb.object_to_string (// place here your object));\n    boa.impl_is_ready (null);\n
#CTL_ORBACUS_SERVER_BINDER=//Orbacus binder

#CTL_ORBACUS_CLIENT_NS=//Orbacus Client NS
#CTL_ORBACUS_CLIENT_IOR_FROM_FILE=//Orbacus IOR from file\n    org.omg.CORBA.Object o = null;\n    try {\n      FileInputStream file = new java.io.FileInputStream("ior.txt");\n      DataInputStream input = new java.io.DataInputStream(file);\n      String target = input.readLine();\n      o = orb.string_to_object(target);\n    } catch (IOException ex) {\n      System.out.println("file error");\n      System.exit(0);\n    }\n    // add your code here

#CTL_ORBACUS_CLIENT_IOR_FROM_INPUT=//Orbacus IOR from input\n    String ior = null;\n    try {\n      DataInputStream dataIn = new DataInputStream(System.in);\n      BufferedReader in = new BufferedReader(new InputStreamReader(dataIn));\n      ior = in.readLine();\n    } catch (IOException e) {\n      System.out.println (e);\n    }\n    org.omg.CORBA.Object o = orb.string_to_object (ior);\n    if (o == null)\n       throw new RuntimeException ();\n    // add your code here


#CTL_ORBACUS_CLIENT_BINDER=//Orbacus Client binder

#CTL_ORBACUS_DIR_PARAM=--output-dir 
#CTL_ORBACUS_PACKAGE_PARAM=--package 
#CTL_ORBACUS_COMPILER=jidl
#CTL_ORBACUS_PACKAGE_DELIMITER=.
#CTL_ORBACUS_ERROR_EXPRESSION=^([^ ]+):([0-9]+): (.*)
#CTL_ORBACUS_FILE_POSITION=1
#CTL_ORBACUS_LINE_POSITION=2
#CTL_ORBACUS_COLUMN_POSITION=-1
#CTL_ORBACUS_MESSAGE_POSITION=3


#CTL_JAVAORB_IMPORT=import org.omg.CORBA.*;\nimport java.io.*;\nimport java.util.*;\n
#CTL_JAVAORB_SETTINGS_ORB_PROPERTIES=// settings system properties is necessary for use JavaORB  in Java 1.2\n    Properties props = System.getProperties ();\n    props.put ("org.omg.CORBA.ORBClass", "JavaORB.CORBA.ORBSingleton");\n    props.put ("org.omg.CORBA.ORBSingletonClass", "JavaORB.CORBA.ORBSingleton");\n    System.setProperties (props);\n
#CTL_JAVAORB_ORB_SERVER_INIT=// create ORB and BOA\n    ORB orb = ORB.init (args, props);\n    BOA boa = BOA.init (orb, args);\n\n    //\n    // add your creating of object implementation here\n
#CTL_JAVAORB_ORB_CLIENT_INIT=// create ORB\n    ORB orb = ORB.init (args, props);\n

#CTL_JAVAORB_SERVER_NS=//JavaORB Server NS
#CTL_JAVAORB_SERVER_IOR_TO_FILE=//JavaORB IOR to file\n    String ior = orb.object_to_string (\\ implementation);\n    try {\n      FileOutputStream file = new FileOutputStream ("<file_name>");\n      PrintStream out = new PrintStream (file);\n      out.println (ior);\n    } catch (IOException ex) {\n      System.out.println("File error");\n    }

#CTL_JAVAORB_SERVER_IOR_TO_OUTPUT=System.out.println (orb.object_to_string (// place your implemenation here));\n\n    boa.impl_is_ready (null);\n
#CTL_JAVAORB_SERVER_BINDER=//JavaORB binder

#CTL_JAVAORB_CLIENT_NS=//JavaORB Client NS
#CTL_JAVAORB_CLIENT_IOR_FROM_FILE=//JavaORB IOR from file\n    org.omg.CORBA.Object obj = null;\n    try {\n      FileInputStream file = new FileInputStream("<file_name>");\n      DataInputStream in = new DataInputStream(file);\n      String ior = in.readLine();\n      obj = orb.string_to_object(ior);\n    } catch (java.io.IOException ex) {\n      System.out.println("File error");\n      System.exit(0);\n    }\n    // now you must narrow from obj to your object\n

#CTL_JAVAORB_CLIENT_IOR_FROM_INPUT=//JavaORB IOR from input\n    String ior = null;\n    try {\n      DataInputStream dataIn = new DataInputStream(System.in);\n      BufferedReader in = new BufferedReader(new InputStreamReader(dataIn));\n      ior = in.readLine();\n    } catch (IOException e) {\n      System.out.println (e);\n    }    org.omg.CORBA.Object obj = orb.string_to_object (ior);\n    if (o == null)\n       throw new RuntimeException ();\n    // now you must narrow from obj to your object\n

#CTL_JAVAORB_CLIENT_BINDER=//JavaORB Client binder





#CTL_JAVAORB_DIR_PARAM=-outdir:
#CTL_JAVAORB_PACKAGE_PARAM=-package:
#CTL_JAVAORB_COMPILER=idl2java
#CTL_JAVAORB_PACKAGE_DELIMITER=.
#CTL_JAVAORB_ERROR_EXPRESSION=^([^ ]+), Line ([0-9]+) : (.*)
#CTL_JAVAORB_FILE_POSITION=1
#CTL_JAVAORB_LINE_POSITION=2
#CTL_JAVAORB_COLUMN_POSITION=-1
#CTL_JAVAORB_MESSAGE_POSITION=3







