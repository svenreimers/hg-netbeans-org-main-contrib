/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

package org.netbeans.modules.corba.wizard.nodes.gui;

import org.netbeans.modules.corba.wizard.nodes.utils.IdlUtilities;
/**
 *
 * @author  tzezula
 */
public class ForwardDclPanel extends ExPanel implements javax.swing.event.DocumentListener, java.awt.event.ActionListener {

    javax.swing.ButtonGroup group = new javax.swing.ButtonGroup();

    /** Creates new form FrowardDclPanel */
    public ForwardDclPanel() {
        initComponents();
        postInitComponents();
    }


    private void postInitComponents () {
        this.group.add (this.intf);
        this.group.add (this.vt);
        this.intf.setSelected (true);
        this.jTextField1.getDocument().addDocumentListener (this);
        this.intf.addActionListener(this);
        this.vt.addActionListener (this);
        this.jLabel1.setDisplayedMnemonic (this.bundle.getString("TXT_ModuleName_MNE").charAt(0));
        this.vt.setMnemonic (this.bundle.getString("TXT_ValueType_MNE").charAt(0));
        this.intf.setMnemonic (this.bundle.getString("TXT_Interface_MNE").charAt(0));
        this.getAccessibleContext().setAccessibleDescription (this.bundle.getString("AD_ForwardDclPanel"));
    }
    
    
    public String getName () {
        return this.jTextField1.getText().trim();
    }
    
    public void setName (String name) {
        this.jTextField1.setText (name);
    }
    
    public boolean isInterface () {
        return this.intf.isSelected();
    }
    
    public boolean isValuetype () {
        return this.vt.isSelected();
    }
    
    public void setInterface (boolean value) {
        if (value)
            this.intf.setSelected (true);
        else
            this.vt.setSelected (true);
    }
    
    public void setValuetype (boolean value) {
        if (value)
            this.vt.setSelected (true);
        else
            this.intf.setSelected (true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        intf = new javax.swing.JRadioButton();
        vt = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(250, 100));
        jLabel1.setText(bundle.getString("TXT_ModuleName"));
        jLabel1.setLabelFor(jTextField1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 4, 4);
        add(jLabel1, gridBagConstraints);

        jTextField1.setToolTipText(bundle.getString("TIP_FwdName"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(8, 4, 4, 8);
        add(jTextField1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        intf.setToolTipText(bundle.getString("TIP_InterfaceFwd"));
        intf.setText(bundle.getString("TXT_Interface"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        jPanel1.add(intf, gridBagConstraints);

        vt.setToolTipText(bundle.getString("TIP_FwdValue"));
        vt.setText(bundle.getString("TXT_ValueType"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel1.add(vt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 8, 8);
        add(jPanel1, gridBagConstraints);

    }//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton vt;
    private javax.swing.JRadioButton intf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private static final java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle");    

    private void checkState () {
        if (IdlUtilities.isValidIDLIdentifier(this.jTextField1.getText()))
            this.enableOk();
        else
            this.disableOk();
    }
    
    public void changedUpdate(javax.swing.event.DocumentEvent p1) {
        checkState();
    }
    
    public void removeUpdate(javax.swing.event.DocumentEvent p1) {
        checkState();
    }
    
    public void insertUpdate(javax.swing.event.DocumentEvent p1) {
        checkState();
    }
    
    public void actionPerformed (java.awt.event.ActionEvent event) {
        checkState();
    }
    
}
