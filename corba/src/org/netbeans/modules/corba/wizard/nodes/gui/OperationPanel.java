/*
 *                 Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 * 
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2001 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.corba.wizard.nodes.gui;

import javax.swing.event.DocumentListener;
/** 
 *
 * @author  root
 * @version 
 */
public class OperationPanel extends ExPanel implements DocumentListener {

  /** Creates new form OperationPanel */
  public OperationPanel() {
    initComponents ();
    postInitComponents ();
  }
  
  public String getName () {
    return this.name.getText ();
  }
  
  public String getReturnType () {
    return this.ret.getText ();
  }
  
  public String getParameters () {
    return this.params.getText ();
  }
  
  public String getExceptions () {
    return this.except.getText ();
  }
  
  public String getContext () {
    return this.ctx.getText ();
  }
  
  public boolean isOneway () {
    return this.oneway.isSelected ();
  }

  private void postInitComponents () {
    this.name.getDocument().addDocumentListener (this);
    this.ret.getDocument().addDocumentListener(this);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      jLabel4 = new javax.swing.JLabel();
      jLabel5 = new javax.swing.JLabel();
      name = new javax.swing.JTextField();
      ret = new javax.swing.JTextField();
      params = new javax.swing.JTextField();
      except = new javax.swing.JTextField();
      ctx = new javax.swing.JTextField();
      oneway = new javax.swing.JCheckBox();
      setLayout(new java.awt.GridBagLayout());
      java.awt.GridBagConstraints gridBagConstraints1;
      setPreferredSize(new java.awt.Dimension(250, 160));

      jLabel1.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TXT_ModuleName"));
      jLabel1.setLabelFor(name);

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.insets = new java.awt.Insets(8, 8, 4, 4);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      add(jLabel1, gridBagConstraints1);


      jLabel2.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TXT_Return"));
      jLabel2.setLabelFor(ret);

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 0;
      gridBagConstraints1.gridy = 1;
      gridBagConstraints1.insets = new java.awt.Insets(4, 8, 4, 4);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      add(jLabel2, gridBagConstraints1);


      jLabel3.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TXT_Params"));
      jLabel3.setLabelFor(params);

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 0;
      gridBagConstraints1.gridy = 2;
      gridBagConstraints1.insets = new java.awt.Insets(4, 8, 4, 4);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      add(jLabel3, gridBagConstraints1);


      jLabel4.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TXT_Except"));
      jLabel4.setLabelFor(except);

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 0;
      gridBagConstraints1.gridy = 3;
      gridBagConstraints1.insets = new java.awt.Insets(4, 8, 4, 4);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      add(jLabel4, gridBagConstraints1);


      jLabel5.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TXT_Ctx"));
      jLabel5.setLabelFor(ctx);

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 0;
      gridBagConstraints1.gridy = 4;
      gridBagConstraints1.insets = new java.awt.Insets(4, 8, 4, 4);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      add(jLabel5, gridBagConstraints1);


      name.setToolTipText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TIP_OperationName"));
      name.setPreferredSize(new java.awt.Dimension(100, 16));

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridwidth = 0;
      gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints1.insets = new java.awt.Insets(8, 4, 4, 8);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints1.weightx = 1.0;
      add(name, gridBagConstraints1);


      ret.setToolTipText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TIP_OperationRetType"));
      ret.setPreferredSize(new java.awt.Dimension(100, 16));

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 1;
      gridBagConstraints1.gridy = 1;
      gridBagConstraints1.gridwidth = 0;
      gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints1.insets = new java.awt.Insets(4, 4, 4, 8);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints1.weightx = 1.0;
      add(ret, gridBagConstraints1);


      params.setToolTipText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TIP_OperationParams"));
      params.setPreferredSize(new java.awt.Dimension(100, 16));

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 1;
      gridBagConstraints1.gridy = 2;
      gridBagConstraints1.gridwidth = 0;
      gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints1.insets = new java.awt.Insets(4, 4, 4, 8);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints1.weightx = 1.0;
      add(params, gridBagConstraints1);


      except.setToolTipText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TIP_OperationExceptions"));
      except.setPreferredSize(new java.awt.Dimension(100, 16));

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 1;
      gridBagConstraints1.gridy = 3;
      gridBagConstraints1.gridwidth = 0;
      gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints1.insets = new java.awt.Insets(4, 4, 4, 8);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints1.weightx = 1.0;
      add(except, gridBagConstraints1);


      ctx.setToolTipText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TIP_OperationCtx"));
      ctx.setPreferredSize(new java.awt.Dimension(100, 16));

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 1;
      gridBagConstraints1.gridy = 4;
      gridBagConstraints1.gridwidth = 0;
      gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints1.insets = new java.awt.Insets(4, 4, 4, 8);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints1.weightx = 1.0;
      add(ctx, gridBagConstraints1);


      oneway.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/nodes/gui/Bundle").getString("TXT_OpMode"));

      gridBagConstraints1 = new java.awt.GridBagConstraints();
      gridBagConstraints1.gridx = 0;
      gridBagConstraints1.gridy = 5;
      gridBagConstraints1.gridwidth = 0;
      gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints1.insets = new java.awt.Insets(4, 8, 8, 8);
      gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints1.weightx = 1.0;
      add(oneway, gridBagConstraints1);

  }//GEN-END:initComponents


// Variables declaration - do not modify//GEN-BEGIN:variables
private javax.swing.JLabel jLabel1;
private javax.swing.JLabel jLabel2;
private javax.swing.JLabel jLabel3;
private javax.swing.JLabel jLabel4;
private javax.swing.JLabel jLabel5;
private javax.swing.JTextField name;
private javax.swing.JTextField ret;
private javax.swing.JTextField params;
private javax.swing.JTextField except;
private javax.swing.JTextField ctx;
private javax.swing.JCheckBox oneway;
// End of variables declaration//GEN-END:variables


    
    public void removeUpdate(final javax.swing.event.DocumentEvent p1) {
        checkState ();
    }

    public void changedUpdate(final javax.swing.event.DocumentEvent p1) {
        checkState ();
    }

    public void insertUpdate(final javax.swing.event.DocumentEvent p1) {
        checkState ();
    }

    private void checkState () {
        if (this.name.getText().length() >0 && this.ret.getText().length() >0) {
            enableOk();
        }
        else {
            disableOk();
        }
    }
}