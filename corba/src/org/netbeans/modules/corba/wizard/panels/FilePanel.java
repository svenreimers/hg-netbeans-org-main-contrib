/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

package org.netbeans.modules.corba.wizard.panels;

/**
 *
 * @author  Tomas Zezula, Dusan Balek
 */
public class FilePanel extends BindingDetail implements javax.swing.event.DocumentListener {

    /** Creates new form FilePanel */
    public FilePanel() {
        initComponents();
        this.postInitComponents ();
    }

    public void setData (Object data) {
        if (data != null && data instanceof String)
            this.name.setText ((String)data);
    }

    public Object getData () {
        return this.name.getText();
    }

    public void setTitle (String title) {
        this.label.setText (title);
    }
    
    public String getTitle () {
        return this.label.getText();
    }

    public boolean isValid () {
    	return (this.name.getText() != null && this.name.getText().length() > 0);
    }
    
    private void postInitComponents () {
        this.name.getDocument().addDocumentListener (this);
        this.label.setDisplayedMnemonic (this.bundle.getString("TXT_FileName_MNE").charAt(0));
        this.jButton1.setMnemonic (this.bundle.getString ("TXT_Browse_MNE").charAt(0));
        this.jButton1.getAccessibleContext().setAccessibleDescription (this.bundle.getString("AD_Browse"));
        this.getAccessibleContext().setAccessibleDescription (this.bundle.getString("AD_FilePanel"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        label = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(500, 340));
        label.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/panels/Bundle").getString("TXT_FileName"));
        label.setLabelFor(name);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 6);
        add(label, gridBagConstraints);

        name.setToolTipText(bundle.getString("MSG_IORFileName"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 6);
        add(name, gridBagConstraints);

        jButton1.setText(bundle.getString("TXT_Browse"));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 12);
        add(jButton1, gridBagConstraints);

    }//GEN-END:initComponents

    private void browse(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse
        // Add your handling code here:
        javax.swing.JFileChooser fd = new javax.swing.JFileChooser();
        fd.setMultiSelectionEnabled(false);
        fd.setFileFilter ( new javax.swing.filechooser.FileFilter() {
            
            public boolean accept (java.io.File file) {
                if (file.isDirectory())
                    return true;
                else if (!file.exists()) 
                    return true;
                else if (file.getName().endsWith(".ior")) //NoI18N
                    return true;
                else
                    return false;
            }
            
            public String getDescription () {
                return org.openide.util.NbBundle.getBundle(FilePanel.class).getString("TXT_IORFileExt");
            }
        });
        if (fd.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
            this.name.setText (fd.getSelectedFile().getAbsolutePath());
            this.fireChange (this);
        }
    }//GEN-LAST:event_browse

    public void changedUpdate(javax.swing.event.DocumentEvent event) {
        this.fireChange(this);
    }    

    public void removeUpdate(javax.swing.event.DocumentEvent event) {
        this.fireChange(this);
    }
    
    public void insertUpdate(javax.swing.event.DocumentEvent event) {
        this.fireChange(this);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel label;
    private javax.swing.JTextField name;
    // End of variables declaration//GEN-END:variables

    private static final java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/panels/Bundle");    

}
