/*
 *                 Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 * 
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2001 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.corba.wizard.panels;

import java.util.*;
import javax.swing.*;
import javax.swing.event.*;
import org.openide.*;
import org.openide.util.*;
import org.netbeans.modules.corba.wizard.CorbaWizard;
import org.netbeans.modules.corba.wizard.CorbaWizardData;

/** 
 *
 * @author  tzezula
 * @version 
 */
public class StartPanel extends AbstractCORBAWizardPanel implements javax.swing.event.ChangeListener {

    private CorbaWizardData data;
    
    /** Creates new form StartPanel */
    public StartPanel() {
        initComponents ();
        this.tie.addChangeListener(this);
        this.impl.addChangeListener (this);
        this.client.addChangeListener (this);
        this.server.addChangeListener (this);
        this.cbClient.addChangeListener (this);
        putClientProperty(CorbaWizard.PROP_CONTENT_SELECTED_INDEX, new Integer(1));
        this.setName (org.openide.util.NbBundle.getBundle(PackagePanel.class).getString("TXT_TypeOfApp"));
    }
  
    /** Sets the data in panel by  data from CorbaWizardDescriptor
     *  @param CorbaWizardDescriptor data
     */
    public void readCorbaSettings (CorbaWizardData data){
        int mask = data.getGenerate();
        if ((mask & CorbaWizardData.SERVER) == CorbaWizardData.SERVER) 
            this.server.setSelected (true); 
        if ((mask & CorbaWizardData.CLIENT) == CorbaWizardData.CLIENT)
            this.client.setSelected (true);
        if ((mask & CorbaWizardData.CB_CLIENT) == CorbaWizardData.CB_CLIENT)
            this.cbClient.setSelected (true);
        if ((mask & CorbaWizardData.IMPL) == CorbaWizardData.IMPL)
            this.impl.setSelected (true);
        this.tie.setSelected (data.getTie());
        this.data = data;
    }
  
    /** Sets the data got from the panel to CorbaWizardDescriptor
     *  @param CorbaWizardDescriptor data
     */
    public void storeCorbaSettings (CorbaWizardData data){
        int mask = (this.impl.isSelected()? CorbaWizardData.IMPL : 0)
            | (this.client.isSelected() ? CorbaWizardData.CLIENT : 0)
            | (this.cbClient.isSelected() ? CorbaWizardData.CB_CLIENT : 0)
            | (this.server.isSelected() ? CorbaWizardData.SERVER : 0);
        data.setGenerate (mask);
        data.setTie (this.tie.isSelected());
    }

    public boolean isValid () {
        return (this.client.isSelected() || this.cbClient.isSelected() || this.server.isSelected() || this.impl.isSelected()) ? true : false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        impl = new javax.swing.JCheckBox();
        tie = new javax.swing.JCheckBox();
        client = new javax.swing.JCheckBox();
        server = new javax.swing.JCheckBox();
        cbClient = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        setPreferredSize(new java.awt.Dimension(500, 340));
        
        jPanel1.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints2;
        
        impl.setText(bundle.getString("TXT_GenerateImpl"));
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 0;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel1.add(impl, gridBagConstraints2);
        
        
        tie.setText(bundle.getString("TXT_TieImpl"));
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 1;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(0, 32, 4, 8);
        gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(tie, gridBagConstraints2);
        
        
        client.setText(bundle.getString("TXT_Client"));
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 2;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(4, 8, 4, 8);
        gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(client, gridBagConstraints2);
        
        
        server.setText(bundle.getString("TXT_Server"));
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 3;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(4, 8, 4, 8);
        gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(server, gridBagConstraints2);
        
        
        cbClient.setText(bundle.getString("TXT_CallBackClient"));
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 4;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(4, 8, 4, 8);
        gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(cbClient, gridBagConstraints2);
        
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 0;
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.insets = new java.awt.Insets(12, 12, 12, 12);
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        add(jPanel1, gridBagConstraints1);
        
        
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 1;
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.gridheight = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        add(jPanel2, gridBagConstraints1);
        
    }//GEN-END:initComponents

    public void stateChanged(javax.swing.event.ChangeEvent event) {
        if (event.getSource() == this.impl) {
            if (!this.impl.isSelected())
                this.tie.setSelected (false);
        }
        else if (event.getSource() == this.tie) {
            if (this.tie.isSelected())
                this.impl.setSelected(true);
        }
        else if (event.getSource() == this.client || event.getSource() == this.cbClient || event.getSource() == this.server) {
            /** Uffff, but has to be done due to design bug in OpenAPI
             *  the storeSettings is called after next panel.
             */
            int mask = (this.impl.isSelected()? CorbaWizardData.IMPL : 0)
                | (this.client.isSelected() ? CorbaWizardData.CLIENT : 0)
                | (this.cbClient.isSelected() ? CorbaWizardData.CB_CLIENT : 0)
                | (this.server.isSelected() ? CorbaWizardData.SERVER : 0);
            this.data.setGenerate (mask);
        }
        this.fireChange(this);
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox impl;
    private javax.swing.JCheckBox tie;
    private javax.swing.JCheckBox client;
    private javax.swing.JCheckBox server;
    private javax.swing.JCheckBox cbClient;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private static final java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/netbeans/modules/corba/wizard/panels/Bundle");    

}
