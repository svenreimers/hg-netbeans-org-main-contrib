/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.tasklist.usertasks.translators;

import javax.swing.DefaultComboBoxModel;

/**
 * Panel for choosing a XSL template
 */
public class XslTemplatesPanel extends javax.swing.JPanel {
    private static final long serialVersionUID = 1;

    /**
     * Creates new form XSLTemplatesPanel
     */
    public XslTemplatesPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jComboBoxLayout = new javax.swing.JComboBox();
        jCheckBoxOpen = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        setName(org.openide.util.NbBundle.getBundle(XslTemplatesPanel.class).getString("ChooseHtmlLayout"));
        jLabel1.setLabelFor(jComboBoxLayout);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(XslTemplatesPanel.class, "Layout"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 11, 12);
        add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 11, 0);
        add(jComboBoxLayout, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxOpen, org.openide.util.NbBundle.getBundle(XslTemplatesPanel.class).getString("ViewExportedHTML"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jCheckBoxOpen, gridBagConstraints);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxOpen;
    private javax.swing.JComboBox jComboBoxLayout;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Sets available layouts
     *
     * @param l names of available layouts
     */
    public void setAvailableLayouts(String[] l) {
        jComboBoxLayout.setModel(new DefaultComboBoxModel(l));
    }
    
    /**
     * Selects the specified layout
     *
     * @param index index of the selected layout
     */  
    public void setLayoutIndex(int index) {
        jComboBoxLayout.setSelectedIndex(index);
    }
    
    /**
     * Toggles the checkbox "Open the file in browser"
     *
     * @param b true = open
     */
    public void setOpenFile(boolean b) {
        jCheckBoxOpen.setSelected(b);
    }

    /**
     * Returns the state of the checkbox "Open the file in browser"
     *
     * @return true = open
     */
    public boolean getOpenFile() {
        return jCheckBoxOpen.isSelected();
    }
    
    /**
     * Returns the index of the selected layout
     *
     * @return index of the selected layout
     */
    public int getLayoutIndex() {
        return jComboBoxLayout.getSelectedIndex();
    }
}
