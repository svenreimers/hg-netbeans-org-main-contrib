/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.erlang.platform.ui;

import java.awt.event.ActionListener;
import java.io.File;
import org.openide.filesystems.FileUtil;

import javax.swing.JFileChooser;
import org.netbeans.modules.erlang.platform.api.RubyPlatformManager;
import org.openide.util.NbBundle;

/**
 *
 * @author  Tor Norbye
 */
public class RubyHomeOptionsPanel extends javax.swing.JPanel implements ActionListener {
    
    /** Creates new form RubyHomeOptionsPanel */
    public RubyHomeOptionsPanel() {
        initComponents();
    }
    
    public void setRuby(String path) {
        rubyField.setText(path);
    }
    
    public String getRuby() {
        return rubyField.getText().trim();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        rubyField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(600, 200));

        jLabel1.setText(org.openide.util.NbBundle.getMessage(RubyHomeOptionsPanel.class, "RubyLabel")); // NOI18N

        jButton1.setText(org.openide.util.NbBundle.getMessage(RubyHomeOptionsPanel.class, "RubyHomeBrowse")); // NOI18N
        jButton1.addActionListener(this);

        jLabel2.setText(org.openide.util.NbBundle.getMessage(RubyHomeOptionsPanel.class, "RubyHomeOptionsPanel.jLabel2.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel2)
                .add(127, 127, 127))
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .add(10, 10, 10)
                .add(rubyField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jButton1)
                    .add(rubyField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton1) {
            RubyHomeOptionsPanel.this.jButton1ActionPerformed(evt);
        }
    }// </editor-fold>//GEN-END:initComponents
 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                                             
        JFileChooser chooser = new JFileChooser();
        FileUtil.preventFileChooserSymlinkTraversal(chooser, null);
        chooser.setFileSelectionMode (JFileChooser.FILES_ONLY);
        chooser.setMultiSelectionEnabled(false);

        String workDir = rubyField.getText();
        if (workDir.equals("")) {
            workDir = RubyPlatformManager.getDefaultPlatform().getInterpreterFile().getParent();
        }
        chooser.setSelectedFile(new File(workDir));
        chooser.setDialogTitle(NbBundle.getMessage(RubyHomeOptionsPanel.class, "LBL_BrowseConfiguration"));
        if (JFileChooser.APPROVE_OPTION == chooser.showOpenDialog(this)) { //NOI18N
            File file = FileUtil.normalizeFile(chooser.getSelectedFile());
            rubyField.setText(file.getAbsolutePath());
        }
    }                                        
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField rubyField;
    // End of variables declaration//GEN-END:variables
    
}
