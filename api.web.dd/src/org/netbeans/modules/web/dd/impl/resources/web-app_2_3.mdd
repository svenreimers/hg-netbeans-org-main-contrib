<?xml version='1.0' encoding='UTF-8' ?>
<metaDD>
	<meta-element>
            <dtd-name>web-app</dtd-name>
            <bean-name>WebApp</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.ComponentBeanSingle</extends>
            <comparator-class>org.netbeans.modules.web.dd.impl.common.Comparator</comparator-class>
            <implements>org.netbeans.api.web.dd.WebApp</implements>
            <user-code>
                public void setVersion(java.lang.String value) {
                }
                public java.lang.String getVersion() {
                        return VERSION_2_3; // NOI18N
                }
                public void setJspConfig(org.netbeans.api.web.dd.JspConfig value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.JspConfig getSingleJspConfig() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public void setServiceRef(int index, org.netbeans.api.web.dd.ServiceRef valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.ServiceRef getServiceRef(int index) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public void setServiceRef(org.netbeans.api.web.dd.ServiceRef[] value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.ServiceRef[] getServiceRef() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int sizeServiceRef() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int addServiceRef(org.netbeans.api.web.dd.ServiceRef valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int removeServiceRef(org.netbeans.api.web.dd.ServiceRef valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public void setMessageDestinationRef(int index, org.netbeans.api.web.dd.MessageDestinationRef valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.MessageDestinationRef getMessageDestinationRef(int index) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public void setMessageDestinationRef(org.netbeans.api.web.dd.MessageDestinationRef[] value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.MessageDestinationRef[] getMessageDestinationRef() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int sizeMessageDestinationRef() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int addMessageDestinationRef(org.netbeans.api.web.dd.MessageDestinationRef valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int removeMessageDestinationRef(org.netbeans.api.web.dd.MessageDestinationRef valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public void setMessageDestination(int index, org.netbeans.api.web.dd.MessageDestination valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.MessageDestination getMessageDestination(int index) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public void setMessageDestination(org.netbeans.api.web.dd.MessageDestination[] value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.MessageDestination[] getMessageDestination() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int sizeMessageDestination() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int addMessageDestination(org.netbeans.api.web.dd.MessageDestination valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public int removeMessageDestination(org.netbeans.api.web.dd.MessageDestination valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public void setLocaleEncodingMappingList(org.netbeans.api.web.dd.LocaleEncodingMappingList valueInterface) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.LocaleEncodingMappingList getSingleLocaleEncodingMappingList() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(VERSION_2_3);
                }
                public org.netbeans.api.web.dd.WelcomeFileList getSingleWelcomeFileList() {
                    return getWelcomeFileList();
                }
                public org.netbeans.api.web.dd.SessionConfig getSingleSessionConfig() {
                    return getSessionConfig();
                }
                public org.netbeans.api.web.dd.LoginConfig getSingleLoginConfig() {
                    return getLoginConfig();
                }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>icon</dtd-name>
            <bean-name>Icon</bean-name>
            <implements>org.netbeans.api.web.dd.Icon</implements>
            <user-code>
                public void setXmlLang(java.lang.String value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
                public java.lang.String getXmlLang() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
            </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>display-name</dtd-name>
		<bean-name>DisplayName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>description</dtd-name>
		<bean-name>Description</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>distributable</dtd-name>
		<bean-name>Distributable</bean-name>
		<wrapper-class>Boolean</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>context-param</dtd-name>
		<bean-name>ContextParam</bean-name>
                <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
		<implements>org.netbeans.api.web.dd.InitParam, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
                <user-code>
                    public Object getKeyValue() { return getParamName(); }
                </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>filter</dtd-name>
            <bean-name>Filter</bean-name>
            <comparator-class>org.netbeans.modules.web.dd.impl.common.Comparator</comparator-class>
            <extends>org.netbeans.modules.web.dd.impl.common.ComponentBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.Filter, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getFilterName(); }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>filter-mapping</dtd-name>
            <bean-name>FilterMapping</bean-name>
            <implements>org.netbeans.api.web.dd.FilterMapping</implements>
            <user-code>
                // needed due to compatibility with servlet2.4
                public void setDispatcher(int index, java.lang.String value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
                public java.lang.String getDispatcher(int index) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
                public void setDispatcher(java.lang.String[] value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
                public java.lang.String[] getDispatcher() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
                public int sizeDispatcher() throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
                public int addDispatcher(java.lang.String value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
                public int removeDispatcher(java.lang.String value) throws org.netbeans.api.web.dd.common.VersionNotSupportedException {
                    throw new org.netbeans.api.web.dd.common.VersionNotSupportedException(WebApp.VERSION_2_3);
                }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>listener</dtd-name>
            <bean-name>Listener</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.ComponentBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.Listener</implements>
            <user-code>
                // needed due to compatibility with servlet2.4
                public void setDisplayName(String displayName) {
                }
                public String getDisplayName() {
                    return null;
                }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>servlet</dtd-name>
            <bean-name>Servlet</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.ComponentBeanSingle</extends>
            <comparator-class>org.netbeans.modules.web.dd.impl.common.Comparator</comparator-class>
            <implements>org.netbeans.api.web.dd.Servlet, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getServletName(); }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>servlet-mapping</dtd-name>
            <bean-name>ServletMapping</bean-name>
            <implements>org.netbeans.api.web.dd.ServletMapping, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getUrlPattern(); }
            </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>session-config</dtd-name>
		<bean-name>SessionConfig</bean-name>
		<implements>org.netbeans.api.web.dd.SessionConfig</implements>
	</meta-element>
	<meta-element>
            <dtd-name>mime-mapping</dtd-name>
            <bean-name>MimeMapping</bean-name>
            <implements>org.netbeans.api.web.dd.MimeMapping, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getExtension(); }
            </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>welcome-file-list</dtd-name>
		<bean-name>WelcomeFileList</bean-name>
		<implements>org.netbeans.api.web.dd.WelcomeFileList</implements>
	</meta-element>
	<meta-element>
            <dtd-name>error-page</dtd-name>
            <bean-name>ErrorPage</bean-name>
            <comparator-class>org.netbeans.modules.web.dd.impl.common.Comparator</comparator-class>
            <implements>org.netbeans.api.web.dd.ErrorPage, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() {
                    Object code = getErrorCode();
                    String exceptionType = getExceptionType();
                    return (code==null?"":code.toString())+":"+(exceptionType==null?"":exceptionType);
                }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>taglib</dtd-name>
            <bean-name>Taglib</bean-name>
            <implements>org.netbeans.api.web.dd.Taglib, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getTaglibUri(); }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>resource-env-ref</dtd-name>
            <bean-name>ResourceEnvRef</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.ResourceEnvRef, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getResourceEnvRefName(); }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>resource-ref</dtd-name>
            <bean-name>ResourceRef</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.ResourceRef, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getResRefName(); }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>security-constraint</dtd-name>
            <bean-name>SecurityConstraint</bean-name>
            <comparator-class>org.netbeans.modules.web.dd.impl.common.Comparator</comparator-class>
            <extends>org.netbeans.modules.web.dd.impl.common.ComponentBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.SecurityConstraint</implements>
	</meta-element>
	<meta-element>
            <dtd-name>login-config</dtd-name>
            <bean-name>LoginConfig</bean-name>
            <comparator-class>org.netbeans.modules.web.dd.impl.common.Comparator</comparator-class>
            <extends>org.netbeans.modules.web.dd.impl.common.EnclosingBean</extends>
            <implements>org.netbeans.api.web.dd.LoginConfig</implements>
	</meta-element>
	<meta-element>
            <dtd-name>security-role</dtd-name>
            <bean-name>SecurityRole</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.SecurityRole, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getRoleName(); }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>env-entry</dtd-name>
            <bean-name>EnvEntry</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.EnvEntry, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getEnvEntryName(); }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>ejb-ref</dtd-name>
            <bean-name>EjbRef</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.EjbRef, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getEjbRefName(); }
            </user-code>
	</meta-element>
	<meta-element>
            <dtd-name>ejb-local-ref</dtd-name>
            <bean-name>EjbLocalRef</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.EjbLocalRef, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getEjbRefName(); }
            </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>ejb-ref-name</dtd-name>
		<bean-name>EjbRefName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>ejb-ref-type</dtd-name>
		<bean-name>EjbRefType</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>local-home</dtd-name>
		<bean-name>LocalHome</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>local</dtd-name>
		<bean-name>Local</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>ejb-link</dtd-name>
		<bean-name>EjbLink</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>#PCDATA</dtd-name>
		<bean-name>Pcdata</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>home</dtd-name>
		<bean-name>Home</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>remote</dtd-name>
		<bean-name>Remote</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>env-entry-name</dtd-name>
		<bean-name>EnvEntryName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>env-entry-value</dtd-name>
		<bean-name>EnvEntryValue</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>env-entry-type</dtd-name>
		<bean-name>EnvEntryType</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>role-name</dtd-name>
		<bean-name>RoleName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>auth-method</dtd-name>
		<bean-name>AuthMethod</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>realm-name</dtd-name>
		<bean-name>RealmName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>form-login-config</dtd-name>
		<bean-name>FormLoginConfig</bean-name>
		<implements>org.netbeans.api.web.dd.FormLoginConfig</implements>
	</meta-element>
	<meta-element>
		<dtd-name>form-login-page</dtd-name>
		<bean-name>FormLoginPage</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>form-error-page</dtd-name>
		<bean-name>FormErrorPage</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
            <dtd-name>web-resource-collection</dtd-name>
            <bean-name>WebResourceCollection</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.WebResourceCollection, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getWebResourceName(); }
            </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>auth-constraint</dtd-name>
		<bean-name>AuthConstraint</bean-name>
                <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
		<implements>org.netbeans.api.web.dd.AuthConstraint</implements>
	</meta-element>
	<meta-element>
		<dtd-name>user-data-constraint</dtd-name>
		<bean-name>UserDataConstraint</bean-name>
                <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
		<implements>org.netbeans.api.web.dd.UserDataConstraint</implements>
	</meta-element>
	<meta-element>
		<dtd-name>transport-guarantee</dtd-name>
		<bean-name>TransportGuarantee</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>web-resource-name</dtd-name>
		<bean-name>WebResourceName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>url-pattern</dtd-name>
		<bean-name>UrlPattern</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>http-method</dtd-name>
		<bean-name>HttpMethod</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>res-ref-name</dtd-name>
		<bean-name>ResRefName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>res-type</dtd-name>
		<bean-name>ResType</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>res-auth</dtd-name>
		<bean-name>ResAuth</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>res-sharing-scope</dtd-name>
		<bean-name>ResSharingScope</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>resource-env-ref-name</dtd-name>
		<bean-name>ResourceEnvRefName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>resource-env-ref-type</dtd-name>
		<bean-name>ResourceEnvRefType</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>taglib-uri</dtd-name>
		<bean-name>TaglibUri</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>taglib-location</dtd-name>
		<bean-name>TaglibLocation</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>location</dtd-name>
		<bean-name>Location</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>error-code</dtd-name>
		<bean-name>ErrorCode</bean-name>
		<wrapper-class>java.lang.Integer</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>exception-type</dtd-name>
		<bean-name>ExceptionType</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>welcome-file</dtd-name>
		<bean-name>WelcomeFile</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>extension</dtd-name>
		<bean-name>Extension</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>mime-type</dtd-name>
		<bean-name>MimeType</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>session-timeout</dtd-name>
		<bean-name>SessionTimeout</bean-name>
		<wrapper-class>java.math.BigInteger</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>servlet-name</dtd-name>
		<bean-name>ServletName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>init-param</dtd-name>
		<bean-name>InitParam</bean-name>
                <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
		<implements>org.netbeans.api.web.dd.InitParam, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
                <user-code>
                    public Object getKeyValue() { return getParamName(); }
                </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>load-on-startup</dtd-name>
		<bean-name>LoadOnStartup</bean-name>
		<wrapper-class>java.math.BigInteger</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>run-as</dtd-name>
		<bean-name>RunAs</bean-name>
                <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
		<implements>org.netbeans.api.web.dd.RunAs</implements>
	</meta-element>
	<meta-element>
            <dtd-name>security-role-ref</dtd-name>
            <bean-name>SecurityRoleRef</bean-name>
            <extends>org.netbeans.modules.web.dd.impl.common.DescriptionBeanSingle</extends>
            <implements>org.netbeans.api.web.dd.SecurityRoleRef, org.netbeans.modules.web.dd.impl.common.KeyBean</implements>
            <user-code>
                public Object getKeyValue() { return getRoleName(); }
            </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>role-link</dtd-name>
		<bean-name>RoleLink</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>param-name</dtd-name>
		<bean-name>ParamName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>param-value</dtd-name>
		<bean-name>ParamValue</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>servlet-class</dtd-name>
		<bean-name>ServletClass</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>jsp-file</dtd-name>
		<bean-name>JspFile</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>listener-class</dtd-name>
		<bean-name>ListenerClass</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>filter-name</dtd-name>
		<bean-name>FilterName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>filter-class</dtd-name>
		<bean-name>FilterClass</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>EMPTY</dtd-name>
		<bean-name>Empty</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>small-icon</dtd-name>
		<bean-name>SmallIcon</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>large-icon</dtd-name>
		<bean-name>LargeIcon</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
</metaDD>
