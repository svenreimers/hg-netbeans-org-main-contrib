#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2001 Sun
# Microsystems, Inc. All Rights Reserved.

### LoadersJavaBundle.properties -- Resource bundle for package coronax.loaders.java


# Registry Panel
PROP_RegistryHost=Host
PROP_RegistryPort=Port
PROP_NewLocalRegistry=Create new local registry

# RegistryItem
# valid display name, {0} - host, {1} port
MSG_ValidItem={0}:{1,number,#}
# invalid display name, {0} - host, {1} port
MSG_InvalidItem={0}:{1,number,#} (not responding)
# url, {0} - host, {1,number,#} port
MSG_ItemURL=//{0}:{1,number,#}/

# RMI Debugger
PROP_RMIDebugTypeName=RMI Debugging
MSG_DebuggerHint=\
    {REPOSITORY_PATH} = contents of Repository (development classpath)\n\
    {CLASS_PATH} = classpath\n\
    {BOOT_CLASS_PATH} = system classpath\n\
    {BOOT_CLASS_PATH_SWITCH} = system classpath switch\n\
    {LIBRARY_PATH} = system library path\n\
    {MAIN} = name of the class to be executed\n\
    {hostname} = host name of the local machine\n\
    {hostIP} = IP address of the local machine\n\
    {internalHttPort} = port of the internal HTTP server\n\
    {repositoryURL} = URL of the Repository exported by the internal HTTP server\n\
    {repositoryIPURL} = URL of the Repository with IP address\n\
    --- Additional settings (from RMI Object) ---\n\
    {port} = port for export\n\
    {service} = service URL (for registration in the RMI Registry)\n\

# RMIDataLoaderBeanInfo
PROP_Name=Name
HINT_Name=Name of the RMI source object type.

# RMI Data Node
PROP_RMIExport=RMI Export

PROP_port=Port
HINT_port=Port for export.

PROP_service_name=Service URL
HINT_service_name=URL of the service for the RMI registry.

PROP_registry_port=Registry port
HINT_registry_port=Port number of the RMI registry.


LAB_RMIExecutor=RMI Executor
PROP_RMIExecutorName=RMI Executor

PROP_New_RMI_Registry=Registry
LAB_New_RMI_Registry=Add registry
PROP_RMIRegistry_Name=RMI Registry

PROP_RMILoader_Name=RMI source objects

MSG_ExecutorHint=\
    {repository} = content of the Repository (development classpath)\n\
    {classpath} = classpath\n\
    {bootclasspath} = system classpath\n\
    {library} = system library path\n\
    {classname} = name of the class to be executed\n\
    {arguments} = command-line arguments to pass to the Java application (not VM!)\n\
    {java.home} = JDK installation directory\n\
    {/} = file name separator character\n\
    {:} = (class-)path separator character\n\
    {hostname} = host name of the local machine\n\
    {hostIP} = IP address of the local machine\n\
    {internalHttPort} = port of the internal HTTP server\n\
    {repositoryURL} = URL of the Repository exported by the internal HTTP server\n\
    {repositoryIPURL} = URL of the the Repository with IP address\n\
    --- Additional Settings (from RMI Object) ---\n\
    {port} = port for export\n\
    {service} = service URL (for registration in the RMI Registry)\n\

MSG_CompilerHint=\
    {repository} = content of the Repository (development classpath)\n\
    {classpath} = classpath\n\
    {bootclasspath} = system classpath\n\
    {library} = system library path\n\
    {classname} = name of the (compiler) class to execute\n\
    {files} = files to compile\n\
    {rtclasspath} = path to rt.jar\n\
    {packageRoot} = path to the root of the current filesystem\n

# RMI Registry Item
ERR_Service_Destroy=Access denied. (Probably a non-local host.)
PROP_classAnnotation=Class annotation
HINT_classAnnotation=Location for a class.

# UnicastExportClass
MSG_Unicast_Export_Hint=\
	The class must be a subclass of java.rmi.server.UnicastRemoteObject with a default or\n \
	one-int-parameter constructor; or it must implement java.rmi.Remote and have a default constructor.

# Actions
PROP_Convert2RMIActionName = Convert to RMI

# RMIRegistryRefreshAction
PROP_RMIRegistryRefreshActionName=Refresh

# CreateClientAction
PROP_CreateClientActionName=Copy client code

# SaveInterfaceAction
LAB_SelectFilesystem=Select filesystem
LAB_LookIn=Look in
PROP_SaveInterfaceActionName=Save interface

# UnicastExportClass
MSG_SuccessfullyExported=Successfully exported.
MSG_ExportFailed=Export failed.
MSG_SuccessfullyRegistered=Successfully registered.
MSG_RegistrationFailed=Registration failed.


# -------------------------------------------------

# [PENDING] most of this looks like crap. Please delete if it is not being used. Else I will check it. --jglick

# JavaDataLoaderBeanInfo
PROP_Extensions=Extensions
HINT_Extensions=A set of recognized file extensions.

# Variable/Constructor/Method/Class/Interface properties
PROP_modifiers=Modifiers
PROP_type=Type
PROP_returnType=Return Type
PROP_name=Name
PROP_initValue=Initial Value
PROP_arguments=Arguments
PROP_exceptions=Exceptions
PROP_superClass=Extends
PROP_interfaces=Implements
PROP_extendsInterfaces=Extends
PROP_fileParams=Arguments
PROP_isStatic=Is Static
PROP_body=Body
PROP_execution=Internal Execution
PROP_executionSetName=Execution
PROP_sourceSetName=Source

HINT_modifiers=Modifiers
HINT_type=Type of variable
HINT_returnType=Return type of method
HINT_name=Name of this object
HINT_initValue=Initial value of variable
HINT_arguments=Arguments of method
HINT_exceptions=Exceptions which this method throws
HINT_superClass=Superclass
HINT_interfaces=Implemented interfaces
HINT_extendsInterfaces=Interfaces extended by this interface
HINT_fileParams=Arguments for the main() method
HINT_isStatic=Whether this initializer is static
HINT_body=Body of this method or constructor
HINT_execution=Whether to use internal execution
HINT_executionSetName=Properties for starting this class
HINT_sourceSetName=Properties of the source code

PROP_package=Package
HINT_package=Package of this class
PROP_imports=Imports
HINT_imports=Imported packages and classes

NAME_BLOCK=Initializer

LAB_parsing=Parsing...
LAB_parseError=Cannot parse...

CTL_Java_option=Java Objects

MSG_OpeningEditor=Opening editor for {0} ...
MSG_Saving=Saving {0} ...

MSG_SaveFile=File {0} is modified. Save it ?
MSG_ErrorSaving=An exception occurred while saving:
MSG_DocReadOnly=Document is read-only.
MSG_BlockReadOnly=Block is read-only.

MENU_Execute=Execute
MENU_Compile=Compile
MENU_Open=Open

MSG_Parsing=Parsing
MSG_ParsingSuccess=successful
MSG_ParsingError=error
MSG_ParsingWait=Waiting for next request...
LAB_Parser=Java Parser

MENU_GOTO=Go to Source
MENU_CREATE_BLOCK=Initializer
MENU_CREATE_VARIABLE=Variable
MENU_CREATE_CONSTRUCTOR=Constructor
MENU_CREATE_METHOD=Method
MENU_CREATE_CLASS=Inner Class
MENU_CREATE_INTERFACE=Inner Interface

LAB_AccessRights=Access:
LAB_Modifiers=Modifiers

AddBreakpoint=Add breakpoint
AddWatch=Add watch

#BeanWizard dialogs ................................................................................

LAB_BeanWizardAction=Bean &Wizard

LAB_PropRW=Read-write
LAB_PropR=Read only
LAB_PropW=Write only

# [PENDING] isn't this dead?? --jglick
Hint_title1=Use this checklist to create a new JavaBean. The first step to creating a JavaBean is setting the name and package where the JavaBean will be created.

Hint_name=The name of the JavaBean is the same as the name of the class representing it. The package name may be left blank.

Hint_title2=The next step is setting up the superclass of the JavaBean, and assigning your icons. Click the Settings Button to continue.

Hint_settings=You can choose one of the predefined superclasses, or type another name. If you change icons, the BeanInfo must be created.

Hint_title3=Now you can add properties to your new JavaBean. Click the Properties Button to do so.

Hint_properties=Now you can add some properties to your new JavaBean.

Hint_title4=Now you can create some Listeners and Events for this JavaBean.

Hint_events1=
Hint_events2=
Hint_events3=
Hint_events4=

Hint_title51=
Hint_title52=
Hint_title53=
Hint_title54=

Button_finish=Finish
Button_Ok=Ok
Button_cancel=Cancel

Button_name=Name & Package
Button_settings=Settings
Button_properties=Properties
Button_listeners=Listeners

Button_new=New

LAB_NameList=Name:
LAB_PackageList=Package:

Button_dots=.................................................

Dialog_name_title=Name & Package Dialog
Dialog_settings_title=Settings Dialog
Dialog_properties_title=Properties Dialog
Dialog_listeners_title=Listeners Dialog

Label_name=Name:
Name_of_new_bean=NewBean
Label_package=Package:
Label_superclass=Superclass:
Label_generate=Generate Bean Info:
Label_icon16=Path to 16x16 Color Icon:
Label_icon32=Path to 32x32 Color Icon:
Label_icon16m=Path to 16x16 Mono Icon:
Label_icon32m=Path to 32x32 Mono Icon:
Label_none=<None>
Label_dots=...

Column_name=Name
Column_type=Type
Column_accessibility=Accessibility
Column_bounded=Bound
Column_constrained=Constrained
Column_generate=Generate Variable

Button_remove=Remove
Button_removeAll=Remove all
Button_up=Move up
Button_down=Move down

Label_new_property=<New property>
Label_name1=Name:
Label_superclass1=Superclass:
Label_properties_created=properties created.
Label_0_properties_created=No properties created.
Label_1_property_created=1 property created.
MSG_NotValidNames1=1 property has wrong name. It will be ignored.
MSG_NotValidNames={0} properties have wrong names. They will be ignored.

#BeanWizard text generating .............................................................................

EXC_Bean_wizard=Exception occurred in Bean Wizard
EXC_Cannot_find_package=Package not found

#Customization ..........................................................................

CTL_SerializeAs=Serialize as
CTL_SaveIn=Save &in
EXC_Introspection=ClassDataHandler Introspection Error
EXC_Serialization=Exception during serialization

#EditorSettingJava ..........................................................................
LAB_Preview=Preview
LAB_Scheme=Scheme:

LAB_JavaSchemeCurrent=<current>
LAB_JavaScheme1=Netbeans default scheme
LAB_JavaScheme2=Autumn leaves
LAB_JavaScheme3=Blue Monday
LAB_JavaScheme4=Black Emerald
LAB_JavaScheme5=City Lights
LAB_JavaScheme6=B/W Wednesday
LAB_JavaScheme7=Bed Light

#JavaIdentifierChecking .....................................................................
MSG_Not_Valid_Identifier=The specified value is not a valid java identifier
# {0} = the specified (invalie) name
FMT_Not_Valid_Identifier=The specified value is not a valid java identifier: {0}
# {0} = the specified (invalie) name
FMT_Not_Valid_Class_Name=The specified value is not a valid java class name: {0}


# JavaLoaderSettings - Control Panel | Java Objects
PROP_PARSER_OUTPUT_ENABLED=Parser Output Enabled
HINT_PARSER_OUTPUT_ENABLED=If True, parsing progress messages are written to the Output Window
PROP_BACKGROUND_PARSING_ENABLED=Background Parsing
HINT_BACKGROUND_PARSING_ENABLED=If True, a whole package is parsed in the background when opened - warning: consumes a lot of memory
PROP_SPACE_BEFORE_BRACKET=Space Before Bracket
HINT_SPACE_BEFORE_BRACKET=If True, a space is put before opening brackets in generated Java code
PROP_SHORT_FIELD_NAMES=Short Field Names
HINT_SHORT_FIELD_NAMES=If True, elements representing methods and variables do not display types they represent in the Explorer
PROP_EXTERNAL_COMPILER_ENABLED=Use External Compiler
HINT_EXTERNAL_COMPILER_ENABLED=If True, an external compiler is used
PROP_EXTERNAL_EXECUTION_ENABLED=Use External Execution
HINT_EXTERNAL_EXECUTION_ENABLED=If True, applications are executed in a separate virtual machine
