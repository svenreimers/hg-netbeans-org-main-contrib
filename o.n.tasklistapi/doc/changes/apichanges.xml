<?xml version="1.0" encoding="UTF-8"?>
<!--
   -                 Sun Public License Notice
   - 
   - The contents of this file are subject to the Sun Public License
   - Version 1.0 (the "License"). You may not use this file except in
   - compliance with the License. A copy of the License is available at
   - http://www.sun.com/
   - 
   - The Original Code is NetBeans. The Initial Developer of the Original
   - Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
   - Microsystems, Inc. All Rights Reserved.
  -->

<?xml-stylesheet href="../../../../openide/api/doc/changes/apichanges.xsl" type="text/xsl" ?>
<!--DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" 
                     "../../../../openide/api/doc/changes/apichanges.dtd"-->

<!-- INFO FOR PEOPLE ADDING CHANGES:

Check the DTD (apichanges.dtd) for details on the syntax. You do not
need to regenerate the HTML, this will be done periodically; just
change the XML. If you can, validate the XML against the DTD, if not
do not worry about it. Rough syntax of a change (several parts optional):

<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>

Also permitted elements: <package>, <branch>. <version> is API spec
version, recommended for all new changes. <compatibility> should say
if things were added/modified/deprecated/etc. and give all information
related to upgrading old code. List affected top-level classes and
link to issue numbers if applicable. See the DTD for more details.

Changes need not be in any particular order, they are sorted in various
ways by the stylesheet anyway.

Dates are assumed to mean "on the trunk". If you *also* make the same
change on a stabilization branch, use the <branch> tag to indicate this
and explain why the change was made on a branch in the <description>.

Please only change this file on the trunk! Rather: you can change it
on branches if you want, but these changes will be ignored; only the
trunk version of this file is important.

Deprecations do not count as incompatible, assuming that code using the
deprecated calls continues to see their documented behavior. But do
specify deprecation="yes" in <compatibility>.

This file is not a replacement for Javadoc: it is intended to list changes,
not describe the complete current behavior, for which ordinary documentation
is the proper place.

-->

<apichanges>

  <!-- First, a list of API names you may use: -->
  <apidefs>
    <!-- Probably should not be used much: -->
    <apidef name="general">Tasklist API</apidef>
  </apidefs>

<!-- ACTUAL CHANGES BEGIN HERE: -->

  <changes>

      <change>
          <api name="general"/>
          <summary>Removed DocumentSuggestionScanner methods</summary>
          <version major="1" minor="5"/>
          <date day="21" month="1" year="2004"/>
          <author login="pkuzel"/>
          <compatibility deletion="yes"/>
          <description>
              <p>
                  <code>docShown</code> and <code>docHidden</code>
                  callbacks eliminated. This interface is solely for request
                  driven providers (scan, rescan and clean).
              </p>
          </description>
          <class package="org.netbeans.spi.tasklist" name="DocumentSuggestionProvider"/>
      </change>

      <change>
          <api name="general"/>
          <summary>Repackaged to modules package</summary>
          <version major="1" minor="5"/>
          <date day="11" month="12" year="2003"/>
          <author login="pkuzel"/>
          <compatibility deletion="yes" addition="yes"/>
          <description>
              Repackaged from <code>org.netbeans.api|spi.tasklist</code>
              <code>to org.netbeans.modules.tasklist.client|providers</code>
              because the API does not match criteria on <code>org.netbeans.api</code>
              package APIs (similar to <code>java.lang</code> :-).
              <p>
              Please adjust all you import statements and mf-layer files.
              </p>
          </description>
      </change>

      <change>
          <api name="general"/>
          <summary>Framework separated to API and SPI part.</summary>
          <version major="1" minor="4"/>
          <date day="14" month="11" year="2003"/>
          <author login="pkuzel"/>
          <compatibility deletion="yes" addition="yes"/>
          <description>
            <p>SPI intoduced, the new SPI part consists of
            original framework driven provider classes.
            <code>SuggestionProvider</code> class notion removed
            from API method signatures part and replaced by
            <code>Object</code>. It corresponds with current provider
            usage (downcasting in providers' implementations).
            </p><p>Upgrade is rather simple: alter your imports
            and update module layer registrations (instanceOf).
            </p>
          </description>
          <class package="org.netbeans.spi.tasklist" name="DocumentSuggestionProvider"/>
          <class package="org.netbeans.spi.tasklist" name="SuggestionProvider"/>
          <class package="org.netbeans.spi.tasklist" name="SuggestionContext"/>
          <class package="org.netbeans.api.tasklist" name="SuggestionManager"/>
          <class package="org.netbeans.api.tasklist" name="Suggestion"/>
      </change>


    <change>
        <api name="general"/>
        <summary>SuggestionContext intoduced</summary>
        <version major="1" minor="3"/>
        <date day="10" month="11" year="2003"/>
        <author login="pkuzel"/>
        <compatibility deletion="yes" addition="yes"/>
        <description>Added class <code>SuggestionContext</code> that
        represents provider context. 
        </description>
        <class package="org.netbeans.api.tasklist" name="DocumentSuggestionProvider"/>
        <class package="org.netbeans.api.tasklist" name="SuggestionContext"/>
    </change>


  </changes>

  <!-- Now the surrounding HTML text and document structure: -->

  <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <======================

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE xml/api/doc/changes/apichanges.xml

-->
    <head>
      <title>XML Tools API Changes by Date</title>
      <link rel="stylesheet" href="http://www.netbeans.org/netbeans.css" type="text/css"/>
      <meta name="CATEGORY" content="OtherDevelopmentDoc"/>
      <meta name="DESCRIPTION" content="A cross-indexed list of all changes made to the NetBeans tasklist APIs."/>
    </head>
    <body>

<h1>Introduction</h1>

<p>This document lists changes made to the <a href="http://tasklist.netbeans.org">proposed Tasklist
APIs</a>. Please ask on the <code>dev@tasklist.netbeans.org</code> or <code>openide@netbeans.org</code>
mailing list if you have any questions about the details of a
change, or are wondering how to convert existing code to be compatible.
Ask there also for new backward compatible API enhancements.</p>

<h1>Changes Listings</h1>
No incompatible changes following version "1.0" should be introduced.
<div>
      <hr/><h1><a name="list-all-apis">Index of APIs</a></h1>
      <changelist style="list-all-apis"/>

      <h1><a name="incompat-by-date">Incompatible changes by date</a></h1>
      <p>Not all deprecations are listed here, assuming that the deprecated
        APIs continue to essentially work.
      </p>
      <changelist style="incompat-by-date"/>

      <h1><a name="all-by-date">All changes by date</a></h1>
      <changelist style="all-by-date"/>

      <h1><a name="all-by-version">Changes by version</a></h1>
      <p>
        These API specification versions may be used to indicate that a module
        requires a certain API feature in order to function. For example, if you
        see here a feature you need which is labelled <samp>0.4</samp>, your
        manifest should contain in its main attributes the line:
      </p>
      <pre>OpenIDE-Module-Module-Dependencies: org.netbeans.api.xml/1 &gt; 0.4</pre>
      <changelist style="all-by-version"/>

      <h1><a name="all-by-class">Changes by affected class</a></h1>
      <changelist style="all-by-class"/>

      <hr/><h1><a name="details-by-api">Details of all changes by API and date</a></h1>
      <changelist style="details-by-api"/>
</div>
    </body>
  </htmlcontents>

</apichanges>
