/*
 * JSPHookConfigPanel.java
 *
 * Created on March 2, 2009, 12:36 PM
 */

package org.netbeans.modules.portalpack.websynergy.portlets.hook.jsp;

import java.io.File;
import java.util.Enumeration;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import org.netbeans.api.project.Project;
import org.netbeans.modules.portalpack.servers.core.util.PSConfigObject;
import org.netbeans.modules.portalpack.servers.websynergy.common.LiferayConstants;
import org.netbeans.modules.portalpack.servers.websynergy.common.WebSpacePropertiesUtil;
import org.netbeans.modules.portalpack.websynergy.portlets.hook.api.ConfigPanel;
import org.netbeans.modules.portalpack.websynergy.portlets.util.ui.DirectoryTree;
import org.openide.WizardDescriptor;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;

/**
 *
 * @author  satyaranjan
 */
public class JSPHookConfigPanel extends ConfigPanel {

    private String jspDir;
    private FileObject jspDirFO;
    private DefaultListModel selectedDirModel;
    /** Creates new form JSPHookConfigPanel */
    public JSPHookConfigPanel(Project project) {
        PSConfigObject psConfig = WebSpacePropertiesUtil.getSelectedServerProperties(project);
        if(psConfig != null) {
            jspDir = psConfig.getProperty(LiferayConstants.LR_PORTAL_DEPLOY_DIR) +
                        File.separatorChar + "html";
        } else {
            jspDir = System.getProperty("user.home");
        }
        
        jspDirFO = FileUtil.toFileObject(new File(jspDir));
        
        selectedDirModel = new DefaultListModel();
            
        initComponents();
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        dirTree = dirTree = new DirectoryTree(new File(jspDir));
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedList = new javax.swing.JList(selectedDirModel);
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        scrollPane.setViewportView(dirTree);

        selectedList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        selectedList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                selectedListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(selectedList);

        addButton.setText(org.openide.util.NbBundle.getMessage(JSPHookConfigPanel.class, "JSPHookConfigPanel.addButton.text")); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setText(org.openide.util.NbBundle.getMessage(JSPHookConfigPanel.class, "JSPHookConfigPanel.removeButton.text")); // NOI18N
        removeButton.setEnabled(false);
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(scrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(removeButton)
                    .add(addButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {addButton, removeButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
            .add(scrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(74, 74, 74)
                .add(addButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(removeButton)
                .addContainerGap(90, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
// TODO add your handling code here:
    File selectedDir = ((DirectoryTree)dirTree).getSelectedDirectory();
    String relativePath = FileUtil.getRelativePath(jspDirFO, FileUtil.toFileObject(selectedDir));
    selectedDirModel.addElement(relativePath);
    
}//GEN-LAST:event_addButtonActionPerformed

private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
// TODO add your handling code here:
    int selectedIndex = selectedList.getSelectedIndex();
    
    if(selectedIndex != -1)
        selectedDirModel.remove(selectedIndex);
}//GEN-LAST:event_removeButtonActionPerformed

private void selectedListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_selectedListValueChanged
// TODO add your handling code here:
    int selectedIndex = selectedList.getSelectedIndex();
    if(selectedIndex == -1)
        removeButton.setEnabled(false);
    else
        removeButton.setEnabled(true);
}//GEN-LAST:event_selectedListValueChanged

    @Override
    protected void read(WizardDescriptor wizardDescriptor) {
       // throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    protected void store(WizardDescriptor wizardDescriptor) {
       
        wizardDescriptor.putProperty("dir_list", getSelectedDirectories());
    }

    @Override
    public boolean validate(WizardDescriptor wizardDescriptor) {
        setErrorMessage(wizardDescriptor, "");
        return true;
    }
    
  public HashMap getSelectedDirectories() {
      HashMap selectedDirectoriesMap = new HashMap();
      Enumeration values = selectedDirModel.elements();
      FileObject fo = null;
      while(values.hasMoreElements()) {
          String path = (String)values.nextElement();
          fo = jspDirFO.getFileObject(path);
          selectedDirectoriesMap.put(path,fo);
      }
      return selectedDirectoriesMap;
  }
  
  
    @Override
    protected String getDescription() {
       return "JSP Hook Config Panel";
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTree dirTree;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeButton;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JList selectedList;
    // End of variables declaration//GEN-END:variables

}
