/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.erlang.project.gems;

import javax.swing.DefaultComboBoxModel;
import org.openide.util.NbBundle;

/**
 *
 * @author  Tor Norbye
 */
public class InstallationSettingsPanel extends javax.swing.JPanel {
    private final String LATEST = NbBundle.getMessage(InstallationSettingsPanel.class, "Latest");
    
    /** Creates new form InstallationSettingsPanel */
    public InstallationSettingsPanel(Gem gem) {
        initComponents();
        nameField.setText(gem.getName());
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement(LATEST);

        String v = gem.getAvailableVersions();
        if (v != null) {
            String[] ve = v.split(", ");
            for (String version : ve) {
                if (version.length() != 0) {
                    model.addElement(version);
                }
            }
        }
        
        versionCombo.setModel(model);
    }
    
    public void setMessage(String message) {
        messageLabel.setText(message);
    }
    
    public boolean getIncludeDepencies() {
        return includeToggle.isSelected();
    }
    
    public String getVersion() {
        String s = versionCombo.getSelectedItem().toString().trim();
        if (s == LATEST) {
            return null;
        } else {
            return s;
        }
    }
    
    public String getGemName() {
        return nameField.getText().trim();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        dependencyGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        versionCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        includeToggle = new javax.swing.JRadioButton();
        excludeToggle = new javax.swing.JRadioButton();
        messageLabel = new javax.swing.JLabel();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(InstallationSettingsPanel.class, "InstallationSettingsPanel.jLabel1.text")); // NOI18N

        nameField.setText(org.openide.util.NbBundle.getMessage(InstallationSettingsPanel.class, "InstallationSettingsPanel.nameField.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(InstallationSettingsPanel.class, "InstallationSettingsPanel.jLabel2.text")); // NOI18N

        versionCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText(org.openide.util.NbBundle.getMessage(InstallationSettingsPanel.class, "InstallationSettingsPanel.jLabel3.text")); // NOI18N

        dependencyGroup.add(includeToggle);
        includeToggle.setSelected(true);
        includeToggle.setText(org.openide.util.NbBundle.getMessage(InstallationSettingsPanel.class, "InstallationSettingsPanel.includeToggle.text")); // NOI18N
        includeToggle.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        includeToggle.setMargin(new java.awt.Insets(0, 0, 0, 0));

        dependencyGroup.add(excludeToggle);
        excludeToggle.setText(org.openide.util.NbBundle.getMessage(InstallationSettingsPanel.class, "InstallationSettingsPanel.excludeToggle.text")); // NOI18N
        excludeToggle.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        excludeToggle.setMargin(new java.awt.Insets(0, 0, 0, 0));

        messageLabel.setText(org.openide.util.NbBundle.getMessage(InstallationSettingsPanel.class, "InstallationSettingsPanel.messageLabel.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jLabel2)
                            .add(jLabel3))
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(includeToggle)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(excludeToggle))
                            .add(versionCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(nameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)))
                    .add(messageLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(nameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(versionCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(includeToggle)
                    .add(excludeToggle))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(messageLabel)
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup dependencyGroup;
    private javax.swing.JRadioButton excludeToggle;
    private javax.swing.JRadioButton includeToggle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JComboBox versionCombo;
    // End of variables declaration//GEN-END:variables
    
}
