/*
 * AddServerLocationVisualPanel.java
 *
 * Created on February 12, 2007, 3:59 PM
 */

package org.netbeans.modules.j2ee.geronimo2;

import java.io.File;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.swing.JFileChooser;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileFilter;
import org.openide.util.NbBundle;

/**
 *
 * @author  ms159439
 */
public class AddServerLocationVisualPanel extends javax.swing.JPanel {
    
    /** Creates new form AddServerLocationVisualPanel */
    public AddServerLocationVisualPanel() {
	initComponents();
	setName(NbBundle.getMessage(AddServerLocationVisualPanel.class, "TITLE_ServerLocation"));
        
        DocumentListener updateListener = new DocumentListener() {

            public void insertUpdate(DocumentEvent e) {
                fireChangeEvent();
            }

            public void removeUpdate(DocumentEvent e) {
                fireChangeEvent();
            }

            public void changedUpdate(DocumentEvent e) {
                fireChangeEvent();
            }
        };
        
	locationTextField.getDocument().addDocumentListener(updateListener);
        usernameTextField.getDocument().addDocumentListener(updateListener);
        passwordTextField.getDocument().addDocumentListener(updateListener);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        locationTextField = new javax.swing.JTextField();
        geHomeLabel = new javax.swing.JLabel();
        browseButton = new javax.swing.JButton();
        loginDetailsLabel = new javax.swing.JLabel();
        credentialsLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        usernameTextField = new javax.swing.JTextField();

        locationTextField.setText(org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.locationTextField.text_1")); // NOI18N

        geHomeLabel.setDisplayedMnemonic('G');
        geHomeLabel.setLabelFor(locationTextField);
        org.openide.awt.Mnemonics.setLocalizedText(geHomeLabel, org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.geHomeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(browseButton, "Browse...");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(loginDetailsLabel, org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.loginDetailsLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(credentialsLabel, org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.credentialsLabel.text")); // NOI18N
        credentialsLabel.setToolTipText(org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.credentialsLabel.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(userNameLabel, org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.userNameLabel.text")); // NOI18N
        userNameLabel.setToolTipText(org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.userNameLabel.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(passwordLabel, org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.passwordLabel.text")); // NOI18N
        passwordLabel.setToolTipText(org.openide.util.NbBundle.getMessage(AddServerLocationVisualPanel.class, "AddServerLocationVisualPanel.passwordLabel.toolTipText")); // NOI18N

        passwordTextField.setColumns(20);

        usernameTextField.setColumns(20);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(geHomeLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locationTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 208, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                        .add(browseButton))
                    .add(loginDetailsLabel)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(credentialsLabel)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(userNameLabel)
                                    .add(passwordLabel))
                                .add(5, 5, 5)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, passwordTextField, 0, 0, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, usernameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 129, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(loginDetailsLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(geHomeLabel)
                    .add(locationTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(browseButton))
                .add(18, 18, 18)
                .add(credentialsLabel)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(7, 7, 7)
                        .add(userNameLabel))
                    .add(layout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(usernameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(passwordLabel)
                    .add(passwordTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
	String newLoc = browseInstallLocation();
	if ((newLoc!=null)&&(!newLoc.equals("")))
	    locationTextField.setText(newLoc);
    }//GEN-LAST:event_browseButtonActionPerformed
    
    private void fireChangeEvent() {
	Iterator it;
	synchronized (listeners) {
	    it = new HashSet(listeners).iterator();
	}
	ChangeEvent ev = new ChangeEvent(this);
	while (it.hasNext()) {
	    ((ChangeListener)it.next()).stateChanged(ev);
	}
    }
    
    public void addChangeListener(ChangeListener l) {
	synchronized (listeners) {
	    listeners.add(l);
	}
    }
    
    public void removeChangeListener(ChangeListener l ) {
	synchronized (listeners) {
	    listeners.remove(l);
	}
    }
    
    private JFileChooser getJFileChooser(){
	//JFileChooser chooser = new JFileChooser();
	
	if (chooser == null) {
	    
	    chooser = new JFileChooser();
	    
	    chooser.setDialogTitle(NbBundle.getMessage(AddServerLocationVisualPanel.class, "LBL_ChooserName")); //NOI18N
	    chooser.setDialogType(JFileChooser.CUSTOM_DIALOG);
	    
	    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	    chooser.setApproveButtonMnemonic("Choose_Button_Mnemonic".charAt(0)); //NOI18N
	    chooser.setMultiSelectionEnabled(false);
	    chooser.addChoosableFileFilter(new FileFilter() {
		
		public boolean accept(File f) {
		    if(!f.exists() || !f.canRead() || !f.isDirectory() ) {
			return false;
		    }else{
			return true;
		    }
		}
		
		public String getDescription() {
		    return NbBundle.getMessage(AddServerLocationVisualPanel.class, "LBL_DirType");
		}
	    } );
	    chooser.setAcceptAllFileFilterUsed(false);
	    chooser.setApproveButtonToolTipText(NbBundle.getMessage(AddServerLocationVisualPanel.class, "LBL_ChooserName")); //NOI18N
	    
	    chooser.getAccessibleContext().setAccessibleName(NbBundle.getMessage(AddServerLocationVisualPanel.class, "LBL_ChooserName")); //NOI18N
	    chooser.getAccessibleContext().setAccessibleDescription(NbBundle.getMessage(AddServerLocationVisualPanel.class, "LBL_ChooserName")); //NOI18N
	}
	
	// set the current directory
	File currentLocation = new File(locationTextField.getText());
	if (currentLocation.exists() && currentLocation.isDirectory()) {
	    chooser.setCurrentDirectory(currentLocation.getParentFile());
	    chooser.setSelectedFile(currentLocation);
	}
	
	
	return chooser;
    }
    
    private String browseInstallLocation(){
	String insLocation = null;
	JFileChooser chooser = getJFileChooser();
	int returnValue = chooser.showDialog(this, NbBundle.getMessage(AddServerLocationVisualPanel.class, "LBL_ChooseButton")); //NOI18N
	
	if(returnValue == JFileChooser.APPROVE_OPTION){
	    insLocation = chooser.getSelectedFile().getAbsolutePath();
	}
	return insLocation;
    }
    
    //Getters for wizard panel fields
    
    /**
     * returns server lacation filled in appropriate textfield
     */
    public String getInstallLocation() {
	return locationTextField.getText();
    }
    
    public String getUserName() {
        return usernameTextField.getText().trim();
    }
    
    public String getPassword() {
        return new String(passwordTextField.getPassword());
    }
    
    //TODO: custom host and port
    public String getHost() {
        return "localhost";
    }
    
    public Integer getPort() {
        return 8080;
    }
    
    private static JFileChooser chooser = null;
    private final Set listeners = new HashSet();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JLabel credentialsLabel;
    private javax.swing.JLabel geHomeLabel;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JLabel loginDetailsLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
    
}
