/*
 *                 Sun Public License Notice
 *
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 *
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.xtest;

import java.io.File;
import javax.swing.JPanel;
import org.netbeans.api.project.Project;
import org.netbeans.api.project.ProjectUtils;

import org.openide.WizardDescriptor;
import org.openide.filesystems.FileUtil;
import org.openide.util.HelpCtx;
import org.openide.util.NbBundle;

public class XTestWizardPanelVisual extends JPanel implements HelpCtx.Provider {

    /** Creates new form PanelInitProject */
    public XTestWizardPanelVisual(Project project) {
        initComponents();
        projectTextField.setText(ProjectUtils.getInformation(project).getName());
        String testPath = FileUtil.getFileDisplayName(project.getProjectDirectory())+File.separator+"test"+File.separator;
        xtestScriptTextField.setText(testPath+"build.xml"); // NOI18N
        unitScriptTextField.setText(testPath+"build-unit.xml"); //NOI18N
        unitCfgTextField.setText(testPath+"cfg-unit.xml"); //NOI18N
        functionalScriptTextField.setText(testPath+"build-qa-functional.xml"); //NOI18N
        functionalCfgTextField.setText(testPath+"cfg-qa-functional.xml"); //NOI18N
        this.getAccessibleContext().setAccessibleDescription(NbBundle.getMessage(XTestWizardPanelVisual.class, "ACS_InfoPanel_A11YDesc"));  // NOI18N
        // Provide a name in the title bar.
        setName(NbBundle.getMessage(XTestWizardPanelVisual.class, "LBL_InfoPanel_FilesToBeCreated")); //NOI18N
    }


    boolean valid(WizardDescriptor wizardDescriptor) {
        return true;
    }

    void read (WizardDescriptor d) {
    }

    void store(WizardDescriptor d) {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        projectLabel = new javax.swing.JLabel();
        projectTextField = new javax.swing.JTextField();
        xtestScriptLabel = new javax.swing.JLabel();
        xtestScriptTextField = new javax.swing.JTextField();
        unitScriptLabel = new javax.swing.JLabel();
        unitScriptTextField = new javax.swing.JTextField();
        unitCfgLabel = new javax.swing.JLabel();
        unitCfgTextField = new javax.swing.JTextField();
        functionalScriptLabel = new javax.swing.JLabel();
        functionalScriptTextField = new javax.swing.JTextField();
        functionalCfgLabel = new javax.swing.JLabel();
        functionalCfgTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        bottomPlaceholder = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(500, 200));
        setRequestFocusEnabled(false);
        projectLabel.setLabelFor(projectTextField);
        projectLabel.setText(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("LBL_InfoPanel_Project"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 12, 0);
        add(projectLabel, gridBagConstraints);

        projectTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 12, 0);
        add(projectTextField, gridBagConstraints);
        projectTextField.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("ACS_InfoPanel_Project"));

        xtestScriptLabel.setLabelFor(xtestScriptTextField);
        xtestScriptLabel.setText(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("LBL_InfoPanel_XTest"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        add(xtestScriptLabel, gridBagConstraints);

        xtestScriptTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 6, 0);
        add(xtestScriptTextField, gridBagConstraints);
        xtestScriptTextField.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("ACS_InfoPanel_XTest"));

        unitScriptLabel.setLabelFor(unitScriptTextField);
        unitScriptLabel.setText(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("LBL_InfoPanel_XTest_Unit"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        add(unitScriptLabel, gridBagConstraints);

        unitScriptTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 6, 0);
        add(unitScriptTextField, gridBagConstraints);
        unitScriptTextField.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("ACS_InfoPanel_XTest_Unit"));

        unitCfgLabel.setLabelFor(unitCfgTextField);
        unitCfgLabel.setText(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("LBL_InfoPanel_XTest_Unit_CFG"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        add(unitCfgLabel, gridBagConstraints);

        unitCfgTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 6, 0);
        add(unitCfgTextField, gridBagConstraints);
        unitCfgTextField.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("ACS_InfoPanel_XTest_Unit_CFG"));

        functionalScriptLabel.setLabelFor(functionalScriptTextField);
        functionalScriptLabel.setText(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("LBL_InfoPanel_XTest_Functional"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        add(functionalScriptLabel, gridBagConstraints);

        functionalScriptTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 6, 0);
        add(functionalScriptTextField, gridBagConstraints);
        functionalScriptTextField.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("ACS_InfoPanel_XTest_Functional"));

        functionalCfgLabel.setLabelFor(functionalCfgTextField);
        functionalCfgLabel.setText(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("LBL_InfoPanel_XTest_Functional_CFG"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        add(functionalCfgLabel, gridBagConstraints);

        functionalCfgTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 6, 0);
        add(functionalCfgTextField, gridBagConstraints);
        functionalCfgTextField.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getBundle(XTestWizardPanelVisual.class).getString("ACS_InfoPanel_XTest_Functional_CFG"));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 0);
        add(jSeparator1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(bottomPlaceholder, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPlaceholder;
    private javax.swing.JLabel functionalCfgLabel;
    private javax.swing.JTextField functionalCfgTextField;
    private javax.swing.JLabel functionalScriptLabel;
    private javax.swing.JTextField functionalScriptTextField;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel projectLabel;
    private javax.swing.JTextField projectTextField;
    private javax.swing.JLabel unitCfgLabel;
    private javax.swing.JTextField unitCfgTextField;
    private javax.swing.JLabel unitScriptLabel;
    private javax.swing.JTextField unitScriptTextField;
    private javax.swing.JLabel xtestScriptLabel;
    private javax.swing.JTextField xtestScriptTextField;
    // End of variables declaration//GEN-END:variables

    /** Help context where to find more about the paste type action.
     * @return the help context for this action
     */
    public HelpCtx getHelpCtx() {
        return new HelpCtx(XTestWizardPanelVisual.class);
    }    
}
