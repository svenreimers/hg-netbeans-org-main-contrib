/*
 * OutputFilterEditor.java
 *
 * Created on 12. leden 2006, 11:40
 */

package org.netbeans.modules.toolsintegration;

import java.awt.Font;
import java.awt.SystemColor;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor.Message;
import org.openide.util.Utilities;


/**
 *
 * @author  Administrator
 */
public class OutputFilterEditor extends javax.swing.JPanel {
    
    static final String FILE_NAME= "{file_name}";
    static final String CLASS_NAME = "{class_name}";
    static final String LINE_NUMBER = "{line_number}";
    
    static final String FILE_NAME1= "\\{file_name\\}";
    static final String CLASS_NAME1 = "\\{class_name\\}";
    static final String LINE_NUMBER1 = "\\{line_number\\}";
    
    /** Creates new form OutputFilterEditor */
    public OutputFilterEditor (String filter) {
        initComponents ();
        tfOutputFilder.setText (filter);
        taDescription.setBackground (SystemColor.control);
    }
    
    String getValue () {
        return tfOutputFilder.getText ();
    }
    
    private static Icon errorIcon;
    
    private static Icon getErrorIcon () {
        if (errorIcon == null)
            errorIcon = new ImageIcon (Utilities.loadImage (
                "org/netbeans/modules/java/resources/error-glyph.gif"
            ));
        return errorIcon;
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        lOutputFilter = new javax.swing.JLabel();
        tfOutputFilder = new javax.swing.JTextField();
        taDescription = new javax.swing.JTextArea();
        bAddFileName = new javax.swing.JButton();
        bAddClassName = new javax.swing.JButton();
        bAddLineNumber = new javax.swing.JButton();
        lAddFileName = new javax.swing.JLabel();
        lAddClassName = new javax.swing.JLabel();
        lAddLineNumber = new javax.swing.JLabel();

        lOutputFilter.setText("Output Filter:");

        taDescription.setColumns(20);
        taDescription.setEditable(false);
        taDescription.setLineWrap(true);
        taDescription.setRows(6);
        taDescription.setText("Output Filter is regular expression. It is used for parsing of lines of process output. Line passing this filter can be highlighted in Output Window, and annotated in Editor. Use {class_name}, {file_name} and {line_number} marks to define important parts of process output.\n\nJavaC Example:\n{file_name}:{line_number}: .*\n");
        taDescription.setWrapStyleWord(true);
        taDescription.setMinimumSize(new java.awt.Dimension(0, 0));

        bAddFileName.setText("Add");
        bAddFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddFileNameActionPerformed(evt);
            }
        });

        bAddClassName.setText("Add");
        bAddClassName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddClassNameActionPerformed(evt);
            }
        });

        bAddLineNumber.setText("Add");
        bAddLineNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddLineNumberActionPerformed(evt);
            }
        });

        lAddFileName.setText("{file_name} - Represents name of file.");

        lAddClassName.setText("{class_name} - Represents the name of class.");

        lAddLineNumber.setText("{line_number} - Represents the line number.");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(taDescription, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(lOutputFilter)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(tfOutputFilder, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(lAddFileName)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 131, Short.MAX_VALUE)
                        .add(bAddFileName))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(lAddClassName)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 94, Short.MAX_VALUE)
                        .add(bAddClassName))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(lAddLineNumber)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 101, Short.MAX_VALUE)
                        .add(bAddLineNumber)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lOutputFilter)
                    .add(tfOutputFilder, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(taDescription, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bAddFileName)
                    .add(lAddFileName))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bAddClassName)
                    .add(lAddClassName))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bAddLineNumber)
                    .add(lAddLineNumber))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bAddLineNumberActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddLineNumberActionPerformed
        int position = tfOutputFilder.getCaret ().getDot ();
        String text = tfOutputFilder.getText ();
        tfOutputFilder.setText (text.substring (0, position) + 
            LINE_NUMBER +
            text.substring (position)
        );
    }//GEN-LAST:event_bAddLineNumberActionPerformed

    private void bAddClassNameActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddClassNameActionPerformed
        int position = tfOutputFilder.getCaret ().getDot ();
        String text = tfOutputFilder.getText ();
        tfOutputFilder.setText (text.substring (0, position) + 
            CLASS_NAME +
            text.substring (position)
        );
    }//GEN-LAST:event_bAddClassNameActionPerformed

    private void bAddFileNameActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddFileNameActionPerformed
        int position = tfOutputFilder.getCaret ().getDot ();
        String text = tfOutputFilder.getText ();
        tfOutputFilder.setText (text.substring (0, position) + 
            FILE_NAME +
            text.substring (position)
        );
    }//GEN-LAST:event_bAddFileNameActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddClassName;
    private javax.swing.JButton bAddFileName;
    private javax.swing.JButton bAddLineNumber;
    private javax.swing.JLabel lAddClassName;
    private javax.swing.JLabel lAddFileName;
    private javax.swing.JLabel lAddLineNumber;
    private javax.swing.JLabel lOutputFilter;
    private javax.swing.JTextArea taDescription;
    private javax.swing.JTextField tfOutputFilder;
    // End of variables declaration//GEN-END:variables
    
}
